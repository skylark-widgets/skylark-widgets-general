{"version":3,"sources":["skylark-widgets-tabs.js"],"names":["define","skylark","attach","splittable","mouse","Widget","tabs","TabButton","inherit","klassName","_construct","parent","tab","prototype","call","this","self","_elm","draggable","style","cursor","boxSizing","skin","getSkin","backgroundColor","buttonColor","icon","document","createWidget","pointerEvents","position","src","appendChild","text","overflow","textAlign","textOverflow","whiteSpace","color","textColor","title","createTextNode","close","opacity","display","closeIconUrl","onmouseenter","onmouseleave","onclick","dragState","NONE","ondragstart","event","dataTransfer","setData","index","ondrop","preventDefault","borderLeft","borderRight","borderBottom","borderTop","getData","parseInt","PREVIOUS","container","moveTabIndex","NEXT","ondragover","placement","TabGroup","TOP","BOTTOM","layerX","size","x","target","layerY","y","ondragend","ondragleave","onmousedown","which","isLeftMouseButton","selectTab","closeable","isMiddleMouseButton","removeTab","buttonOverColor","isSelected","setIcon","setName","data","updateSelection","updateSize","top","left","width","height","right","strings","Panel","TabElement","panelColor","preventDragEvents","uuid","generateUUID","button","active","updateMetadata","updateSettings","updateValues","updateObjectsView","activate","deactivate","undefined","update","requestAnimationFrame","object","isAttached","select","selected","destroy","klass","numerics","Vector2","set","setScalar","scalar","setX","setY","clone","constructor","copy","v","add","w","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","m","e","elements","min","Math","max","clamp","clampScalar","minVal","maxVal","clampLength","length","floor","ceil","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","PI","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","lerp","alpha","lerpVectors","v1","v2","equals","fromArray","array","offset","toArray","rotateAround","center","c","cos","sin","DragBuffer","buttons","element","barColor","get","attachTab","pop","empty","createElement","flexDirection","justifyContent","Locale","openTabToEditContent","buttonSize","setPlacement","items","focused","i","insertIndex","setParent","splice","push","updateItemIndex","updateInterface","origin","destination","getActiveTab","closeActual","selectNextTab","selectPreviousTab","addTab","TabConstructor","getTab","type","dontDestroy","indexOf","clear","forceAll","tabSize","LEFT","RIGHT","visible","updatePosition","TabButtonSplit","Editor","theme","Global","FILE_PATH","TabContainer","group","split","direction","concat","DualContainer","TabDualContainer","_elmA","_elmB","geom","TabGroupSplit","dragBorder","canSplit","canCollapse","tabArea","zIndex","pagePosition","clientX","clientY","contains","removeChild","buffer","bottom","orientation","HORIZONTAL","VERTICAL","elementA","attachA","elementB","attachB","collapse","main"],"mappings":";;;;;;;g4BAAAA,EAAA,6BACA,yBACA,SAAAC,GACA,OAAAA,EAAAC,OAAA,gBACAC,kBAKAH,EAAA,mCACA,+BACA,8BACA,UACA,SACAI,EACAC,EACAC,GAGA,aAUA,IAAAC,EAAAF,EAAAG,SACAC,UAAA,YAEAC,WAAA,SAAAC,EAAAC,GACAP,EAAAQ,UAAAH,WAAAI,KAAAC,KAAAJ,EAAA,OAEA,IAAAK,EAAAD,KAEAA,KAAAE,KAAAC,WAAA,EACAH,KAAAE,KAAAE,MAAAC,OAAA,UACAL,KAAAE,KAAAE,MAAAE,UAAA,aAEA,IAAAC,EAAAP,KAAAQ,UAGAR,KAAAE,KAAAE,MAAAK,gBAAAF,EAAAG,YAQAV,KAAAH,IAAAA,EAGAG,KAAAW,KAAAC,SAAAC,aAAA,OACAb,KAAAW,KAAAP,MAAAU,cAAA,OACAd,KAAAW,KAAAP,MAAAW,SAAA,WACAf,KAAAW,KAAAK,IAAAnB,EAAAc,KACAX,KAAAE,KAAAe,YAAAjB,KAAAW,MAGAX,KAAAkB,KAAAN,SAAAC,aAAA,OACAb,KAAAkB,KAAAd,MAAAW,SAAA,WACAf,KAAAkB,KAAAd,MAAAe,SAAA,SACAnB,KAAAkB,KAAAd,MAAAgB,UAAA,SACApB,KAAAkB,KAAAd,MAAAU,cAAA,OACAd,KAAAkB,KAAAd,MAAAiB,aAAA,WACArB,KAAAkB,KAAAd,MAAAkB,WAAA,SAGAtB,KAAAkB,KAAAd,MAAAmB,MAAAhB,EAAAiB,UAEAxB,KAAAE,KAAAe,YAAAjB,KAAAkB,MAGAlB,KAAAyB,MAAAb,SAAAc,eAAA7B,EAAA4B,OACAzB,KAAAkB,KAAAD,YAAAjB,KAAAyB,OAGAzB,KAAA2B,MAAAf,SAAAC,aAAA,OAhFAb,KAAA2B,MAAAxB,WAAA,EACAH,KAAA2B,MAAAvB,MAAAW,SAAA,WACAf,KAAA2B,MAAAvB,MAAAwB,QAAA,GACA5B,KAAA2B,MAAAvB,MAAAyB,QAAAhC,EAAA,UAAA,QAAA,OAGAG,KAAA2B,MAAAX,IAAAT,EAAAuB,aAEA9B,KAAAE,KAAAe,YAAAjB,KAAA2B,OAEA3B,KAAA2B,MAAAI,aAAA,WACA/B,KAAAI,MAAAwB,QAAA,GAGA5B,KAAA2B,MAAAK,aAAA,WACAhC,KAAAI,MAAAwB,QAAA,IAGA5B,KAAA2B,MAAAM,QAAA,WACAhC,EAAAJ,IAAA8B,SAKA,IAAAO,EAAA1C,EAAA2C,KAGAnC,KAAAE,KAAAkC,YAAA,SAAAC,GACAA,EAAAC,aAAAC,QAAA,MAAAtC,EAAAJ,IAAA2C,OACAN,EAAA1C,EAAA2C,MAIAnC,KAAAE,KAAAuC,OAAA,SAAAJ,GACAA,EAAAK,iBACA1C,KAAAI,MAAAuC,WAAA,KACA3C,KAAAI,MAAAwC,YAAA,KACA5C,KAAAI,MAAAyC,aAAA,KACA7C,KAAAI,MAAA0C,UAAA,KAEA,IAAAN,EAAAH,EAAAC,aAAAS,QAAA,OACA,KAAAP,IACAA,EAAAQ,SAAAR,MAEAvC,EAAAJ,IAAA2C,QAEAN,IAAA1C,EAAAyD,SACAhD,EAAAJ,IAAAqD,UAAAC,aAAAX,EAAAA,EAAAvC,EAAAJ,IAAA2C,MAAAvC,EAAAJ,IAAA2C,MAAA,EAAAvC,EAAAJ,IAAA2C,OAGAN,IAAA1C,EAAA4D,MACAnD,EAAAJ,IAAAqD,UAAAC,aAAAX,EAAAA,EAAAvC,EAAAJ,IAAA2C,MAAAvC,EAAAJ,IAAA2C,MAAAvC,EAAAJ,IAAA2C,MAAA,KAOAxC,KAAAE,KAAAmD,WAAA,SAAAhB,GAEApC,EAAAJ,IAAAqD,UAAAI,YAAAC,SAAAC,KAAAvD,EAAAJ,IAAAqD,UAAAI,YAAAC,SAAAE,OAEApB,EAAAqB,OAAA,GAAAzD,EAAA0D,KAAAC,GAAAvB,EAAAwB,SAAA7D,KAEAkC,IAAA1C,EAAA4D,OAEAlB,EAAA1C,EAAA4D,KACApD,KAAAI,MAAAuC,WAAA,KACA3C,KAAAI,MAAAwC,YAAA,uBAGAP,EAAAqB,OAAA,GAAAzD,EAAA0D,KAAAC,EAEA1B,IAAA1C,EAAAyD,WAEAf,EAAA1C,EAAAyD,SACAjD,KAAAI,MAAAwC,YAAA,KACA5C,KAAAI,MAAAuC,WAAA,uBAKAT,IAAA1C,EAAA2C,OAEAD,EAAA1C,EAAA2C,KACAnC,KAAAI,MAAAuC,WAAA,KACA3C,KAAAI,MAAAwC,YAAA,MAMAP,EAAAyB,OAAA,GAAA7D,EAAA0D,KAAAI,GAAA1B,EAAAwB,SAAA7D,KAEAkC,IAAA1C,EAAA4D,OAEAlB,EAAA1C,EAAA4D,KACApD,KAAAI,MAAA0C,UAAA,KACA9C,KAAAI,MAAAyC,aAAA,iBAGAR,EAAAyB,OAAA,GAAA7D,EAAA0D,KAAAI,EAEA7B,IAAA1C,EAAAyD,WAEAf,EAAA1C,EAAAyD,SACAjD,KAAAI,MAAAyC,aAAA,KACA7C,KAAAI,MAAA0C,UAAA,iBAKAZ,IAAA1C,EAAA2C,OAEAD,EAAA1C,EAAA2C,KACAnC,KAAAI,MAAAyC,aAAA,KACA7C,KAAAI,MAAA0C,UAAA,OAOA9C,KAAAE,KAAA8D,UAAA,SAAA3B,GACAA,EAAAK,iBAEAR,EAAA1C,EAAA2C,KACAnC,KAAAI,MAAAuC,WAAA,KACA3C,KAAAI,MAAAwC,YAAA,KACA5C,KAAAI,MAAAyC,aAAA,KACA7C,KAAAI,MAAA0C,UAAA,MAIA9C,KAAAE,KAAA+D,YAAA,SAAA5B,GACAA,EAAAK,iBAEAR,EAAA1C,EAAA2C,KACAnC,KAAAI,MAAAuC,WAAA,KACA3C,KAAAI,MAAAwC,YAAA,KACA5C,KAAAI,MAAAyC,aAAA,KACA7C,KAAAI,MAAA0C,UAAA,MAGA9C,KAAAE,KAAAgE,YAAA,SAAA7B,GACAA,EAAA8B,MAIA9E,EAAA+E,kBAAA/B,GAEApC,EAAAJ,IAAAqD,UAAAmB,UAAApE,EAAAJ,KAIAA,EAAAyE,WAAAjF,EAAAkF,oBAAAlC,IAEApC,EAAAJ,IAAAqD,UAAAsB,UAAAvE,EAAAJ,MAIAG,KAAAE,KAAA6B,aAAA,WAEA/B,KAAAI,MAAAK,gBAAAF,EAAAkE,iBAGAzE,KAAAE,KAAA8B,aAAA,WAEAnC,EAAA6E,aAEA1E,KAAAI,MAAAK,gBAAAF,EAAAkE,gBAGAzE,KAAAI,MAAAK,gBAAAF,EAAAG,cAWAiE,QAAA,SAAAhE,GACAX,KAAAH,IAAAc,KAAAA,EACAX,KAAAW,KAAAK,IAAAL,GASAiE,QAAA,SAAA1D,GACAlB,KAAAH,IAAA4B,MAAAP,EACAlB,KAAAyB,MAAAoD,KAAA3D,GAIA4D,gBAAA,WAEA,IAAAvE,EAAAP,KAAAQ,UACAR,KAAAE,KAAAE,MAAAK,gBAAAT,KAAAH,IAAA6E,aAAAnE,EAAAkE,gBAAAlE,EAAAG,aAGAqE,WAAA,WACAzF,EAAAQ,UAAAiF,WAAAhF,KAAAC,MAGAA,KAAAW,KAAAP,MAAA4E,IAAA,GAAAhF,KAAA2D,KAAAI,EAAA,KACA/D,KAAAW,KAAAP,MAAA6E,KAAA,GAAAjF,KAAA2D,KAAAI,EAAA,KACA/D,KAAAW,KAAAP,MAAA8E,MAAA,GAAAlF,KAAA2D,KAAAI,EAAA,KACA/D,KAAAW,KAAAP,MAAA+E,OAAA,GAAAnF,KAAA2D,KAAAI,EAAA,KAGA/D,KAAAkB,KAAAd,MAAA6E,KAAAjF,KAAA2D,KAAAI,EAAA,KACA/D,KAAAkB,KAAAd,MAAA4E,KAAAhF,KAAA2D,KAAAI,EAAA,IAAA,EAAA,KACA/D,KAAAkB,KAAAd,MAAA8E,MAAAlF,KAAA2D,KAAAC,EAAA,EAAA5D,KAAA2D,KAAAI,EAAA,KACA/D,KAAAkB,KAAAd,MAAA+E,OAAAnF,KAAA2D,KAAAI,EAAA,MAGA,IAAA/D,KAAAH,IAAAyE,WACAtE,KAAA2B,MAAAvB,MAAA8E,MAAA,GAAAlF,KAAA2D,KAAAI,EAAA,KACA/D,KAAA2B,MAAAvB,MAAA+E,OAAA,GAAAnF,KAAA2D,KAAAI,EAAA,KACA/D,KAAA2B,MAAAvB,MAAA4E,IAAA,GAAAhF,KAAA2D,KAAAI,EAAA,KACA/D,KAAA2B,MAAAvB,MAAAgF,MAAA,GAAApF,KAAA2D,KAAAI,EAAA,KACA/D,KAAA2B,MAAAvB,MAAAyB,QAAA,SAEA7B,KAAA2B,MAAAvB,MAAAyB,QAAA,OAGA7B,KAAA8E,qBAWA,OALAtF,EAAA2C,KAAA,EACA3C,EAAAyD,SAAA,EACAzD,EAAA4D,KAAA,EAGA7D,EAAAC,UAAAA,IAEAP,EAAA,oCACA,wBACA,oCACA,UACA,SACAoG,EACAC,EACA/F,GAEA,aAiBA,IAAAgG,EAAAD,EAAA7F,SACAC,UAAA,aAEAC,WAAA,SAAAC,EAAA0E,EAAApB,EAAAV,EAAAf,EAAAd,GACA2E,EAAAxF,UAAAH,WAAAI,KAAAC,KAAAJ,GAEA,IAEAW,EAAAP,KAAAQ,UAEAR,KAAAE,KAAAE,MAAAe,SAAA,UAEAnB,KAAAE,KAAAE,MAAAK,gBAAAF,EAAAiF,WACAxF,KAAAyF,oBAQAzF,KAAAkD,UAAAA,EAQAlD,KAAA0F,KAAAL,EAAAM,eAQA3F,KAAAwC,MAAAA,EAQAxC,KAAA4F,OAAA,KAGA5F,KAAAsE,UAAAA,EACAtE,KAAAyB,MAAAA,EACAzB,KAAAW,KAAAA,EAQAX,KAAA6F,QAAA,GAaAC,eAAA,aAaAC,eAAA,aAaAC,aAAA,aAaAC,kBAAA,aAaAnB,gBAAA,aAWAoB,SAAA,WAMA,IALA,IAAAlG,KAAA6F,QACA7F,KAAAmG,kBAIAC,IAAApG,KAAAqG,OAAA,CACA,IAAApG,EAAAD,KAEAqG,EAAA,WAEApG,EAAAoG,UAEA,IAAApG,EAAA4F,QAEAS,sBAAAD,IAIAC,sBAAAD,GAGArG,KAAA6F,QAAA,GAUAM,WAAA,WACAnG,KAAA6F,QAAA,GAWA1G,OAAA,SAAAoH,KAWAC,WAAA,SAAAD,GACA,OAAA,GAQA5E,MAAA,WACA3B,KAAAkD,UAAAsB,UAAAxE,OAQAyG,OAAA,WACAzG,KAAAkD,UAAAmB,UAAArE,OASA0E,WAAA,WACA,OAAA1E,OAAAA,KAAAkD,UAAAwD,UAWA/B,QAAA,SAAAhE,GACAX,KAAAW,KAAAA,EACAX,KAAA4F,OAAAjB,QAAAhE,IAWAiE,QAAA,SAAA1D,GACAlB,KAAAyB,MAAAP,EACAlB,KAAA4F,OAAAhB,QAAA1D,IAGAyF,QAAA,WACArB,EAAAxF,UAAA6G,QAAA5G,KAAAC,MAEA,OAAAA,KAAA4F,QACA5F,KAAA4F,OAAAe,aAOA,OAAApH,EAAAgG,WAAAA,IAEAtG,EAAA,kCACA,sBACA,cACA,SAAA2H,EAAAC,GAEA,IAAAC,EAAAF,GACAlH,UAAA,UAEAqH,IAAA,SAAAnD,EAAAG,GAKA,OAHA/D,KAAA4D,EAAAA,EACA5D,KAAA+D,EAAAA,EAEA/D,MAIAgH,UAAA,SAAAC,GAKA,OAHAjH,KAAA4D,EAAAqD,EACAjH,KAAA+D,EAAAkD,EAEAjH,MAGAkH,KAAA,SAAAtD,GAIA,OAFA5D,KAAA4D,EAAAA,EAEA5D,MAIAmH,KAAA,SAAApD,GAIA,OAFA/D,KAAA+D,EAAAA,EAEA/D,MAKAoH,MAAA,WAEA,OAAA,IAAApH,KAAAqH,YAAArH,KAAA4D,EAAA5D,KAAA+D,IAIAuD,KAAA,SAAAC,GAKA,OAHAvH,KAAA4D,EAAA2D,EAAA3D,EACA5D,KAAA+D,EAAAwD,EAAAxD,EAEA/D,MAIAwH,IAAA,SAAAD,EAAAE,GAEA,YAAArB,IAAAqB,GAEAC,QAAAC,KAAA,mFACA3H,KAAA4H,WAAAL,EAAAE,KAIAzH,KAAA4D,GAAA2D,EAAA3D,EACA5D,KAAA+D,GAAAwD,EAAAxD,EAEA/D,OAIA6H,UAAA,SAAAC,GAKA,OAHA9H,KAAA4D,GAAAkE,EACA9H,KAAA+D,GAAA+D,EAEA9H,MAIA4H,WAAA,SAAAG,EAAAC,GAKA,OAHAhI,KAAA4D,EAAAmE,EAAAnE,EAAAoE,EAAApE,EACA5D,KAAA+D,EAAAgE,EAAAhE,EAAAiE,EAAAjE,EAEA/D,MAIAiI,gBAAA,SAAAV,EAAAO,GAKA,OAHA9H,KAAA4D,GAAA2D,EAAA3D,EAAAkE,EACA9H,KAAA+D,GAAAwD,EAAAxD,EAAA+D,EAEA9H,MAIAkI,IAAA,SAAAX,EAAAE,GAEA,YAAArB,IAAAqB,GAEAC,QAAAC,KAAA,mFACA3H,KAAAmI,WAAAZ,EAAAE,KAIAzH,KAAA4D,GAAA2D,EAAA3D,EACA5D,KAAA+D,GAAAwD,EAAAxD,EAEA/D,OAIAoI,UAAA,SAAAN,GAKA,OAHA9H,KAAA4D,GAAAkE,EACA9H,KAAA+D,GAAA+D,EAEA9H,MAIAmI,WAAA,SAAAJ,EAAAC,GAKA,OAHAhI,KAAA4D,EAAAmE,EAAAnE,EAAAoE,EAAApE,EACA5D,KAAA+D,EAAAgE,EAAAhE,EAAAiE,EAAAjE,EAEA/D,MAIAqI,SAAA,SAAAd,GAKA,OAHAvH,KAAA4D,GAAA2D,EAAA3D,EACA5D,KAAA+D,GAAAwD,EAAAxD,EAEA/D,MAIAsI,eAAA,SAAArB,GAKA,OAHAjH,KAAA4D,GAAAqD,EACAjH,KAAA+D,GAAAkD,EAEAjH,MAIAuI,OAAA,SAAAhB,GAKA,OAHAvH,KAAA4D,GAAA2D,EAAA3D,EACA5D,KAAA+D,GAAAwD,EAAAxD,EAEA/D,MAIAwI,aAAA,SAAAvB,GAEA,OAAAjH,KAAAsI,eAAA,EAAArB,IAIAwB,aAAA,SAAAC,GAEA,IAAA9E,EAAA5D,KAAA4D,EAAAG,EAAA/D,KAAA+D,EACA4E,EAAAD,EAAAE,SAKA,OAHA5I,KAAA4D,EAAA+E,EAAA,GAAA/E,EAAA+E,EAAA,GAAA5E,EAAA4E,EAAA,GACA3I,KAAA+D,EAAA4E,EAAA,GAAA/E,EAAA+E,EAAA,GAAA5E,EAAA4E,EAAA,GAEA3I,MAIA6I,IAAA,SAAAtB,GAKA,OAHAvH,KAAA4D,EAAAkF,KAAAD,IAAA7I,KAAA4D,EAAA2D,EAAA3D,GACA5D,KAAA+D,EAAA+E,KAAAD,IAAA7I,KAAA+D,EAAAwD,EAAAxD,GAEA/D,MAIA+I,IAAA,SAAAxB,GAKA,OAHAvH,KAAA4D,EAAAkF,KAAAC,IAAA/I,KAAA4D,EAAA2D,EAAA3D,GACA5D,KAAA+D,EAAA+E,KAAAC,IAAA/I,KAAA+D,EAAAwD,EAAAxD,GAEA/D,MAIAgJ,MAAA,SAAAH,EAAAE,GAOA,OAHA/I,KAAA4D,EAAAkF,KAAAC,IAAAF,EAAAjF,EAAAkF,KAAAD,IAAAE,EAAAnF,EAAA5D,KAAA4D,IACA5D,KAAA+D,EAAA+E,KAAAC,IAAAF,EAAA9E,EAAA+E,KAAAD,IAAAE,EAAAhF,EAAA/D,KAAA+D,IAEA/D,MAIAiJ,YAAA,SAAAC,EAAAC,GAKA,OAHAnJ,KAAA4D,EAAAkF,KAAAC,IAAAG,EAAAJ,KAAAD,IAAAM,EAAAnJ,KAAA4D,IACA5D,KAAA+D,EAAA+E,KAAAC,IAAAG,EAAAJ,KAAAD,IAAAM,EAAAnJ,KAAA+D,IAEA/D,MAIAoJ,YAAA,SAAAP,EAAAE,GAEA,IAAAM,EAAArJ,KAAAqJ,SAEA,OAAArJ,KAAAwI,aAAAa,GAAA,GAAAf,eAAAQ,KAAAC,IAAAF,EAAAC,KAAAD,IAAAE,EAAAM,MAIAC,MAAA,WAKA,OAHAtJ,KAAA4D,EAAAkF,KAAAQ,MAAAtJ,KAAA4D,GACA5D,KAAA+D,EAAA+E,KAAAQ,MAAAtJ,KAAA+D,GAEA/D,MAIAuJ,KAAA,WAKA,OAHAvJ,KAAA4D,EAAAkF,KAAAS,KAAAvJ,KAAA4D,GACA5D,KAAA+D,EAAA+E,KAAAS,KAAAvJ,KAAA+D,GAEA/D,MAIAwJ,MAAA,WAKA,OAHAxJ,KAAA4D,EAAAkF,KAAAU,MAAAxJ,KAAA4D,GACA5D,KAAA+D,EAAA+E,KAAAU,MAAAxJ,KAAA+D,GAEA/D,MAIAyJ,YAAA,WAKA,OAHAzJ,KAAA4D,EAAA5D,KAAA4D,EAAA,EAAAkF,KAAAS,KAAAvJ,KAAA4D,GAAAkF,KAAAQ,MAAAtJ,KAAA4D,GACA5D,KAAA+D,EAAA/D,KAAA+D,EAAA,EAAA+E,KAAAS,KAAAvJ,KAAA+D,GAAA+E,KAAAQ,MAAAtJ,KAAA+D,GAEA/D,MAIA0J,OAAA,WAKA,OAHA1J,KAAA4D,GAAA5D,KAAA4D,EACA5D,KAAA+D,GAAA/D,KAAA+D,EAEA/D,MAIA2J,IAAA,SAAApC,GAEA,OAAAvH,KAAA4D,EAAA2D,EAAA3D,EAAA5D,KAAA+D,EAAAwD,EAAAxD,GAIA6F,MAAA,SAAArC,GAEA,OAAAvH,KAAA4D,EAAA2D,EAAAxD,EAAA/D,KAAA+D,EAAAwD,EAAA3D,GAIAiG,SAAA,WAEA,OAAA7J,KAAA4D,EAAA5D,KAAA4D,EAAA5D,KAAA+D,EAAA/D,KAAA+D,GAIAsF,OAAA,WAEA,OAAAP,KAAAgB,KAAA9J,KAAA4D,EAAA5D,KAAA4D,EAAA5D,KAAA+D,EAAA/D,KAAA+D,IAIAgG,gBAAA,WAEA,OAAAjB,KAAAkB,IAAAhK,KAAA4D,GAAAkF,KAAAkB,IAAAhK,KAAA+D,IAIAkG,UAAA,WAEA,OAAAjK,KAAAwI,aAAAxI,KAAAqJ,UAAA,IAIAa,MAAA,WAIA,IAAAA,EAAApB,KAAAqB,OAAAnK,KAAA+D,GAAA/D,KAAA4D,GAAAkF,KAAAsB,GAEA,OAAAF,GAIAG,WAAA,SAAA9C,GAEA,OAAAuB,KAAAgB,KAAA9J,KAAAsK,kBAAA/C,KAIA+C,kBAAA,SAAA/C,GAEA,IAAAgD,EAAAvK,KAAA4D,EAAA2D,EAAA3D,EAAA4G,EAAAxK,KAAA+D,EAAAwD,EAAAxD,EACA,OAAAwG,EAAAA,EAAAC,EAAAA,GAIAC,oBAAA,SAAAlD,GAEA,OAAAuB,KAAAkB,IAAAhK,KAAA4D,EAAA2D,EAAA3D,GAAAkF,KAAAkB,IAAAhK,KAAA+D,EAAAwD,EAAAxD,IAIA2G,UAAA,SAAArB,GAEA,OAAArJ,KAAAiK,YAAA3B,eAAAe,IAIAsB,KAAA,SAAApD,EAAAqD,GAKA,OAHA5K,KAAA4D,IAAA2D,EAAA3D,EAAA5D,KAAA4D,GAAAgH,EACA5K,KAAA+D,IAAAwD,EAAAxD,EAAA/D,KAAA+D,GAAA6G,EAEA5K,MAIA6K,YAAA,SAAAC,EAAAC,EAAAH,GAEA,OAAA5K,KAAAmI,WAAA4C,EAAAD,GAAAxC,eAAAsC,GAAApD,IAAAsD,IAIAE,OAAA,SAAAzD,GAEA,OAAAA,EAAA3D,IAAA5D,KAAA4D,GAAA2D,EAAAxD,IAAA/D,KAAA+D,GAIAkH,UAAA,SAAAC,EAAAC,GAOA,YALA/E,IAAA+E,IAAAA,EAAA,GAEAnL,KAAA4D,EAAAsH,EAAAC,GACAnL,KAAA+D,EAAAmH,EAAAC,EAAA,GAEAnL,MAIAoL,QAAA,SAAAF,EAAAC,GAQA,YANA/E,IAAA8E,IAAAA,WACA9E,IAAA+E,IAAAA,EAAA,GAEAD,EAAAC,GAAAnL,KAAA4D,EACAsH,EAAAC,EAAA,GAAAnL,KAAA+D,EAEAmH,GAKAG,aAAA,SAAAC,EAAApB,GAEA,IAAAqB,EAAAzC,KAAA0C,IAAAtB,GAAApC,EAAAgB,KAAA2C,IAAAvB,GAEAtG,EAAA5D,KAAA4D,EAAA0H,EAAA1H,EACAG,EAAA/D,KAAA+D,EAAAuH,EAAAvH,EAKA,OAHA/D,KAAA4D,EAAAA,EAAA2H,EAAAxH,EAAA+D,EAAAwD,EAAA1H,EACA5D,KAAA+D,EAAAH,EAAAkE,EAAA/D,EAAAwH,EAAAD,EAAAvH,EAEA/D,MAGAL,WAAA,SAAAiE,EAAAG,GAEA/D,KAAA4D,EAAAA,GAAA,EACA5D,KAAA+D,EAAAA,GAAA,KAiDA,OAAA8C,EAAAC,QAAAA,IAGA7H,EAAA,kCACA,iCACA,uCAEA,8BACA,oCACA,SACA,gBACA,gBAEA,SACA6H,EACA4E,EACApM,EACAgG,EACA/F,EACAgG,EACA/F,GAEA,aAYA,IAAA+D,EAAA+B,EAAA7F,SACAC,UAAA,WAEAC,WAAA,SAAAC,EAAA0D,GAEAgC,EAAAxF,UAAAH,WAAAI,KAAAC,KAAAJ,GAEA,IAAAK,EAAAD,KAEAO,EAAAP,KAAAQ,UAEAR,KAAAE,KAAAE,MAAAe,SAAA,UAEAnB,KAAAE,KAAAE,MAAAK,gBAAAF,EAAAiF,WAEAxF,KAAAyF,oBAGAzF,KAAA2L,QAAA,IAAArG,EAAAtF,MAEAA,KAAA2L,QAAAC,QAAAxL,MAAAK,gBAAAF,EAAAsL,SACA7L,KAAA2L,QAAAC,QAAAnJ,OAAA,SAAAJ,GAEAA,EAAAK,iBAEA,IAAAgD,EAAArD,EAAAC,aAAAS,QAAA,QACAlD,EAAA6L,EAAAI,IAAApG,GAEA7F,aAAA0F,IAEAtF,EAAA8L,UAAAlM,GACA6L,EAAAM,IAAAtG,KAKA1F,KAAAH,IAAA,IAAAyF,EAAAtF,MAQAA,KAAAiM,MAAArL,SAAAsL,cAAA,OACAlM,KAAAiM,MAAA7L,MAAAW,SAAA,WACAf,KAAAiM,MAAA7L,MAAAgB,UAAA,SACApB,KAAAiM,MAAA7L,MAAAyB,QAAA,OACA7B,KAAAiM,MAAA7L,MAAA8E,MAAA,OACAlF,KAAAiM,MAAA7L,MAAA+E,OAAA,OACAnF,KAAAiM,MAAA7L,MAAA+L,cAAA,SACAnM,KAAAiM,MAAA7L,MAAAgM,eAAA,SACApM,KAAAiM,MAAA7L,MAAAU,cAAA,OACAd,KAAAiM,MAAAhL,YAAAL,SAAAc,eAAA2K,OAAAC,uBACAtM,KAAAE,KAAAe,YAAAjB,KAAAiM,OAQAjM,KAAA0G,SAAA,KAUA1G,KAAAuM,WAAA,IAAAzF,EAAA,IAAA,IAQA9G,KAAAsD,eAAA8C,IAAA9C,EAAAA,EAAAC,EAAAC,IACAxD,KAAAwM,aAAAxM,KAAAsD,WAOAtD,KAAAyM,SAQAzM,KAAA0M,SAAA,EAEA1M,KAAAE,KAAA6B,aAAA,WAEA9B,EAAAyM,SAAA,GAEA1M,KAAAE,KAAA8B,aAAA,WAEA/B,EAAAyM,SAAA,IASA5G,eAAA,WACA,IAAA,IAAA6G,EAAA,EAAAA,EAAA3M,KAAAyM,MAAApD,OAAAsD,IAEA3M,KAAAyM,MAAAE,GAAA7G,kBASAG,kBAAA,WACA,IAAA,IAAA0G,EAAA,EAAAA,EAAA3M,KAAAyM,MAAApD,OAAAsD,IAEA3M,KAAAyM,MAAAE,GAAA1G,qBAWA8F,UAAA,SAAAlM,EAAA+M,GA0BA,OAxBA/M,EAAAqD,UAAAsB,UAAA3E,EAAA2C,OAAA,GAGA3C,EAAAqD,UAAAlD,KACAH,EAAA+F,OAAAiH,UAAA7M,KAAA2L,SACA9L,EAAAgN,UAAA7M,KAAAH,UAGAuG,IAAAwG,GACA/M,EAAA2C,MAAAoK,EACA5M,KAAAyM,MAAAK,OAAAF,EAAA,EAAA/M,KAEAA,EAAA2C,MAAAxC,KAAAyM,MAAApD,OACArJ,KAAAyM,MAAAM,KAAAlN,IAIA,OAAAG,KAAA0G,UACA1G,KAAAqE,UAAAxE,GAGAG,KAAAgN,kBACAhN,KAAAiN,kBAEApN,GAUAsD,aAAA,SAAA+J,EAAAC,GACA,IAAAvH,EAAA5F,KAAAyM,MAAAS,GAEAlN,KAAAyM,MAAAK,OAAAI,EAAA,GACAlN,KAAAyM,MAAAK,OAAAK,EAAA,EAAAvH,GAEA5F,KAAAgN,kBACAhN,KAAAiN,mBAGAnI,gBAAA,WACA,IAAA,IAAA6H,EAAA,EAAAA,EAAA3M,KAAAyM,MAAApD,OAAAsD,IAEA3M,KAAAyM,MAAAE,GAAA7H,mBAIAiB,eAAA,WACA,IAAA,IAAA4G,EAAA,EAAAA,EAAA3M,KAAAyM,MAAApD,OAAAsD,IAEA3M,KAAAyM,MAAAE,GAAA5G,kBASAqH,aAAA,WACA,OAAA,OAAApN,KAAA0G,SAEA1G,KAAA0G,SAGA,MAQA2G,YAAA,WACA,OAAArN,KAAA0G,UAAA1G,KAAA0G,SAAApC,YAEAtE,KAAA0G,SAAAP,aACAnG,KAAAwE,UAAAxE,KAAA0G,YAYArC,UAAA,SAAAxE,GACA,OAAAG,KAAA0G,UAEA1G,KAAA0G,SAAAP,aAIAtG,aAAA0F,GAEAvF,KAAA0G,SAAA7G,EACAG,KAAA0G,SAAAR,YAGA,iBAAArG,GAAAA,GAAA,GAAAA,EAAAG,KAAAyM,MAAApD,QAEArJ,KAAA0G,SAAA1G,KAAAyM,MAAA5M,GACAG,KAAA0G,SAAAR,YAIAlG,KAAA0G,SAAA,KAGA1G,KAAAiM,MAAA7L,MAAAyB,QAAA,OAAA7B,KAAA0G,SAAA,OAAA,OACA1G,KAAAiN,mBAQAK,cAAA,WACAtN,KAAAyM,MAAApD,OAAA,GAEArJ,KAAAqE,WAAArE,KAAA0G,SAAAlE,MAAA,GAAAxC,KAAAyM,MAAApD,SASAkE,kBAAA,WACAvN,KAAAyM,MAAApD,OAAA,IAEA,IAAArJ,KAAA0G,SAAAlE,MAEAxC,KAAAqE,UAAArE,KAAAyM,MAAApD,OAAA,GAIArJ,KAAAqE,UAAArE,KAAA0G,SAAAlE,MAAA,KAUAgL,OAAA,SAAAC,EAAAnJ,GACA,IAAAzE,EAAA,IAAA4N,EAAAzN,KAAAH,IAAAyE,EAAAtE,KAAAA,KAAAyM,MAAApD,QAaA,OAZAxJ,EAAA+F,OAAA,IAAApG,EAAAQ,KAAA2L,QAAA9L,GACAG,KAAAyM,MAAAM,KAAAlN,GAEA,OAAAG,KAAA0G,UAAA,IAAA1G,KAAAyM,MAAApD,OAEArJ,KAAAqE,UAAAxE,GAIAG,KAAAiN,kBAGApN,GAUA6N,OAAA,SAAAC,EAAApH,GACA,IAAA,IAAAoG,EAAA,EAAAA,EAAA3M,KAAAyM,MAAApD,OAAAsD,IAEA,GAAA3M,KAAAyM,MAAAE,aAAAgB,SAEAvH,IAAAG,GAAAvG,KAAAyM,MAAAE,GAAAnG,WAAAD,IAEA,OAAAvG,KAAAyM,MAAAE,GAKA,OAAA,MAUAnI,UAAA,SAAAhC,EAAAoL,GAOA,GALA,iBAAApL,IACAA,EAAAxC,KAAAyM,MAAAoB,QAAArL,IAIAA,GAAA,GAAAA,EAAAxC,KAAAyM,MAAApD,OAAA,CACA,IAAAxJ,EAAAG,KAAAyM,MAAAjK,GA2BA,OAzBA,IAAAoL,GAEA/N,EAAA8G,UAGA3G,KAAAyM,MAAAK,OAAAtK,EAAA,GACAxC,KAAAgN,kBAGAhN,KAAA0G,WAAA7G,GAEAG,KAAAyM,MAAApD,OAAA,EAEArJ,KAAAqE,UAAA,IAAA7B,EAAAA,EAAA,EAAA,GASAxC,KAAAqE,UAAA,MAGAxE,EAGA,OAAA,MASAiO,MAAA,SAAAC,GACA,IAAA,IAAAA,EACA,CACA,KAAA/N,KAAAyM,MAAApD,OAAA,GAEArJ,KAAAyM,MAAAT,MAAArF,UAGA3G,KAAAqE,UAAA,UAGA,CAEA,IADA,IAAAsI,EAAA,EACAA,EAAA3M,KAAAyM,MAAApD,QAEArJ,KAAAyM,MAAAE,GAAArI,WAEAtE,KAAAyM,MAAAE,GAAAhG,UACA3G,KAAAyM,MAAAK,OAAAH,EAAA,IAIAA,IAKA,IAAAnK,EAAAxC,KAAAyM,MAAAoB,QAAA7N,KAAA0G,WACA,IAAAlE,GAAAxC,KAAAyM,MAAApD,OAAA,GAEArJ,KAAAqE,UAAA,KAUA2I,gBAAA,WACA,IAAA,IAAAL,EAAA,EAAAA,EAAA3M,KAAAyM,MAAApD,OAAAsD,IAEA3M,KAAAyM,MAAAE,GAAAnK,MAAAmK,GAUAH,aAAA,SAAAlJ,GACAtD,KAAAsD,UAAAA,GAGAyB,WAAA,WACAO,EAAAxF,UAAAiF,WAAAhF,KAAAC,MAEA,IAAAgO,EAAAhO,KAAA2D,KAAAyD,QACAmF,EAAAvM,KAAAuM,WAAAnF,QACA+D,EAAAnL,KAAAuM,WAAAnF,QAGApH,KAAAsD,YAAAC,EAAAC,KAAAxD,KAAAsD,YAAAC,EAAAE,QAEA8I,EAAA3I,EAAA5D,KAAAyM,MAAApD,OAAArJ,KAAA2D,KAAAC,IAEA2I,EAAA3I,EAAA5D,KAAA2D,KAAAC,EAAA5D,KAAAyM,MAAApD,OACA8B,EAAAvH,EAAA2I,EAAA3I,GAEAoK,EAAAjK,GAAA/D,KAAAuM,WAAAxI,EACAoH,EAAApH,EAAA,GAEA/D,KAAAsD,YAAAC,EAAA0K,MAAAjO,KAAAsD,YAAAC,EAAA2K,QAEA3B,EAAAxI,EAAA/D,KAAAyM,MAAApD,OAAArJ,KAAA2D,KAAAI,IAEAwI,EAAAxI,EAAA/D,KAAA2D,KAAAI,EAAA/D,KAAAyM,MAAApD,OACA8B,EAAApH,EAAAwI,EAAAxI,GAEAiK,EAAApK,GAAA5D,KAAAuM,WAAA3I,EACAuH,EAAAvH,EAAA,GAIA,IAAA,IAAA+I,EAAA,EAAAA,EAAA3M,KAAAyM,MAAApD,OAAAsD,IACA,CACA,IAAA9M,EAAAG,KAAAyM,MAAAE,GACA9M,EAAAsO,QAAAnO,KAAA0G,WAAA7G,EACAA,EAAA8D,KAAA2D,KAAA0G,GACAnO,EAAAoN,kBAEA,IAAArH,EAAA/F,EAAA+F,OACAA,EAAAjC,KAAA2D,KAAAiF,GACA3G,EAAA7E,SAAAuG,KAAA6D,GACAvF,EAAA7E,SAAAuH,eAAAqE,GACA/G,EAAAqH,kBAGAjN,KAAAH,IAAA8D,KAAA2D,KAAA0G,GACAhO,KAAAH,IAAAkF,aAGA/E,KAAAsD,YAAAC,EAAAC,KAEAxD,KAAA2L,QAAA5K,SAAAgG,IAAA,EAAA,GACA/G,KAAA2L,QAAAyC,iBACApO,KAAA2L,QAAAhI,KAAAoD,IAAA/G,KAAA2D,KAAAC,EAAA5D,KAAAuM,WAAAxI,GACA/D,KAAA2L,QAAA5G,aAEA/E,KAAAH,IAAAkB,SAAAgG,IAAA,EAAA/G,KAAAuM,WAAAxI,GACA/D,KAAAH,IAAAuO,kBAEApO,KAAAsD,YAAAC,EAAAE,QAEAzD,KAAA2L,QAAA5K,SAAAgG,IAAA,EAAA/G,KAAA2D,KAAAI,EAAA/D,KAAAuM,WAAAxI,GACA/D,KAAA2L,QAAAyC,iBACApO,KAAA2L,QAAAhI,KAAAoD,IAAA/G,KAAA2D,KAAAC,EAAA5D,KAAAuM,WAAAxI,GACA/D,KAAA2L,QAAA5G,aAEA/E,KAAAH,IAAAkB,SAAAgG,IAAA,EAAA,GACA/G,KAAAH,IAAAuO,kBAEApO,KAAAsD,YAAAC,EAAA0K,MAEAjO,KAAA2L,QAAA5K,SAAAgG,IAAA,EAAA,GACA/G,KAAA2L,QAAAyC,iBACApO,KAAA2L,QAAAhI,KAAAoD,IAAA/G,KAAAuM,WAAA3I,EAAA5D,KAAA2D,KAAAI,GACA/D,KAAA2L,QAAA5G,aAEA/E,KAAAH,IAAAkB,SAAAgG,IAAA/G,KAAAuM,WAAA3I,EAAA,GACA5D,KAAAH,IAAAuO,kBAEApO,KAAAsD,YAAAC,EAAA2K,QAEAlO,KAAA2L,QAAA5K,SAAAgG,IAAA/G,KAAA2D,KAAAC,EAAA5D,KAAAuM,WAAA3I,EAAA,GACA5D,KAAA2L,QAAAyC,iBACApO,KAAA2L,QAAAhI,KAAAoD,IAAA/G,KAAAuM,WAAA3I,EAAA5D,KAAA2D,KAAAI,GACA/D,KAAA2L,QAAA5G,aAEA/E,KAAAH,IAAAkB,SAAAgG,IAAA,EAAA,GACA/G,KAAAH,IAAAuO,qBAaA,OANA7K,EAAAC,IAAA,EACAD,EAAAE,OAAA,EACAF,EAAA0K,KAAA,EACA1K,EAAA2K,MAAA,EAGA3O,EAAAgE,SAAAA,IAGAtE,EAAA,oDACA,+BACA,uCAEA,8BACA,UACA,iBACA,gBACA,SACAI,EAEAqM,EACApM,EAEAC,EACAgG,EACAhC,GAEA,aAYA,IAAA8K,EAAA/O,EAAAG,SACAC,UAAA,iBAEAC,WAAA,SAAAC,EAAAC,GAEAP,EAAAQ,UAAAH,WAAAI,KAAAC,KAAAJ,EAAA,OAEA,IAAAK,EAAAD,KAEAA,KAAAE,KAAAC,WAAA,EACAH,KAAAE,KAAAE,MAAAC,OAAA,UACAL,KAAAE,KAAAE,MAAAE,UAAA,aAGA,IAAAC,EAAAP,KAAAQ,UAEAR,KAAAE,KAAAE,MAAAK,gBAAAF,EAAAG,YAGAV,KAAAH,IAAAA,EAGAG,KAAAW,KAAAC,SAAAsL,cAAA,OACAlM,KAAAW,KAAAP,MAAAU,cAAA,OACAd,KAAAW,KAAAP,MAAAW,SAAA,WACAf,KAAAW,KAAAK,IAAAnB,EAAAc,KACAX,KAAAE,KAAAe,YAAAjB,KAAAW,MAGAX,KAAAkB,KAAAN,SAAAsL,cAAA,OACAlM,KAAAkB,KAAAd,MAAAW,SAAA,WACAf,KAAAkB,KAAAd,MAAAe,SAAA,SACAnB,KAAAkB,KAAAd,MAAAgB,UAAA,SACApB,KAAAkB,KAAAd,MAAAU,cAAA,OACAd,KAAAkB,KAAAd,MAAAiB,aAAA,WACArB,KAAAkB,KAAAd,MAAAkB,WAAA,SACAtB,KAAAkB,KAAAd,MAAAmB,MAAA+M,OAAAC,MAAA/M,UACAxB,KAAAE,KAAAe,YAAAjB,KAAAkB,MAGAlB,KAAAyB,MAAAb,SAAAc,eAAA7B,EAAA4B,OACAzB,KAAAkB,KAAAD,YAAAjB,KAAAyB,OAGAzB,KAAA2B,MAAAf,SAAAsL,cAAA,OACAlM,KAAA2B,MAAAxB,WAAA,EACAH,KAAA2B,MAAAvB,MAAAW,SAAA,WACAf,KAAA2B,MAAAvB,MAAAwB,QAAA,GACA5B,KAAA2B,MAAAvB,MAAAyB,QAAAhC,EAAA,UAAA,QAAA,OACAG,KAAA2B,MAAAX,IAAAwN,OAAAC,UAAA,uBACAzO,KAAAE,KAAAe,YAAAjB,KAAA2B,OAEA3B,KAAA2B,MAAAI,aAAA,WAEA/B,KAAAI,MAAAwB,QAAA,GAGA5B,KAAA2B,MAAAK,aAAA,WAEAhC,KAAAI,MAAAwB,QAAA,IAGA5B,KAAA2B,MAAAM,QAAA,WAEAhC,EAAAJ,IAAA8B,SAIA,IAAAO,EAAAmM,EAAAlM,KAGAnC,KAAAE,KAAAkC,YAAA,SAAAC,GACAA,EAAAC,aAAAC,QAAA,OAAAtC,EAAAJ,IAAA6F,MACAgG,EAAAqB,KAAA9M,EAAAJ,KAEAwC,EAAAC,aAAAC,QAAA,MAAAtC,EAAAJ,IAAA2C,OACAN,EAAAmM,EAAAlM,MAIAnC,KAAAE,KAAAuC,OAAA,SAAAJ,GAAAA,EAAAK,iBACA1C,KAAAI,MAAAuC,WAAA,KACA3C,KAAAI,MAAAwC,YAAA,KACA5C,KAAAI,MAAAyC,aAAA,KACA7C,KAAAI,MAAA0C,UAAA,KAEA,IAAA4C,EAAArD,EAAAC,aAAAS,QAAA,QACAlD,EAAA6L,EAAAI,IAAApG,GAEA,GAAA7F,aAAA0F,EAEA,GAAA1F,EAAAqD,YAAAjD,EAAAJ,IAAAqD,UAAA,CACA,IAAAV,EAAAH,EAAAC,aAAAS,QAAA,QACAP,EAAAQ,SAAAR,MAEAvC,EAAAJ,IAAA2C,QAEAN,IAAAmM,EAAApL,SAEAhD,EAAAJ,IAAAqD,UAAAC,aAAAX,EAAAA,EAAAvC,EAAAJ,IAAA2C,MAAAvC,EAAAJ,IAAA2C,MAAA,EAAAvC,EAAAJ,IAAA2C,OAGAN,IAAAmM,EAAAjL,MACAnD,EAAAJ,IAAAqD,UAAAC,aAAAX,EAAAA,EAAAvC,EAAAJ,IAAA2C,MAAAvC,EAAAJ,IAAA2C,MAAAvC,EAAAJ,IAAA2C,MAAA,GAGAkJ,EAAAM,IAAAtG,SAOAxD,IAAAmM,EAAApL,SACAhD,EAAAJ,IAAAqD,UAAA6I,UAAAlM,EAAAI,EAAAJ,IAAA2C,OAGAN,IAAAmM,EAAAjL,MACAnD,EAAAJ,IAAAqD,UAAA6I,UAAAlM,EAAAI,EAAAJ,IAAA2C,MAAA,GAGAkJ,EAAAM,IAAAtG,IAMA1F,KAAAE,KAAAmD,WAAA,SAAAhB,GACApC,EAAAJ,IAAAqD,UAAAI,YAAAC,EAAAC,KAAAvD,EAAAJ,IAAAqD,UAAAI,YAAAC,EAAAE,OACApB,EAAAqB,OAAA,GAAAzD,EAAA0D,KAAAC,GAAAvB,EAAAwB,SAAA7D,KAEAkC,IAAAmM,EAAAjL,OAEAlB,EAAAmM,EAAAjL,KACApD,KAAAI,MAAAuC,WAAA,KACA3C,KAAAI,MAAAwC,YAAA,uBAGAP,EAAAqB,OAAA,GAAAzD,EAAA0D,KAAAC,EACA1B,IAAAmM,EAAApL,WACAf,EAAAmM,EAAApL,SACAjD,KAAAI,MAAAwC,YAAA,KACA5C,KAAAI,MAAAuC,WAAA,uBAGAT,IAAAmM,EAAAlM,OACAD,EAAAmM,EAAAlM,KACAnC,KAAAI,MAAAuC,WAAA,KACA3C,KAAAI,MAAAwC,YAAA,MAIAP,EAAAyB,OAAA,GAAA7D,EAAA0D,KAAAI,GAAA1B,EAAAwB,SAAA7D,KAEAkC,IAAAmM,EAAAjL,OAEAlB,EAAAmM,EAAAjL,KACApD,KAAAI,MAAA0C,UAAA,KACA9C,KAAAI,MAAAyC,aAAA,iBAGAR,EAAAyB,OAAA,GAAA7D,EAAA0D,KAAAI,EAEA7B,IAAAmM,EAAApL,WAEAf,EAAAmM,EAAApL,SACAjD,KAAAI,MAAAyC,aAAA,KACA7C,KAAAI,MAAA0C,UAAA,iBAKAZ,IAAAmM,EAAAlM,OAEAD,EAAAmM,EAAAlM,KACAnC,KAAAI,MAAAyC,aAAA,KACA7C,KAAAI,MAAA0C,UAAA,OAOA9C,KAAAE,KAAA8D,UAAA,SAAA3B,GAEAA,EAAAK,iBAEAgJ,EAAAM,IAAA/L,EAAAJ,IAAA6F,MAEAxD,EAAAmM,EAAAlM,KACAnC,KAAAI,MAAAuC,WAAA,KACA3C,KAAAI,MAAAwC,YAAA,KACA5C,KAAAI,MAAAyC,aAAA,KACA7C,KAAAI,MAAA0C,UAAA,MAIA9C,KAAAE,KAAA+D,YAAA,SAAA5B,GAEAA,EAAAK,iBAEAR,EAAAmM,EAAAlM,KACAnC,KAAAI,MAAAuC,WAAA,KACA3C,KAAAI,MAAAwC,YAAA,KACA5C,KAAAI,MAAAyC,aAAA,KACA7C,KAAAI,MAAA0C,UAAA,MAIA9C,KAAAE,KAAAgE,YAAA,SAAA7B,GAEAA,EAAA8B,MAIA9E,EAAA+E,kBAAA/B,GACApC,EAAAJ,IAAAqD,UAAAmB,UAAApE,EAAAJ,KAIAA,EAAAyE,WAAAjF,EAAAkF,oBAAAlC,IAEApC,EAAAJ,IAAAqD,UAAAsB,UAAAvE,EAAAJ,MAKAG,KAAAE,KAAA6B,aAAA,WAGA/B,KAAAI,MAAAK,gBAAAF,EAAAkE,iBAIAzE,KAAAE,KAAA8B,aAAA,WAEAnC,EAAA6E,aAGA1E,KAAAI,MAAAK,gBAAAF,EAAAkE,gBAKAzE,KAAAI,MAAAK,gBAAAF,EAAAG,cAYAiE,QAAA,SAAAhE,GACAX,KAAAH,IAAAc,KAAAA,EACAX,KAAAW,KAAAK,IAAAL,GASAiE,QAAA,SAAA1D,GACAlB,KAAAH,IAAA4B,MAAAP,EACAlB,KAAAyB,MAAAoD,KAAA3D,GAGA4D,gBAAA,WAEA,IAAAvE,EAAAP,KAAAQ,UACAR,KAAAE,KAAAE,MAAAK,gBAAAT,KAAAH,IAAA6E,aAAAnE,EAAAkE,gBAAAlE,EAAAG,aAGAqE,WAAA,WACAzF,EAAAQ,UAAAiF,WAAAhF,KAAAC,MAGAA,KAAAW,KAAAP,MAAA4E,IAAA,GAAAhF,KAAA2D,KAAAI,EAAA,KACA/D,KAAAW,KAAAP,MAAA6E,KAAA,GAAAjF,KAAA2D,KAAAI,EAAA,KACA/D,KAAAW,KAAAP,MAAA8E,MAAA,GAAAlF,KAAA2D,KAAAI,EAAA,KACA/D,KAAAW,KAAAP,MAAA+E,OAAA,GAAAnF,KAAA2D,KAAAI,EAAA,KAGA/D,KAAAkB,KAAAd,MAAA6E,KAAAjF,KAAA2D,KAAAI,EAAA,KACA/D,KAAAkB,KAAAd,MAAA4E,KAAAhF,KAAA2D,KAAAI,EAAA,IAAA,EAAA,KACA/D,KAAAkB,KAAAd,MAAA8E,MAAAlF,KAAA2D,KAAAC,EAAA,EAAA5D,KAAA2D,KAAAI,EAAA,KACA/D,KAAAkB,KAAAd,MAAA+E,OAAAnF,KAAA2D,KAAAI,EAAA,MAGA,IAAA/D,KAAAH,IAAAyE,WAEAtE,KAAA2B,MAAAvB,MAAA8E,MAAA,GAAAlF,KAAA2D,KAAAI,EAAA,KACA/D,KAAA2B,MAAAvB,MAAA+E,OAAA,GAAAnF,KAAA2D,KAAAI,EAAA,KACA/D,KAAA2B,MAAAvB,MAAA4E,IAAA,GAAAhF,KAAA2D,KAAAI,EAAA,KACA/D,KAAA2B,MAAAvB,MAAAgF,MAAA,GAAApF,KAAA2D,KAAAI,EAAA,KACA/D,KAAA2B,MAAAvB,MAAAyB,QAAA,SAIA7B,KAAA2B,MAAAvB,MAAAyB,QAAA,OAGA7B,KAAA8E,qBAUA,OALAuJ,EAAAlM,KAAA,EACAkM,EAAApL,SAAA,EACAoL,EAAAjL,KAAA,EAGA7D,EAAAH,WAAAiP,eAAAA,IAGApP,EAAA,iDACA,oCACA,UACA,gBACA,SACAqG,EACA/F,EACAgE,GAEA,aAUA,IAAAmL,EAAApJ,EAAA7F,SACAC,UAAA,eAEAC,WAAA,SAAAC,GACA0F,EAAAxF,UAAAH,WAAAI,KAAAC,KAAAJ,GAEAI,KAAA2O,MAAA,MAWAC,MAAA,SAAAC,GAEA,OAAA7O,KAAA2O,MAAAC,MAAAC,IAGA1P,OAAA,SAAAyM,GAEA5L,KAAA2O,MAAA/C,EACA5L,KAAA2O,MAAA9B,UAAA7M,OAGA+E,WAAA,WAEAO,EAAAxF,UAAAiF,WAAAhF,KAAAC,MAEA,OAAAA,KAAA2O,QAEA3O,KAAA2O,MAAA5N,SAAAgG,IAAA,EAAA,GACA/G,KAAA2O,MAAAhL,KAAA2D,KAAAtH,KAAA2D,MACA3D,KAAA2O,MAAA1B,oBASAnH,eAAA,WAEA9F,KAAA2O,MAAA7I,kBAQAG,kBAAA,WAEAjG,KAAA2O,MAAA1I,qBAUAnB,gBAAA,WAEA9E,KAAA2O,MAAA7J,mBAUAiB,eAAA,WAEA/F,KAAA2O,MAAA5I,kBASAqH,aAAA,WAEA,IAAAvH,KAEA,GAAA7F,KAAA2O,iBAAApL,EACA,CACA,IAAA1D,EAAAG,KAAA2O,MAAAvB,eACA,OAAAvN,GAEAgG,EAAAkH,KAAAlN,QAKAgG,EAAAA,EAAAiJ,OAAA9O,KAAA2O,MAAAvB,gBAGA,OAAApN,KAAA2O,MAAAvB,gBAQAC,YAAA,WAEArN,KAAA2O,MAAAtB,eASAhJ,UAAA,SAAAxE,GAEAG,KAAA2O,MAAAtK,UAAAxE,IAQAyN,cAAA,WAEAtN,KAAA2O,MAAArB,iBAQAC,kBAAA,WAEAvN,KAAA2O,MAAApB,qBAUAC,OAAA,SAAAC,EAAAnJ,GAEA,OAAAtE,KAAA2O,MAAAnB,OAAAC,EAAAnJ,IAUAoJ,OAAA,SAAAC,EAAApH,GAEA,OAAAvG,KAAA2O,MAAAjB,OAAAC,EAAApH,IAQAuH,MAAA,SAAAC,GAEA/N,KAAA2O,MAAAb,WAKA,OAAAvO,EAAAH,WAAAsP,aAAAA,IAEAzP,EAAA,sDACA,6CACA,UACA,gBACA,SAAA8P,EAAAxP,EAAAgE,GACA,aAQA,IAAAyL,EAAAD,EAAAtP,SACAE,WAAA,SAAAC,GACAmP,EAAAjP,UAAAH,WAAAI,KAAAC,KAAAJ,GAEAI,KAAAE,KAAAE,MAAAe,SAAA,WASA2E,eAAA,WAEA9F,KAAAiP,MAAAnJ,iBACA9F,KAAAkP,MAAApJ,kBAQAG,kBAAA,WAEAjG,KAAAiP,MAAAhJ,oBACAjG,KAAAkP,MAAAjJ,qBAUAnB,gBAAA,WAEA9E,KAAAiP,MAAAnK,kBACA9E,KAAAkP,MAAApK,mBAUAiB,eAAA,WAEA/F,KAAAiP,MAAAlJ,iBACA/F,KAAAkP,MAAAnJ,kBASAqH,aAAA,WAEA,IAAAvH,KAEA,GAAA7F,KAAAiP,iBAAA1L,EACA,CACA,IAAA1D,EAAAG,KAAAiP,MAAA7B,eACA,OAAAvN,GAEAgG,EAAAkH,KAAAlN,QAKAgG,EAAAA,EAAAiJ,OAAA9O,KAAAiP,MAAA7B,gBAGA,GAAApN,KAAAkP,iBAAA3L,EACA,CACA,IAAA1D,EAAAG,KAAAkP,MAAA9B,eACA,OAAAvN,GAEAgG,EAAAkH,KAAAlN,GAEAG,KAAAiP,MAAA7B,oBAIAvH,EAAAA,EAAAiJ,OAAA9O,KAAAkP,MAAA9B,gBAGA,OAAAvH,GAQAwH,YAAA,WAEArN,KAAAiP,iBAAA1L,IAAAvD,KAAAiP,MAAAvC,SAEA1M,KAAAiP,MAAA5B,cAGArN,KAAAkP,iBAAA3L,IAAAvD,KAAAkP,MAAAxC,SAEA1M,KAAAkP,MAAA7B,eAUAhJ,UAAA,SAAAxE,GAEAG,KAAAiP,MAAA5K,UAAAxE,GACAG,KAAAkP,MAAA7K,UAAAxE,IAQAyN,cAAA,WAEAtN,KAAAiP,iBAAA1L,IAAAvD,KAAAiP,MAAAvC,SAEA1M,KAAAiP,MAAA3B,gBAGAtN,KAAAkP,iBAAA3L,IAAAvD,KAAAkP,MAAAxC,SAEA1M,KAAAkP,MAAA5B,iBASAC,kBAAA,WAEAvN,KAAAiP,iBAAA1L,IAAAvD,KAAAiP,MAAAvC,SAEA1M,KAAAiP,MAAA1B,oBAGAvN,KAAAkP,iBAAA3L,IAAAvD,KAAAkP,MAAAxC,SAEA1M,KAAAkP,MAAA3B,qBAaAC,OAAA,SAAAC,EAAAnJ,GAEA,IAAAzE,EAAAG,KAAAiP,MAAAzB,OAAAC,EAAAnJ,GAMA,OALA,OAAAzE,IAEAA,EAAAG,KAAAkP,MAAA1B,OAAAC,EAAAnJ,IAGAzE,GAUA6N,OAAA,SAAAC,EAAApH,GAEA,IAAA1G,EAAAG,KAAAiP,MAAAvB,OAAAC,EAAApH,GAOA,OALA,OAAA1G,IAEAA,EAAAG,KAAAkP,MAAAxB,OAAAC,EAAApH,IAGA1G,GAQAiO,MAAA,SAAAC,GAEA/N,KAAAiP,MAAAnB,MAAAC,GACA/N,KAAAkP,MAAApB,MAAAC,MAMA,OAAAxO,EAAAH,WAAA4P,iBAAAA,IAEA/P,EAAA,mDACA,oBACA,uCAEA,6CACA,UACA,eACA,iBACA,kBACA,uBACA,sBACA,SACAkQ,EACAzD,EACAqD,EACAxP,EACAgE,EACAgC,EACAmJ,EACAM,EACAX,GAEA,aAYA,IAAAe,EAAA7L,EAAA9D,SACAC,UAAA,gBAEAC,WAAA,SAAAC,EAAA0D,GAEAC,EAAAzD,UAAAH,WAAAI,KAAAC,KAAAJ,EAAA0D,GAEA,IAAArD,EAAAD,KAQAA,KAAAqP,WAAA,GAQArP,KAAAsP,UAAA,EAQAtP,KAAAuP,aAAA,EAQAvP,KAAAwP,QAAA5O,SAAAsL,cAAA,OACAlM,KAAAwP,QAAApP,MAAAqP,OAAA,OACAzP,KAAAwP,QAAApP,MAAAW,SAAA,WACAf,KAAAwP,QAAApP,MAAAK,gBAAA,2BACAT,KAAAwP,QAAApP,MAAAU,cAAA,OAGAd,KAAAH,IAAA+L,QAAAnJ,OAAA,SAAAJ,GAEAA,EAAAK,iBAEA,IAAAgD,EAAArD,EAAAC,aAAAS,QAAA,QACAlD,EAAA6L,EAAAI,IAAApG,GAEA,GAAA7F,aAAA0F,EACA,CACA,IAAAxE,EAAAoO,EAAAO,aAAAzP,EAAA2L,SACAhI,EAAAvB,EAAAsN,SAAA5O,EAAA6C,GAAA7C,EAAAkE,MACAlB,EAAA1B,EAAAuN,SAAA7O,EAAAgD,GAAAhD,EAAAiE,KAGApB,EAAA3D,EAAA0D,KAAAC,EAAA3D,EAAAoP,WAEApP,EAAA2O,MAAArL,EAAA0K,MAAAlC,UAAAlM,GAGA+D,EAAA3D,EAAA0D,KAAAC,GAAA,EAAA3D,EAAAoP,YAEApP,EAAA2O,MAAArL,EAAA2K,OAAAnC,UAAAlM,GAGAkE,EAAA9D,EAAA0D,KAAAI,EAAA9D,EAAAoP,WAEApP,EAAA2O,MAAArL,EAAAC,KAAAuI,UAAAlM,GAGAkE,EAAA9D,EAAA0D,KAAAI,GAAA,EAAA9D,EAAAoP,YAEApP,EAAA2O,MAAArL,EAAAE,QAAAsI,UAAAlM,GAIAI,EAAA8L,UAAAlM,GAGA6L,EAAAM,IAAAtG,GAGAzF,EAAAJ,IAAA+L,QAAAiE,SAAA5P,EAAAuP,UAEAvP,EAAAJ,IAAA+L,QAAAkE,YAAA7P,EAAAuP,UAKAxP,KAAAH,IAAA+L,QAAAvI,WAAA,SAAAhB,GAIA,GAFAA,EAAAK,iBAEAgJ,EAAAqE,OAAA,aAAAxK,EAAA,CAKA,IAAAxE,EAAAoO,EAAAO,aAAAzP,EAAA2L,SACAhI,EAAAvB,EAAAsN,SAAA5O,EAAA6C,GAAA7C,EAAAkE,MACAlB,EAAA1B,EAAAuN,SAAA7O,EAAAgD,GAAAhD,EAAAiE,KAGApB,EAAA3D,EAAA0D,KAAAC,EAAA3D,EAAAoP,YAEApP,EAAAuP,QAAApP,MAAAgF,MAAA,KACAnF,EAAAuP,QAAApP,MAAA4P,OAAA,KACA/P,EAAAuP,QAAApP,MAAA4E,IAAA,MACA/E,EAAAuP,QAAApP,MAAA6E,KAAA,MACAhF,EAAAuP,QAAApP,MAAA8E,MAAA,MACAjF,EAAAuP,QAAApP,MAAA+E,OAAA,OAEAlF,EAAAJ,IAAA+L,QAAAiE,SAAA5P,EAAAuP,UAEAvP,EAAAJ,IAAA+L,QAAA3K,YAAAhB,EAAAuP,UAIA5L,EAAA3D,EAAA0D,KAAAC,GAAA,EAAA3D,EAAAoP,aAEApP,EAAAuP,QAAApP,MAAA6E,KAAA,KACAhF,EAAAuP,QAAApP,MAAA4P,OAAA,KACA/P,EAAAuP,QAAApP,MAAA4E,IAAA,MACA/E,EAAAuP,QAAApP,MAAAgF,MAAA,MACAnF,EAAAuP,QAAApP,MAAA8E,MAAA,MACAjF,EAAAuP,QAAApP,MAAA+E,OAAA,OAEAlF,EAAAJ,IAAA+L,QAAAiE,SAAA5P,EAAAuP,UAEAvP,EAAAJ,IAAA+L,QAAA3K,YAAAhB,EAAAuP,UAIAzL,EAAA9D,EAAA0D,KAAAI,EAAA9D,EAAAoP,YAEApP,EAAAuP,QAAApP,MAAAgF,MAAA,KACAnF,EAAAuP,QAAApP,MAAA4P,OAAA,KACA/P,EAAAuP,QAAApP,MAAA4E,IAAA,MACA/E,EAAAuP,QAAApP,MAAA6E,KAAA,MACAhF,EAAAuP,QAAApP,MAAA8E,MAAA,OACAjF,EAAAuP,QAAApP,MAAA+E,OAAA,MAEAlF,EAAAJ,IAAA+L,QAAAiE,SAAA5P,EAAAuP,UAEAvP,EAAAJ,IAAA+L,QAAA3K,YAAAhB,EAAAuP,UAIAzL,EAAA9D,EAAA0D,KAAAI,GAAA,EAAA9D,EAAAoP,aAEApP,EAAAuP,QAAApP,MAAA4E,IAAA,KACA/E,EAAAuP,QAAApP,MAAAgF,MAAA,KACAnF,EAAAuP,QAAApP,MAAA4P,OAAA,MACA/P,EAAAuP,QAAApP,MAAA6E,KAAA,MACAhF,EAAAuP,QAAApP,MAAA8E,MAAA,OACAjF,EAAAuP,QAAApP,MAAA+E,OAAA,MAEAlF,EAAAJ,IAAA+L,QAAAiE,SAAA5P,EAAAuP,UAEAvP,EAAAJ,IAAA+L,QAAA3K,YAAAhB,EAAAuP,UAKAvP,EAAAJ,IAAA+L,QAAAiE,SAAA5P,EAAAuP,UAEAvP,EAAAJ,IAAA+L,QAAAkE,YAAA7P,EAAAuP,WAMAxP,KAAAH,IAAA+L,QAAA3H,YAAA,SAAA5B,GAEAA,EAAAK,iBAEAzC,EAAAJ,IAAA+L,QAAAiE,SAAA5P,EAAAuP,UAEAvP,EAAAJ,IAAA+L,QAAAkE,YAAA7P,EAAAuP,WAYAZ,MAAA,SAAAC,GAEA,GAAA7O,KAAAsP,SACA,MACAlJ,IAAAyI,IAEAA,EAAAtL,EAAA2K,OAGA,IAAAhL,EAAA,IAAA8L,EACApP,EAAAI,KAAAJ,OACA+O,EAAA,IAAAS,EAAAlM,EAAAlD,KAAAsD,WA8CA,OA5CAuL,IAAAtL,EAAA2K,OAEAhL,EAAA+M,YAAAlB,EAAAmB,WACAhN,EAAA/D,OAAAa,MACAkD,EAAA/D,OAAAwP,IAEAE,IAAAtL,EAAA0K,MAEA/K,EAAA+M,YAAAlB,EAAAmB,WACAhN,EAAA/D,OAAAwP,GACAzL,EAAA/D,OAAAa,OAEA6O,IAAAtL,EAAAE,QAEAP,EAAA+M,YAAAlB,EAAAoB,SACAjN,EAAA/D,OAAAa,MACAkD,EAAA/D,OAAAwP,IAEAE,IAAAtL,EAAAC,MAEAN,EAAA+M,YAAAlB,EAAAoB,SACAjN,EAAA/D,OAAAwP,GACAzL,EAAA/D,OAAAa,OAGAJ,aAAA8O,GAEA9O,EAAAT,OAAA+D,GACAtD,EAAAmF,cAEAnF,aAAAmP,IAEAnP,EAAAwQ,WAAApQ,MAEAJ,EAAAyQ,QAAAnN,GACAtD,EAAAmF,cAEAnF,EAAA0Q,WAAAtQ,OAEAJ,EAAA2Q,QAAArN,GACAtD,EAAAmF,eAIA4J,EAIAjH,QAAAC,KAAA,sCASA6I,SAAA,WAEA,GAAAxQ,KAAAuP,YAEA,GAAAvP,KAAAJ,kBAAAmP,EACA,CACA,IAAAnP,EAAAI,KAAAJ,OAAAA,OACA+O,EAAA3O,KAAAJ,OAAAwQ,WAAApQ,KAAAA,KAAAJ,OAAA0Q,SAAAtQ,KAAAJ,OAAAwQ,SAGAxQ,aAAAmP,EAEAnP,EAAAwQ,WAAApQ,KAAAJ,QAEAI,KAAAJ,OAAA+G,UACA3G,KAAA2G,UACA/G,EAAAyQ,QAAA1B,IAEA/O,EAAA0Q,WAAAtQ,KAAAJ,SAEAI,KAAAJ,OAAA+G,UACA3G,KAAA2G,UACA/G,EAAA2Q,QAAA5B,KAMA3O,KAAAJ,OAAA+G,UACA3G,KAAA2G,UACA/G,EAAAT,OAAAwP,IAGA/O,EAAAmF,kBAIA2C,QAAAC,KAAA,8EAKAD,QAAAC,KAAA,wCAWAoE,UAAA,SAAAlM,EAAA+M,GAEA,IAAA1J,EAAArD,EAAAqD,UACArD,EAAA0D,EAAAzD,UAAAiM,UAAAhM,KAAAC,KAAAH,EAAA+M,GAOA,OALA,IAAA1J,EAAAuJ,MAAApD,QAEAnG,EAAAsN,WAGA3Q,GAGA2E,UAAA,SAAAhC,EAAAoL,GAEArK,EAAAzD,UAAA0E,UAAAzE,KAAAC,KAAAwC,EAAAoL,GAEA,IAAA5N,KAAAyM,MAAApD,SAAA,IAAAuE,GAEA5N,KAAAwQ,YAIAhD,OAAA,SAAAC,EAAAnJ,GAEA,IAAAzE,EAAA,IAAA4N,EAAAzN,KAAAH,IAAAyE,EAAAtE,KAAAA,KAAAyM,MAAApD,QAeA,OAdAxJ,EAAA+F,OAAA,IAAAyI,EAAArO,KAAA2L,QAAA9L,GACAA,EAAAoN,kBAEAjN,KAAAyM,MAAAM,KAAAlN,GAEA,OAAAG,KAAA0G,UAAA,IAAA1G,KAAAyM,MAAApD,OAEArJ,KAAAqE,UAAAxE,GAIAG,KAAAiN,kBAGApN,KAMA,OAAAN,EAAAH,WAAAgQ,cAAAA,IAEAnQ,EAAA,6BACA,SACA,eACA,gBACA,cACA,gCACA,6BACA,kCACA,gCAEA,SAAAM,GACA,OAAAA,IAEAN,EAAA,wBAAA,6BAAA,SAAAwR,GAAA,OAAAA","file":"../skylark-widgets-tabs.js","sourcesContent":["define('skylark-widgets-tabs/tabs',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.tabs\",{\r\n\t\tsplittable : {\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n});\ndefine('skylark-widgets-tabs/tab-button',[\r\n\t\"skylark-devices-points/mouse\",\r\n\t\"skylark-widgets-base/widget\",\r\n\t\"./tabs\"\r\n],function(\r\n\tmouse,\r\n\tWidget, \r\n\ttabs\r\n){\r\n\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Tab button is used to navigate trough tabs.\r\n\t *\r\n\t * @class TabButton\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent\r\n\t * @param {TabWidget} tab\r\n\t */\r\n\t var TabButton = Widget.inherit({\r\n\t \t\"klassName\" : \"TabButton\",\r\n\r\n\t\t\"_construct\" : function(parent, tab) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tthis._elm.draggable = true;\r\n\t\t\tthis._elm.style.cursor = \"pointer\";\r\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.buttonColor;\r\n\t\t\tthis._elm.style.backgroundColor = skin.buttonColor;\r\n\r\n\t\t\t/**\r\n\t\t\t * Pointer to the tab element related with this button.\r\n\t\t\t *\r\n\t\t\t * @property tab\r\n\t\t\t * @type {TabWidget}\r\n\t\t\t */\r\n\t\t\tthis.tab = tab;\r\n\r\n\t\t\t//Icon\r\n\t\t\tthis.icon = document.createWidget(\"img\");\r\n\t\t\tthis.icon.style.pointerEvents = \"none\";\r\n\t\t\tthis.icon.style.position = \"absolute\";\r\n\t\t\tthis.icon.src = tab.icon;\r\n\t\t\tthis._elm.appendChild(this.icon);\r\n\r\n\t\t\t//Text\r\n\t\t\tthis.text = document.createWidget(\"div\");\r\n\t\t\tthis.text.style.position = \"absolute\";\r\n\t\t\tthis.text.style.overflow = \"hidden\";\r\n\t\t\tthis.text.style.textAlign = \"center\";\r\n\t\t\tthis.text.style.pointerEvents = \"none\";\r\n\t\t\tthis.text.style.textOverflow = \"ellipsis\";\r\n\t\t\tthis.text.style.whiteSpace = \"nowrap\";\r\n\r\n\t\t\t//this.text.style.color = Editor.theme.textColor;\r\n\t\t\tthis.text.style.color = skin.textColor;\r\n\r\n\t\t\tthis._elm.appendChild(this.text);\r\n\r\n\t\t\t//Title\r\n\t\t\tthis.title = document.createTextNode(tab.title);\r\n\t\t\tthis.text.appendChild(this.title);\r\n\r\n\t\t\t//Close button\r\n\t\t\tthis.close = document.createWidget(\"img\");\r\n\t\t\tthis.close.draggable = false;\r\n\t\t\tthis.close.style.position = \"absolute\";\r\n\t\t\tthis.close.style.opacity = 0.5;\r\n\t\t\tthis.close.style.display = (tab.closeable) ? \"block\" : \"none\";\r\n\t\t\t\r\n\t\t\t//this.close.src = Global.FILE_PATH + \"icons/misc/close.png\";\r\n\t\t\tthis.close.src = skin.closeIconUrl;\r\n\t\t\t\r\n\t\t\tthis._elm.appendChild(this.close);\r\n\r\n\t\t\tthis.close.onmouseenter = function(){\r\n\t\t\t\tthis.style.opacity = 1.0;\r\n\t\t\t};\r\n\r\n\t\t\tthis.close.onmouseleave = function(){\r\n\t\t\t\tthis.style.opacity = 0.5;\r\n\t\t\t};\r\n\r\n\t\t\tthis.close.onclick = function()\t{\r\n\t\t\t\tself.tab.close();\r\n\t\t\t};\r\n\r\n\r\n\t\t\t//Drag state\r\n\t\t\tvar dragState = TabButton.NONE;\r\n\r\n\t\t\t//Drag control\r\n\t\t\tthis._elm.ondragstart = function(event) {\r\n\t\t\t\tevent.dataTransfer.setData(\"tab\", self.tab.index);\r\n\t\t\t\tdragState = TabButton.NONE;\r\n\t\t\t};\r\n\r\n\t\t\t//Drag drop\r\n\t\t\tthis._elm.ondrop = function(event) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tthis.style.borderLeft = null;\r\n\t\t\t\tthis.style.borderRight = null;\r\n\t\t\t\tthis.style.borderBottom = null;\r\n\t\t\t\tthis.style.borderTop = null;\r\n\r\n\t\t\t\tvar index = event.dataTransfer.getData(\"tab\");\r\n\t\t\t\tif(index !== \"\") {\r\n\t\t\t\t\tindex = parseInt(index);\r\n\r\n\t\t\t\t\tif(index !== self.tab.index) {\t\r\n\t\t\t\t\t\t//Before\r\n\t\t\t\t\t\tif(dragState === TabButton.PREVIOUS) {\r\n\t\t\t\t\t\t\tself.tab.container.moveTabIndex(index, index < self.tab.index ? self.tab.index - 1 : self.tab.index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//After\r\n\t\t\t\t\t\telse if(dragState === TabButton.NEXT){\r\n\t\t\t\t\t\t\tself.tab.container.moveTabIndex(index, index < self.tab.index ? self.tab.index : self.tab.index + 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t//Drag over\r\n\t\t\tthis._elm.ondragover = function(event)\r\n\t\t\t{\r\n\t\t\t\tif(self.tab.container.placement === TabGroup.TOP || self.tab.container.placement === TabGroup.BOTTOM)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(event.layerX > self.size.x * 0.8 || event.target !== this)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(dragState !== TabButton.NEXT)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdragState = TabButton.NEXT;\r\n\t\t\t\t\t\t\tthis.style.borderLeft = null;\r\n\t\t\t\t\t\t\tthis.style.borderRight = \"thick solid #999999\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(event.layerX < self.size.x * 0.2)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(dragState !== TabButton.PREVIOUS)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdragState = TabButton.PREVIOUS;\r\n\t\t\t\t\t\t\tthis.style.borderRight = null;\r\n\t\t\t\t\t\t\tthis.style.borderLeft = \"thick solid #999999\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(dragState !== TabButton.NONE\t)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdragState = TabButton.NONE;\r\n\t\t\t\t\t\t\tthis.style.borderLeft = null;\r\n\t\t\t\t\t\t\tthis.style.borderRight = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(event.layerY > self.size.y * 0.7 || event.target !== this)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(dragState !== TabButton.NEXT)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdragState = TabButton.NEXT;\r\n\t\t\t\t\t\t\tthis.style.borderTop = null;\r\n\t\t\t\t\t\t\tthis.style.borderBottom = \"solid #999999\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(event.layerY < self.size.y * 0.3)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(dragState !== TabButton.PREVIOUS)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdragState = TabButton.PREVIOUS;\r\n\t\t\t\t\t\t\tthis.style.borderBottom = null;\r\n\t\t\t\t\t\t\tthis.style.borderTop = \"solid #999999\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(dragState !== TabButton.NONE\t)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdragState = TabButton.NONE;\r\n\t\t\t\t\t\t\tthis.style.borderBottom = null;\r\n\t\t\t\t\t\t\tthis.style.borderTop = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t//Drag end\r\n\t\t\tthis._elm.ondragend = function(event){\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\r\n\t\t\t\tdragState = TabButton.NONE;\r\n\t\t\t\tthis.style.borderLeft = null;\r\n\t\t\t\tthis.style.borderRight = null;\r\n\t\t\t\tthis.style.borderBottom = null;\r\n\t\t\t\tthis.style.borderTop = null;\r\n\t\t\t};\r\n\r\n\t\t\t//Drag leave\r\n\t\t\tthis._elm.ondragleave = function(event)\t{\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\r\n\t\t\t\tdragState = TabButton.NONE;\r\n\t\t\t\tthis.style.borderLeft = null;\r\n\t\t\t\tthis.style.borderRight = null;\r\n\t\t\t\tthis.style.borderBottom = null;\r\n\t\t\t\tthis.style.borderTop = null;\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmousedown = function(event)\t{\r\n\t\t\t\tvar button = event.which - 1;\r\n\r\n\t\t\t\t//Select tab\r\n\t\t\t\t//if(button === Mouse.LEFT)\r\n\t\t\t\tif(mouse.isLeftMouseButton(event))\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tab.container.selectTab(self.tab);\r\n\t\t\t\t}\r\n\t\t\t\t//Close tab\r\n\t\t\t\t//else if(tab.closeable && button === Mouse.MIDDLE)\r\n\t\t\t\telse if(tab.closeable && mouse.isMiddleMouseButton(event))\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tab.container.removeTab(self.tab);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmouseenter = function()\t{\r\n\t\t\t\t//this.style.backgroundColor = Editor.theme.buttonOverColor;\r\n\t\t\t\tthis.style.backgroundColor = skin.buttonOverColor;\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmouseleave = function()\r\n\t\t\t{\r\n\t\t\t\tif(tab.isSelected()){\r\n\t\t\t\t\t//this.style.backgroundColor = Editor.theme.buttonOverColor;\r\n\t\t\t\t\tthis.style.backgroundColor = skin.buttonOverColor;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//this.style.backgroundColor = Editor.theme.buttonColor;\r\n\t\t\t\t\tthis.style.backgroundColor = skin.buttonColor;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the tab icon image.\r\n\t\t *\r\n\t\t * @method setIcon\r\n\t\t * @param {String} icon URL of the icon image.\r\n\t\t */\r\n\t\tsetIcon : function(icon) {\r\n\t\t\tthis.tab.icon = icon;\r\n\t\t\tthis.icon.src = icon;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text to be displayed in the button as its name.\r\n\t\t *\r\n\t\t * @method setName\r\n\t\t * @param {String} text\r\n\t\t */\r\n\t\tsetName : function(text) {\r\n\t\t\tthis.tab.title = text;\r\n\t\t\tthis.title.data = text;\r\n\t\t},\r\n\r\n\t\t//Update selected state of the button\r\n\t\tupdateSelection : function() {\r\n\t\t\t//this._elm.style.backgroundColor = this.tab.isSelected() ? Editor.theme.buttonOverColor : Editor.theme.buttonColor;\r\n\t\t\tvar skin = this.getSkin();\r\n\t\t\tthis._elm.style.backgroundColor = this.tab.isSelected() ? skin.buttonOverColor : skin.buttonColor;\r\n\t\t},\r\n\r\n\t\tupdateSize : function() {\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\t\t\t\r\n\t\t\t//Icon\r\n\t\t\tthis.icon.style.top = (this.size.y * 0.2) + \"px\";\r\n\t\t\tthis.icon.style.left = (this.size.y * 0.2) + \"px\"\r\n\t\t\tthis.icon.style.width = (this.size.y * 0.6) + \"px\";\r\n\t\t\tthis.icon.style.height = (this.size.y * 0.6) + \"px\";\r\n\r\n\t\t\t//Text\r\n\t\t\tthis.text.style.left = this.size.y + \"px\";\r\n\t\t\tthis.text.style.top = ((this.size.y - 12) / 2) + \"px\";\r\n\t\t\tthis.text.style.width = (this.size.x - 2 * this.size.y) + \"px\";\r\n\t\t\tthis.text.style.height = this.size.y + \"px\";\r\n\r\n\t\t\t//Close\r\n\t\t\tif(this.tab.closeable === true) {\r\n\t\t\t\tthis.close.style.width = (this.size.y * 0.4) + \"px\";\r\n\t\t\t\tthis.close.style.height = (this.size.y * 0.4) + \"px\";\r\n\t\t\t\tthis.close.style.top = (this.size.y * 0.3) + \"px\";\r\n\t\t\t\tthis.close.style.right = (this.size.y * 0.3) + \"px\";\r\n\t\t\t\tthis.close.style.display = \"block\";\r\n\t\t\t} else \t{\r\n\t\t\t\tthis.close.style.display = \"none\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateSelection();\r\n\t\t}\r\n\r\n\t });\r\n\r\n\r\n\tTabButton.NONE = 0;\r\n\tTabButton.PREVIOUS = 1;\r\n\tTabButton.NEXT = 2;\r\n\r\n\r\n\treturn tabs.TabButton = TabButton;\r\n});\ndefine('skylark-widgets-tabs/tab-element',[\r\n\t\"skylark-langx-strings\",\r\n\t\"skylark-widgets-base/panels/panel\",\r\n\t\"./tabs\"\r\n],function(\r\n\tstrings,\r\n\tPanel,\r\n\ttabs\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Tab element is used to create tabbed elements.\r\n\t *\r\n\t * These are used to implement the main components of the interface (editors, menus, etc).\r\n\t *\r\n\t * @class TabElement\r\n\t * @extends {Panel}\r\n\t * @param {Widget} parent Parent element.\r\n\t * @param {Boolean} closeable If false the tab cannot be closed.\r\n\t * @param {TabContainer} container Container for this tab.\r\n\t * @param {Number} index Index of the tab.\r\n\t * @param {String} title Title of the tab.\r\n\t * @param {String} icon Icon of the tab.\r\n\t */\r\n\r\n\tvar TabElement = Panel.inherit({\r\n\t\t\"klassName\" : \"TabElement\",\r\n\r\n\t\t\"_construct\" : function (parent, closeable, container, index, title, icon){\r\n\t\t\tPanel.prototype._construct.call(this, parent);\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.style.overflow = \"visible\";\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.panelColor;\r\n\t\t\tthis._elm.style.backgroundColor = skin.panelColor;\r\n\t\t\tthis.preventDragEvents();\r\n\r\n\t\t\t/**\r\n\t\t\t * Pointer to the group where this tab is.\r\n\t\t\t *\r\n\t\t\t * @property container\r\n\t\t\t * @type {TabGroup}\r\n\t\t\t */\r\n\t\t\tthis.container = container;\r\n\r\n\t\t\t/**\r\n\t\t\t * UUID of this tab.\r\n\t\t\t *\r\n\t\t\t * @property uuid\r\n\t\t\t * @type {String}\r\n\t\t\t */\r\n\t\t\tthis.uuid = strings.generateUUID();\r\n\r\n\t\t\t/**\r\n\t\t\t * Index of the tab inside of the container\r\n\t\t\t *\r\n\t\t\t * @property index\r\n\t\t\t * @type {Number}\r\n\t\t\t */\r\n\t\t\tthis.index = index;\r\n\r\n\t\t\t/**\r\n\t\t\t * Pointer to the button associated with this tab.\r\n\t\t\t *\r\n\t\t\t * @property container\r\n\t\t\t * @type {TabButton}\r\n\t\t\t */\r\n\t\t\tthis.button = null;\r\n\r\n\t\t\t//Meta\r\n\t\t\tthis.closeable = closeable;\r\n\t\t\tthis.title = title;\r\n\t\t\tthis.icon = icon;\r\n\r\n\t\t\t/**\r\n\t\t\t * Indicates if the tab is currently active (on display).\r\n\t\t\t *\r\n\t\t\t * @property active\r\n\t\t\t * @type {Boolean}\r\n\t\t\t */\r\n\t\t\tthis.active = false;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Update tab metadata (name, icon, ...)\r\n\t\t * \r\n\t\t * Called after applying changes to object.\r\n\t\t * \r\n\t\t * Called for every tab.\r\n\t\t *\r\n\t\t * @method updateMetadata\r\n\t\t */\r\n\t\tupdateMetadata : function(){\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update tab settings.\r\n\t\t * \r\n\t\t * Called after settings of the editor are changed.\r\n\t\t * \r\n\t\t * Called for every tab.\r\n\t\t *\r\n\t\t * @method updateSettings\r\n\t\t */\r\n\t\tupdateSettings : function(){\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update tab values of the gui for the object attached.\r\n\t\t * \r\n\t\t * Called when properties of objects are changed.\r\n\t\t * \r\n\t\t * Called only for active tabs.\r\n\t\t *\r\n\t\t * @method updateValues\r\n\t\t */\r\n\t\tupdateValues : function(){\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update tab object view.\r\n\t\t * \r\n\t\t * Called when objects are added, removed, etc.\r\n\t\t * \r\n\t\t * Called only for active tabs.\r\n\t\t *\r\n\t\t * @method updateObjectsView\r\n\t\t */\r\n\t\tupdateObjectsView : function(){\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update tab after object selection changed.\r\n\t\t * \r\n\t\t * Called after a new object was selected.\r\n\t\t * \r\n\t\t * Called only for active tabs.\r\n\t\t *\r\n\t\t * @method updateSelection\r\n\t\t */\r\n\t\tupdateSelection : function(){\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Activate tab.\r\n\t\t * \r\n\t\t * Called when a tab becomes active (visible).\r\n\t\t *\r\n\t\t * @method activate\r\n\t\t */\r\n\t\tactivate : function()\t{\r\n\t\t\tif(this.active === true){\r\n\t\t\t\tthis.deactivate();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//TODO <IF TAB NEEDS UPDATE IT SHOULD TAKE CARE OF IT>\r\n\t\t\tif(this.update !== undefined){\r\n\t\t\t\tvar self = this;\r\n\r\n\t\t\t\tvar update = function()\r\n\t\t\t\t{\r\n\t\t\t\t\tself.update();\r\n\r\n\t\t\t\t\tif(self.active === true)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequestAnimationFrame(update);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\trequestAnimationFrame(update);\r\n\t\t\t}\r\n\r\n\t\t\tthis.active = true;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Deactivate tab.\r\n\t\t * \r\n\t\t * Called when a tab is deactivated or closed.\r\n\t\t *\r\n\t\t * @method deactivate\r\n\t\t */\r\n\t\tdeactivate : function(){\r\n\t\t\tthis.active = false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Generic method to attach object to a tab.\r\n\t\t *\r\n\t\t * Attached object can be edited using the tab.\r\n\t\t *\r\n\t\t * @method attach\r\n\t\t * @param {Object} object\r\n\t\t */\r\n\t\tattach : function(object){\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if an object or resource is attached to the tab.\r\n\t\t * \r\n\t\t * Called to check if a tab needs to be closed after changes to objects.\r\n\t\t *\r\n\t\t * @method isAttached\r\n\t\t */\r\n\t\tisAttached : function(object)\t{\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Close the tab element and remove is from the container.\r\n\t\t * \r\n\t\t * @method close\r\n\t\t */\r\n\t\tclose : function()\t{\r\n\t\t\tthis.container.removeTab(this);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select this tab.\r\n\t\t * \r\n\t\t * @method select\r\n\t\t */\r\n\t\tselect : function(){\r\n\t\t\tthis.container.selectTab(this);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if tab is selected\r\n\t\t *\r\n\t\t * @method isSelected\r\n\t\t * @return {Boolean} True if the tab is selected in the container.\r\n\t\t */\r\n\t\tisSelected : function(){\r\n\t\t\treturn this === this.container.selected;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set icon of the button attached to this tab.\r\n\t\t *\r\n\t\t * The button should have a .setIcon(url) method.\r\n\t\t *\r\n\t\t * @method setIcon\r\n\t\t * @param {String} icon URL of the icon.\r\n\t\t */\r\n\t\tsetIcon : function(icon){\r\n\t\t\tthis.icon = icon;\r\n\t\t\tthis.button.setIcon(icon);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text in the button.\r\n\t\t *\r\n\t\t * The button should have a .setName(text) method.\r\n\t\t *\r\n\t\t * @method setName\r\n\t\t * @param {String} text\r\n\t\t */\r\n\t\tsetName : function(text){\r\n\t\t\tthis.title = text;\r\n\t\t\tthis.button.setName(text);\r\n\t\t},\r\n\r\n\t\tdestroy : function(){\r\n\t\t\tPanel.prototype.destroy.call(this);\r\n\t\t\t\r\n\t\t\tif(this.button !== null){\r\n\t\t\t\tthis.button.destroy();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\treturn tabs.TabElement = TabElement;\r\n});\ndefine('skylark-langx-numerics/Vector2',[\r\n\t\"skylark-langx-klass\",\r\n\t\"./numerics\"\r\n] ,function(klass,numerics) {\r\n\r\n\tvar Vector2 = klass({\r\n\t\t\"klassName\" : \"Vector2\",\r\n\r\n\t\tset: function ( x, y ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( v ) {\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivide: function ( v ) {\r\n\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix3: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function ( minVal, maxVal ) {\r\n\r\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t\t},\r\n\r\n\t\tcross: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.y - this.y * v.x;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tangle: function () {\r\n\r\n\t\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\t\tvar angle = Math.atan2( - this.y, - this.x ) + Math.PI;\r\n\r\n\t\t\treturn angle;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSquared: function ( v ) {\r\n\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanDistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\r\n\t\trotateAround: function ( center, angle ) {\r\n\r\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\t\tvar x = this.x - center.x;\r\n\t\t\tvar y = this.y - center.y;\r\n\r\n\t\t\tthis.x = x * c - y * s + center.x;\r\n\t\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t\"_construct\" : function ( x, y ) {\r\n\r\n\t\t\tthis.x = x || 0;\r\n\t\t\tthis.y = y || 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t});\r\n\r\n\r\n\t/*\r\n\tObject.defineProperties( Vector2.prototype, {\r\n\r\n\t\t\"width\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.x = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t\"height\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.y = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\t*/\r\n\r\n\r\n\r\n\r\n\treturn numerics.Vector2 = Vector2 ;\r\n});\r\n\ndefine('skylark-widgets-tabs/tab-group',[\r\n\t\"skylark-langx-numerics/Vector2\",\r\n\t\"skylark-widgets-base/dnd/drag-buffer\",\r\n\r\n\t\"skylark-widgets-base/widget\",\r\n\t\"skylark-widgets-base/panels/panel\",\r\n\t\"./tabs\",\r\n\t\"./tab-element\",\r\n\t\"./tab-button\"\r\n\r\n],function(\r\n\tVector2,\r\n\tDragBuffer,\r\n\tWidget,\r\n\tPanel,\r\n\ttabs,\r\n\tTabElement,\r\n\tTabButton\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * A tab group contains and manages tab elements.\r\n\t *\r\n\t * The group is also responsible for creating and managing the lifecycle of its tab elements.\r\n\t * \r\n\t * @class TabGroup\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\r\n\t var TabGroup = Panel.inherit({\r\n\t \t\"klassName\" : \"TabGroup\",\r\n\r\n\t\t\"_construct\" : function (parent, placement)\r\n\t\t{\r\n\t\t\tPanel.prototype._construct.call(this, parent);\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.style.overflow = \"visible\";\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.panelColor;\r\n\t\t\tthis._elm.style.backgroundColor = skin.panelColor;\r\n\r\n\t\t\tthis.preventDragEvents();\r\n\t\t\t\r\n\t\t\t// Buttons\r\n\t\t\tthis.buttons = new Panel(this);\r\n\t\t\t//this.buttons.element.style.backgroundColor = Editor.theme.barColor;\r\n\t\t\tthis.buttons.element.style.backgroundColor = skin.barColor;\r\n\t\t\tthis.buttons.element.ondrop = function(event)\r\n\t\t\t{\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tvar uuid = event.dataTransfer.getData(\"uuid\");\r\n\t\t\t\tvar tab = DragBuffer.get(uuid);\r\n\r\n\t\t\t\tif(tab instanceof TabElement)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.attachTab(tab);\r\n\t\t\t\t\tDragBuffer.pop(uuid);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Tab\r\n\t\t\tthis.tab = new Panel(this);\r\n\r\n\t\t\t/**\r\n\t\t\t * Panel used to display a message indicating that the tab is empty.\r\n\t\t\t *\r\n\t\t\t * @property empty\r\n\t\t\t * @type {Widget}\r\n\t\t\t */\r\n\t\t\tthis.empty = document.createElement(\"div\");\r\n\t\t\tthis.empty.style.position = \"absolute\";\r\n\t\t\tthis.empty.style.textAlign = \"center\";\r\n\t\t\tthis.empty.style.display = \"none\";\r\n\t\t\tthis.empty.style.width = \"100%\";\r\n\t\t\tthis.empty.style.height = \"100%\";\r\n\t\t\tthis.empty.style.flexDirection = \"column\";\r\n\t\t\tthis.empty.style.justifyContent = \"center\";\r\n\t\t\tthis.empty.style.pointerEvents = \"none\";\r\n\t\t\tthis.empty.appendChild(document.createTextNode(Locale.openTabToEditContent));\r\n\t\t\tthis._elm.appendChild(this.empty);\r\n\r\n\t\t\t/**\r\n\t\t\t * Tab that is currently selected.\r\n\t\t\t *\r\n\t\t\t * @property selected\r\n\t\t\t * @type {TabElement}\r\n\t\t\t */\r\n\t\t\tthis.selected = null;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Base size of the buttons in this group.\r\n\t\t\t * \r\n\t\t\t * Size may be ajusted to fit the available space.\r\n\t\t\t *\r\n\t\t\t * @property buttonSize\r\n\t\t\t * @type {Vector2}\r\n\t\t\t */\r\n\t\t\tthis.buttonSize = new Vector2(150, 22);\r\n\r\n\t\t\t/**\r\n\t\t\t * Tab buttons placement.\r\n\t\t\t *\r\n\t\t\t * @property placement\r\n\t\t\t * @type {number}\r\n\t\t\t */\r\n\t\t\tthis.placement = placement !== undefined ? placement : TabGroup.TOP;\r\n\t\t\tthis.setPlacement(this.placement);\r\n\r\n\t\t\t/**\r\n\t\t\t * Tab elements attache to this group.\r\n\t\t\t * \r\n\t\t\t * @type {Array}\r\n\t\t\t */\r\n\t\t\tthis.items = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Indicates if the tab is currently on focus.\r\n\t\t\t *\r\n\t\t\t * @property focused\r\n\t\t\t * @type {boolean}\r\n\t\t\t */\r\n\t\t\tthis.focused = false;\r\n\r\n\t\t\tthis._elm.onmouseenter = function()\r\n\t\t\t{\r\n\t\t\t\tself.focused = true;\r\n\t\t\t};\r\n\t\t\tthis._elm.onmouseleave = function()\r\n\t\t\t{\r\n\t\t\t\tself.focused = false;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tabs object data.\r\n\t\t *\r\n\t\t * @method updateMetadata\r\n\t\t */\r\n\t\tupdateMetadata : function(){\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.items[i].updateMetadata();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tab object views.\r\n\t\t *\r\n\t\t * @method updateMetadata\r\n\t\t */\r\n\t\tupdateObjectsView : function(){\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.items[i].updateObjectsView();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Attach tab to this group and remove it from the original group.\r\n\t\t *\r\n\t\t * @method attachTab\r\n\t\t * @param {TabElement} tab Tab to be moved.\r\n\t\t * @param {number} insertIndex Index where to place the tab.\r\n\t\t */\r\n\t\tattachTab : function(tab, insertIndex){\t\r\n\t\t\t// Remove from old group\r\n\t\t\ttab.container.removeTab(tab.index, true);\r\n\t\t\t\r\n\t\t\t// Attach to this group\r\n\t\t\ttab.container = this;\r\n\t\t\ttab.button.setParent(this.buttons);\r\n\t\t\ttab.setParent(this.tab);\r\n\t\t\t\r\n\t\t\t// Add to items\r\n\t\t\tif(insertIndex !== undefined){\r\n\t\t\t\ttab.index = insertIndex;\r\n\t\t\t\tthis.items.splice(insertIndex, 0, tab);\r\n\t\t\t}else{\r\n\t\t\t\ttab.index = this.items.length;\r\n\t\t\t\tthis.items.push(tab);\r\n\t\t\t}\r\n\r\n\t\t\t// Select the tab if none selected\r\n\t\t\tif(this.selected === null)\t{\r\n\t\t\t\tthis.selectTab(tab);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.updateItemIndex();\r\n\t\t\tthis.updateInterface();\r\n\r\n\t\t\treturn tab;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Move tab from position to another.\r\n\t\t *\r\n\t\t * @method moveTabIndex\r\n\t\t * @param {number} origin Origin index.\r\n\t\t * @param {number} destination Destination index.\r\n\t\t */\r\n\t\tmoveTabIndex : function(origin, destination)\t{\r\n\t\t\tvar button = this.items[origin];\r\n\r\n\t\t\tthis.items.splice(origin, 1);\r\n\t\t\tthis.items.splice(destination, 0, button);\r\n\r\n\t\t\tthis.updateItemIndex();\r\n\t\t\tthis.updateInterface();\r\n\t\t},\r\n\r\n\t\tupdateSelection : function()\t{\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.items[i].updateSelection();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSettings : function()\t{\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.items[i].updateSettings();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get the currently active tab of the group.\r\n\t\t *\r\n\t\t * @method getActiveTab\r\n\t\t */\r\n\t\tgetActiveTab : function(){\r\n\t\t\tif(this.selected !== null)\r\n\t\t\t{\r\n\t\t\t\treturn this.selected;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Close actual tab if its closeable.\r\n\t\t *\r\n\t\t * @method closeActual\r\n\t\t */\r\n\t\tcloseActual : function()\t{\r\n\t\t\tif(this.selected !== null && this.selected.closeable)\r\n\t\t\t{\r\n\t\t\t\tthis.selected.deactivate();\r\n\t\t\t\tthis.removeTab(this.selected);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t * Select tab to set active on this group.\r\n\t\t *\r\n\t\t * If not valid tab is selected the actual selection will be cleared.\r\n\t\t *\r\n\t\t * @method selectTab\r\n\t\t * @param {TabElement} tab TabElement to be selected or index in the tab array.\r\n\t\t */\r\n\t\tselectTab : function(tab){\r\n\t\t\tif(this.selected !== null)\r\n\t\t\t{\r\n\t\t\t\tthis.selected.deactivate();\r\n\t\t\t}\r\n\r\n\t\t\t// Tab as a TabElement object\r\n\t\t\tif(tab instanceof TabElement)\r\n\t\t\t{\r\n\t\t\t\tthis.selected = tab;\r\n\t\t\t\tthis.selected.activate();\r\n\t\t\t}\r\n\t\t\t// Tab as a index\r\n\t\t\telse if(typeof tab === \"number\" && tab > -1 && tab < this.items.length)\r\n\t\t\t{\r\n\t\t\t\tthis.selected = this.items[tab];\r\n\t\t\t\tthis.selected.activate();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.selected = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis.empty.style.display = this.selected === null ? \"flex\" : \"none\";\r\n\t\t\tthis.updateInterface();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select next tab.\r\n\t\t *\r\n\t\t * @method selectNextTab\r\n\t\t */\r\n\t\tselectNextTab : function(){\r\n\t\t\tif(this.items.length > 0)\r\n\t\t\t{\r\n\t\t\t\tthis.selectTab((this.selected.index + 1) % this.items.length);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select previous tab.\r\n\t\t *\r\n\t\t * @method selectPreviousTab\r\n\t\t */\r\n\t\tselectPreviousTab : function(){\r\n\t\t\tif(this.items.length > 0)\r\n\t\t\t{\r\n\t\t\t\tif(this.selected.index === 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.selectTab(this.items.length - 1);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.selectTab(this.selected.index - 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add new option to tab group.\r\n\t\t *\r\n\t\t * @method addtab\r\n\t\t */\r\n\t\taddTab : function(TabConstructor, closeable)\t{\r\n\t\t\tvar tab = new TabConstructor(this.tab, closeable, this, this.items.length);\r\n\t\t\ttab.button = new TabButton(this.buttons, tab);\r\n\t\t\tthis.items.push(tab);\r\n\t\t\t\r\n\t\t\tif(this.selected === null || this.items.length === 1)\r\n\t\t\t{\r\n\t\t\t\tthis.selectTab(tab);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.updateInterface();\r\n\t\t\t}\r\n\r\n\t\t\treturn tab;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get tab from tab type and attached object is there is any.\r\n\t\t *\r\n\t\t * @method getTab\r\n\t\t * @param {Constructor} type Type of tab to look for.\r\n\t\t * @param {Object} object Object attached to the tab.\r\n\t\t */\r\n\t\tgetTab : function(type, object){\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif(this.items[i] instanceof type)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(object === undefined || this.items[i].isAttached(object))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn this.items[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove tab from group.\r\n\t\t *\r\n\t\t * @method removeTab\r\n\t\t * @param {number} index Index of tab to look for.\r\n\t\t * @param {boolean} dontDestroy If true the element is not destroyed.\r\n\t\t */\r\n\t\tremoveTab : function(index, dontDestroy)\t{\t\r\n\t\t\t// If index is an object get the actual index\r\n\t\t\tif(typeof index === \"object\"){\r\n\t\t\t\tindex = this.items.indexOf(index);\r\n\t\t\t}\r\n\r\n\t\t\t// Check if the index is in range\r\n\t\t\tif(index > -1 && index < this.items.length){\r\n\t\t\t\tvar tab = this.items[index];\r\n\r\n\t\t\t\tif(dontDestroy !== true)\r\n\t\t\t\t{\r\n\t\t\t\t\ttab.destroy();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.items.splice(index, 1);\r\n\t\t\t\tthis.updateItemIndex();\r\n\r\n\t\t\t\t// Select option\r\n\t\t\t\tif(this.selected === tab)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this.items.length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.selectTab(index !== 0 ? index - 1 : 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.selectTab(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\t\t\t\t\tthis.selectTab(null);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn tab;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove all closable tabs from the group.\r\n\t\t *\r\n\t\t * @method clear\r\n\t\t * @param {boolean} forceAll Remove also the not closable tabs.\r\n\t\t */\r\n\t\tclear : function(forceAll){\r\n\t\t\tif(forceAll === true)\r\n\t\t\t{\r\n\t\t\t\twhile(this.items.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.items.pop().destroy();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.selectTab(null);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar i = 0;\r\n\t\t\t\twhile(i < this.items.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this.items[i].closeable)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.items[i].destroy();\r\n\t\t\t\t\t\tthis.items.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check is selected tab is still available\r\n\t\t\t\tvar index = this.items.indexOf(this.selected);\r\n\t\t\t\tif(index === -1 && this.items.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.selectTab(0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update index variable stored in the tabs.\r\n\t\t *\r\n\t\t * @method updateItemIndex\r\n\t\t */\r\n\t\tupdateItemIndex : function(){\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.items[i].index = i;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the tab group buttons placement.\r\n\t\t *\r\n\t\t * @method setPlacement\r\n\t\t * @param {number} placement\r\n\t\t */\r\n\t\tsetPlacement : function(placement){\r\n\t\t\tthis.placement = placement;\r\n\t\t},\r\n\r\n\t\tupdateSize : function(){\r\n\t\t\tPanel.prototype.updateSize.call(this);\r\n\r\n\t\t\tvar tabSize = this.size.clone();\r\n\t\t\tvar buttonSize = this.buttonSize.clone();\r\n\t\t\tvar offset = this.buttonSize.clone();\r\n\r\n\t\t\t// Calculate size of the buttons and offset\r\n\t\t\tif(this.placement === TabGroup.TOP || this.placement === TabGroup.BOTTOM)\r\n\t\t\t{\r\n\t\t\t\tif(buttonSize.x * this.items.length > this.size.x)\r\n\t\t\t\t{\r\n\t\t\t\t\tbuttonSize.x = this.size.x / this.items.length;\r\n\t\t\t\t\toffset.x = buttonSize.x;\r\n\t\t\t\t}\r\n\t\t\t\ttabSize.y -= this.buttonSize.y;\r\n\t\t\t\toffset.y = 0;\r\n\t\t\t}\r\n\t\t\telse if(this.placement === TabGroup.LEFT || this.placement === TabGroup.RIGHT)\r\n\t\t\t{\r\n\t\t\t\tif(buttonSize.y * this.items.length > this.size.y)\r\n\t\t\t\t{\r\n\t\t\t\t\tbuttonSize.y = this.size.y / this.items.length;\r\n\t\t\t\t\toffset.y = buttonSize.y;\r\n\t\t\t\t}\r\n\t\t\t\ttabSize.x -= this.buttonSize.x;\r\n\t\t\t\toffset.x = 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Update tab and buttons\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar tab = this.items[i];\r\n\t\t\t\ttab.visible = this.selected === tab;\r\n\t\t\t\ttab.size.copy(tabSize);\r\n\t\t\t\ttab.updateInterface();\r\n\r\n\t\t\t\tvar button = tab.button;\r\n\t\t\t\tbutton.size.copy(buttonSize);\r\n\t\t\t\tbutton.position.copy(offset);\r\n\t\t\t\tbutton.position.multiplyScalar(i);\r\n\t\t\t\tbutton.updateInterface();\r\n\t\t\t}\r\n\r\n\t\t\tthis.tab.size.copy(tabSize);\r\n\t\t\tthis.tab.updateSize();\r\n\r\n\t\t\t// Position buttons and tab division\r\n\t\t\tif(this.placement === TabGroup.TOP)\r\n\t\t\t{\t\r\n\t\t\t\tthis.buttons.position.set(0, 0);\r\n\t\t\t\tthis.buttons.updatePosition();\r\n\t\t\t\tthis.buttons.size.set(this.size.x, this.buttonSize.y);\r\n\t\t\t\tthis.buttons.updateSize();\r\n\r\n\t\t\t\tthis.tab.position.set(0, this.buttonSize.y);\r\n\t\t\t\tthis.tab.updatePosition();\r\n\t\t\t}\r\n\t\t\telse if(this.placement === TabGroup.BOTTOM)\r\n\t\t\t{\r\n\t\t\t\tthis.buttons.position.set(0, this.size.y - this.buttonSize.y);\r\n\t\t\t\tthis.buttons.updatePosition();\r\n\t\t\t\tthis.buttons.size.set(this.size.x, this.buttonSize.y);\r\n\t\t\t\tthis.buttons.updateSize();\r\n\r\n\t\t\t\tthis.tab.position.set(0, 0);\r\n\t\t\t\tthis.tab.updatePosition();\r\n\t\t\t}\r\n\t\t\telse if(this.placement === TabGroup.LEFT)\r\n\t\t\t{\r\n\t\t\t\tthis.buttons.position.set(0, 0);\r\n\t\t\t\tthis.buttons.updatePosition();\r\n\t\t\t\tthis.buttons.size.set(this.buttonSize.x, this.size.y);\r\n\t\t\t\tthis.buttons.updateSize();\r\n\t\t\t\t\r\n\t\t\t\tthis.tab.position.set(this.buttonSize.x, 0);\r\n\t\t\t\tthis.tab.updatePosition();\r\n\t\t\t}\r\n\t\t\telse if(this.placement === TabGroup.RIGHT)\r\n\t\t\t{\r\n\t\t\t\tthis.buttons.position.set(this.size.x - this.buttonSize.x, 0);\r\n\t\t\t\tthis.buttons.updatePosition();\r\n\t\t\t\tthis.buttons.size.set(this.buttonSize.x, this.size.y);\r\n\t\t\t\tthis.buttons.updateSize();\r\n\r\n\t\t\t\tthis.tab.position.set(0, 0);\r\n\t\t\t\tthis.tab.updatePosition();\r\n\t\t\t}\r\n\t\t}\r\n\t });\r\n\r\n\r\n\r\n\tTabGroup.TOP = 0;\r\n\tTabGroup.BOTTOM = 1;\r\n\tTabGroup.LEFT = 2;\r\n\tTabGroup.RIGHT = 3;\r\n\r\n\r\n\treturn tabs.TabGroup = TabGroup;\r\n\r\n});\ndefine('skylark-widgets-tabs/splittable/tab-button-split',[\n\t\"skylark-devices-points/mouse\",\n\t\"skylark-widgets-base/dnd/drag-buffer\",\n\n\t\"skylark-widgets-base/widget\",\n\t\"../tabs\",\n\t\"../tab-element\",\n\t\"../tab-group\"\n],function(\n\tmouse,\n\n\tDragBuffer,\n\tWidget,\n\n\ttabs,\n\tTabElement,\n\tTabGroup\n){\n\t\"use strict\";\n\n\t/**\n\t * Tab button is used to navigate trough tabs.\n\t *\n\t * The split version of the tab button is intended to be used alongside splitable tab groups.\n\t * \n\t * @class TabButtonSplit\n\t * @extends {Widget}\n\t * @param {Widget} parent\n\t * @param {TabElement} tab\n\t */\n\t var TabButtonSplit = Widget.inherit({\n\t \t\"klassName\" : \"TabButtonSplit\",\n\n\t\t\"_construct\" : function (parent, tab)\n\t\t{\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\n\n\t\t\tvar self = this;\n\n\t\t\tthis._elm.draggable = true;\n\t\t\tthis._elm.style.cursor = \"pointer\";\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\n\n\n\t\t\tvar skin = this.getSkin();\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.buttonColor;\n\t\t\tthis._elm.style.backgroundColor = skin.buttonColor;\n\n\t\t\t//Tab\n\t\t\tthis.tab = tab;\n\n\t\t\t//Icon\n\t\t\tthis.icon = document.createElement(\"img\");\n\t\t\tthis.icon.style.pointerEvents = \"none\";\n\t\t\tthis.icon.style.position = \"absolute\";\n\t\t\tthis.icon.src = tab.icon;\n\t\t\tthis._elm.appendChild(this.icon);\n\n\t\t\t//Text\n\t\t\tthis.text = document.createElement(\"div\");\n\t\t\tthis.text.style.position = \"absolute\";\n\t\t\tthis.text.style.overflow = \"hidden\";\n\t\t\tthis.text.style.textAlign = \"center\";\n\t\t\tthis.text.style.pointerEvents = \"none\";\n\t\t\tthis.text.style.textOverflow = \"ellipsis\";\n\t\t\tthis.text.style.whiteSpace = \"nowrap\";\n\t\t\tthis.text.style.color = Editor.theme.textColor;\n\t\t\tthis._elm.appendChild(this.text);\n\n\t\t\t//Title\n\t\t\tthis.title = document.createTextNode(tab.title);\n\t\t\tthis.text.appendChild(this.title);\n\n\t\t\t//Close button\n\t\t\tthis.close = document.createElement(\"img\");\n\t\t\tthis.close.draggable = false;\n\t\t\tthis.close.style.position = \"absolute\";\n\t\t\tthis.close.style.opacity = 0.5;\n\t\t\tthis.close.style.display = (tab.closeable) ? \"block\" : \"none\";\n\t\t\tthis.close.src = Global.FILE_PATH + \"icons/misc/close.png\";\n\t\t\tthis._elm.appendChild(this.close);\n\n\t\t\tthis.close.onmouseenter = function()\n\t\t\t{\n\t\t\t\tthis.style.opacity = 1.0;\n\t\t\t};\n\n\t\t\tthis.close.onmouseleave = function()\n\t\t\t{\n\t\t\t\tthis.style.opacity = 0.5;\n\t\t\t};\n\n\t\t\tthis.close.onclick = function()\n\t\t\t{\n\t\t\t\tself.tab.close();\n\t\t\t};\n\t\t\t\n\t\t\t//Drag state\n\t\t\tvar dragState = TabButtonSplit.NONE;\n\n\t\t\t//Drag control\n\t\t\tthis._elm.ondragstart = function(event)\t{\n\t\t\t\tevent.dataTransfer.setData(\"uuid\", self.tab.uuid);\n\t\t\t\tDragBuffer.push(self.tab);\n\n\t\t\t\tevent.dataTransfer.setData(\"tab\", self.tab.index);\n\t\t\t\tdragState = TabButtonSplit.NONE;\n\t\t\t};\n\n\t\t\t//Drag drop\n\t\t\tthis._elm.ondrop = function(event){\tevent.preventDefault();\n\t\t\t\tthis.style.borderLeft = null;\n\t\t\t\tthis.style.borderRight = null;\n\t\t\t\tthis.style.borderBottom = null;\n\t\t\t\tthis.style.borderTop = null;\n\n\t\t\t\tvar uuid = event.dataTransfer.getData(\"uuid\");\n\t\t\t\tvar tab = DragBuffer.get(uuid);\n\n\t\t\t\tif(tab instanceof TabElement){\n\t\t\t\t\t//In the same container\n\t\t\t\t\tif(tab.container === self.tab.container){\n\t\t\t\t\t\tvar index = event.dataTransfer.getData(\"tab\");\n\t\t\t\t\t\tindex = parseInt(index);\n\n\t\t\t\t\t\tif(index !== self.tab.index){\t\n\t\t\t\t\t\t\t//Before\n\t\t\t\t\t\t\tif(dragState === TabButtonSplit.PREVIOUS)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tself.tab.container.moveTabIndex(index, index < self.tab.index ? self.tab.index - 1 : self.tab.index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//After\n\t\t\t\t\t\t\telse if(dragState === TabButtonSplit.NEXT)\t{\n\t\t\t\t\t\t\t\tself.tab.container.moveTabIndex(index, index < self.tab.index ? self.tab.index : self.tab.index + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tDragBuffer.pop(uuid);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//From another container\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t//Before\n\t\t\t\t\t\tif(dragState === TabButtonSplit.PREVIOUS){\n\t\t\t\t\t\t\tself.tab.container.attachTab(tab, self.tab.index);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//After\n\t\t\t\t\t\telse if(dragState === TabButtonSplit.NEXT){\n\t\t\t\t\t\t\tself.tab.container.attachTab(tab, self.tab.index + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tDragBuffer.pop(uuid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//Drag over\n\t\t\tthis._elm.ondragover = function(event){\n\t\t\t\tif(self.tab.container.placement === TabGroup.TOP || self.tab.container.placement === TabGroup.BOTTOM){\t\n\t\t\t\t\tif(event.layerX > self.size.x * 0.8 || event.target !== this)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(dragState !== TabButtonSplit.NEXT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdragState = TabButtonSplit.NEXT;\n\t\t\t\t\t\t\tthis.style.borderLeft = null;\n\t\t\t\t\t\t\tthis.style.borderRight = \"thick solid #999999\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(event.layerX < self.size.x * 0.2){\n\t\t\t\t\t\tif(dragState !== TabButtonSplit.PREVIOUS){\n\t\t\t\t\t\t\tdragState = TabButtonSplit.PREVIOUS;\n\t\t\t\t\t\t\tthis.style.borderRight = null;\n\t\t\t\t\t\t\tthis.style.borderLeft = \"thick solid #999999\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(dragState !== TabButtonSplit.NONE){\n\t\t\t\t\t\t\tdragState = TabButtonSplit.NONE;\n\t\t\t\t\t\t\tthis.style.borderLeft = null;\n\t\t\t\t\t\t\tthis.style.borderRight = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tif(event.layerY > self.size.y * 0.7 || event.target !== this)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(dragState !== TabButtonSplit.NEXT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdragState = TabButtonSplit.NEXT;\n\t\t\t\t\t\t\tthis.style.borderTop = null;\n\t\t\t\t\t\t\tthis.style.borderBottom = \"solid #999999\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(event.layerY < self.size.y * 0.3)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(dragState !== TabButtonSplit.PREVIOUS)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdragState = TabButtonSplit.PREVIOUS;\n\t\t\t\t\t\t\tthis.style.borderBottom = null;\n\t\t\t\t\t\t\tthis.style.borderTop = \"solid #999999\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(dragState !== TabButtonSplit.NONE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdragState = TabButtonSplit.NONE;\n\t\t\t\t\t\t\tthis.style.borderBottom = null;\n\t\t\t\t\t\t\tthis.style.borderTop = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//Drag end\n\t\t\tthis._elm.ondragend = function(event)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\t\n\t\t\t\tDragBuffer.pop(self.tab.uuid);\n\n\t\t\t\tdragState = TabButtonSplit.NONE;\n\t\t\t\tthis.style.borderLeft = null;\n\t\t\t\tthis.style.borderRight = null;\n\t\t\t\tthis.style.borderBottom = null;\n\t\t\t\tthis.style.borderTop = null;\n\t\t\t};\n\n\t\t\t//Drag leave\n\t\t\tthis._elm.ondragleave = function(event)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\t\n\t\t\t\tdragState = TabButtonSplit.NONE;\n\t\t\t\tthis.style.borderLeft = null;\n\t\t\t\tthis.style.borderRight = null;\n\t\t\t\tthis.style.borderBottom = null;\n\t\t\t\tthis.style.borderTop = null;\n\t\t\t};\n\n\t\t\t//Mouse down\n\t\t\tthis._elm.onmousedown = function(event)\n\t\t\t{\n\t\t\t\tvar button = event.which - 1;\n\n\t\t\t\t//Select tab\n\t\t\t\t//if(button === Mouse.LEFT)\n\t\t\t\tif (mouse.isLeftMouseButton(event))\t{\n\t\t\t\t\tself.tab.container.selectTab(self.tab);\n\t\t\t\t}\n\t\t\t\t//Close tab\n\t\t\t\t//else if(tab.closeable && button === Mouse.MIDDLE)\n\t\t\t\telse if(tab.closeable && mouse.isMiddleMouseButton(event))\n\t\t\t\t{\n\t\t\t\t\tself.tab.container.removeTab(self.tab);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//Mouse enter\n\t\t\tthis._elm.onmouseenter = function()\n\t\t\t{\n\t\t\t\t//this.style.backgroundColor = Editor.theme.buttonOverColor;\n\t\t\t\tthis.style.backgroundColor = skin.buttonOverColor;\n\t\t\t};\n\n\t\t\t//Mouse leave\n\t\t\tthis._elm.onmouseleave = function()\n\t\t\t{\n\t\t\t\tif(tab.isSelected())\n\t\t\t\t{\n\t\t\t\t\t//this.style.backgroundColor = Editor.theme.buttonOverColor;\n\t\t\t\t\tthis.style.backgroundColor = skin.buttonOverColor;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//this.style.backgroundColor = Editor.theme.buttonColor;\n\t\t\t\t\tthis.style.backgroundColor = skin.buttonColor;\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\n\t\t/**\n\t\t * Set the tab icon image.\n\t\t *\n\t\t * @method setIcon\n\t\t * @param {String} icon URL of the icon image.\n\t\t */\n\t\tsetIcon : function(icon) {\n\t\t\tthis.tab.icon = icon;\n\t\t\tthis.icon.src = icon;\n\t\t},\n\n\t\t/**\n\t\t * Set text to be displayed in the button as its name.\n\t\t *\n\t\t * @method setName\n\t\t * @param {String} text\n\t\t */\n\t\tsetName : function(text) {\n\t\t\tthis.tab.title = text;\n\t\t\tthis.title.data = text;\n\t\t},\n\n\t\tupdateSelection : function() {\n\t\t\t//this._elm.style.backgroundColor = this.tab.isSelected() ? Editor.theme.buttonOverColor : Editor.theme.buttonColor;\n\t\t\tvar skin = this.getSkin();\n\t\t\tthis._elm.style.backgroundColor = this.tab.isSelected() ? skin.buttonOverColor : skin.buttonColor;\n\t\t},\n\n\t\tupdateSize : function(){\n\t\t\tWidget.prototype.updateSize.call(this);\n\t\t\t\n\t\t\t//Icon\n\t\t\tthis.icon.style.top = (this.size.y * 0.2) + \"px\";\n\t\t\tthis.icon.style.left = (this.size.y * 0.2) + \"px\"\n\t\t\tthis.icon.style.width = (this.size.y * 0.6) + \"px\";\n\t\t\tthis.icon.style.height = (this.size.y * 0.6) + \"px\";\n\n\t\t\t//Text\n\t\t\tthis.text.style.left = this.size.y + \"px\";\n\t\t\tthis.text.style.top = ((this.size.y - 12) / 2) + \"px\";\n\t\t\tthis.text.style.width = (this.size.x - 2 * this.size.y) + \"px\";\n\t\t\tthis.text.style.height = this.size.y + \"px\";\n\n\t\t\t//Close\n\t\t\tif(this.tab.closeable === true)\n\t\t\t{\n\t\t\t\tthis.close.style.width = (this.size.y * 0.4) + \"px\";\n\t\t\t\tthis.close.style.height = (this.size.y * 0.4) + \"px\";\n\t\t\t\tthis.close.style.top = (this.size.y * 0.3) + \"px\";\n\t\t\t\tthis.close.style.right = (this.size.y * 0.3) + \"px\";\n\t\t\t\tthis.close.style.display = \"block\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.close.style.display = \"none\";\n\t\t\t}\n\n\t\t\tthis.updateSelection();\n\t\t}\n\n\t });\n\n\tTabButtonSplit.NONE = 0;\n\tTabButtonSplit.PREVIOUS = 1;\n\tTabButtonSplit.NEXT = 2;\n\n\n\treturn tabs.splittable.TabButtonSplit = TabButtonSplit;\n});\n\ndefine('skylark-widgets-tabs/splittable/tab-container',[\r\n\t\"skylark-widgets-base/panels/panel\",\r\n\t\"../tabs\",\r\n\t\"../tab-group\"\r\n],function(\r\n\tPanel,\r\n\ttabs,\r\n\tTabGroup\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Tab container is the root for a tree of tab groups.\r\n\t *\r\n\t * The container keeps track of all groups that may be splited into multiple groups.\r\n\t *\r\n\t * @class TabContainer\r\n\t * @extends {Panel}\r\n\t */\r\n\tvar TabContainer = Panel.inherit({\r\n\t\t\"klassName\" : \"TabContainer\",\r\n\r\n\t\t\"_construct\" :  function(parent){\r\n\t\t\tPanel.prototype._construct.call(this, parent);\r\n\t\t\t\r\n\t\t\tthis.group = null;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Split this tab group into two new tab groups.\r\n\t\t *\r\n\t\t * @method split\r\n\t\t * @param {Number} direction Direction where to insert the new tab.\r\n\t\t * @return {TabGroupSplit} The new created tab group.\r\n\t\t */\r\n\t\tsplit : function(direction)\r\n\t\t{\r\n\t\t\treturn this.group.split(direction);\r\n\t\t},\r\n\r\n\t\tattach : function(element)\r\n\t\t{\r\n\t\t\tthis.group = element;\r\n\t\t\tthis.group.setParent(this);\r\n\t\t},\r\n\r\n\t\tupdateSize : function()\r\n\t\t{\r\n\t\t\tPanel.prototype.updateSize.call(this);\r\n\r\n\t\t\tif(this.group !== null)\r\n\t\t\t{\r\n\t\t\t\tthis.group.position.set(0, 0);\r\n\t\t\t\tthis.group.size.copy(this.size);\r\n\t\t\t\tthis.group.updateInterface();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tabs object data.\r\n\t\t *\r\n\t\t * @method updateMetadata\r\n\t\t */\r\n\t\tupdateMetadata : function()\r\n\t\t{\r\n\t\t\tthis.group.updateMetadata();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tab object views.\r\n\t\t *\r\n\t\t * @method updateObjectsView\r\n\t\t */\r\n\t\tupdateObjectsView : function()\r\n\t\t{\r\n\t\t\tthis.group.updateObjectsView();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tab object selection status.\r\n\t\t * \r\n\t\t * Should be called after object selection changes.\r\n\t\t *\r\n\t\t * @method updateSelection\r\n\t\t */\r\n\t\tupdateSelection : function()\r\n\t\t{\r\n\t\t\tthis.group.updateSelection();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tab settings.\r\n\t\t *\r\n\t\t * Should be called after editor settings are changed.\r\n\t\t *\r\n\t\t * @method updateSettings\r\n\t\t */\r\n\t\tupdateSettings : function()\r\n\t\t{\r\n\t\t\tthis.group.updateSettings();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get an array with all the tabs currently active.\r\n\t\t *\r\n\t\t * @method getActiveTab\r\n\t\t * @return {Array} Active tabs.\r\n\t\t */\r\n\t\tgetActiveTab : function()\r\n\t\t{\r\n\t\t\tvar active = [];\r\n\r\n\t\t\tif(this.group instanceof TabGroup)\r\n\t\t\t{\r\n\t\t\t\tvar tab = this.group.getActiveTab();\r\n\t\t\t\tif(tab !== null)\r\n\t\t\t\t{\r\n\t\t\t\t\tactive.push(tab);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tactive = active.concat(this.group.getActiveTab());\r\n\t\t\t}\r\n\r\n\t\t\treturn this.group.getActiveTab();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Close the tab that is currently being shown if it is closeable.\r\n\t\t *\r\n\t\t * @method closeActual\r\n\t\t */\r\n\t\tcloseActual : function()\r\n\t\t{\r\n\t\t\tthis.group.closeActual();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select a specific tab from the container tab tree.\r\n\t\t *\r\n\t\t * @method selectTab\r\n\t\t * @param {TabElement} tab Tab to select.\r\n\t\t */\r\n\t\tselectTab : function(tab)\r\n\t\t{\r\n\t\t\tthis.group.selectTab(tab);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select next tab from the currently focused tab group.\r\n\t\t *\r\n\t\t * @method selectNextTab\r\n\t\t */\r\n\t\tselectNextTab : function()\r\n\t\t{\r\n\t\t\tthis.group.selectNextTab();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select previous tab from the currently focused tab group.\r\n\t\t *\r\n\t\t * @method selectPreviousTab\r\n\t\t */\r\n\t\tselectPreviousTab : function()\r\n\t\t{\r\n\t\t\tthis.group.selectPreviousTab();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add new tab to the tab container.\r\n\t\t * \r\n\t\t * @method addTab\r\n\t\t * @param {Constructor} TabConstructor Constructor if the TabElement to be added to the container.\r\n\t\t * @param {Boolean} closeable Indicates if the tab can be closed.\r\n\t\t */\r\n\t\taddTab : function(TabConstructor, closeable)\r\n\t\t{\r\n\t\t\treturn this.group.addTab(TabConstructor, closeable);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get tab from tab type and attached object is there is any.\r\n\t\t *\r\n\t\t * @param {Constructor} type Type of the tab to look for.\r\n\t\t * @param {Object} object Object attached to the tab.\r\n\t\t * @return TabElement The tab from the type specified that has the object attached to it.\r\n\t\t */\r\n\t\tgetTab : function(type, object)\r\n\t\t{\r\n\t\t\treturn this.group.getTab(type, object);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove all tabs from the container.\r\n\t\t * \r\n\t\t * @method clear\r\n\t\t */\r\n\t\tclear : function(forceAll)\r\n\t\t{\r\n\t\t\tthis.group.clear();\r\n\t\t}\r\n\t});\r\n\r\n\r\n\treturn tabs.splittable.TabContainer = TabContainer;\r\n});\ndefine('skylark-widgets-tabs/splittable/tab-dual-container',[\r\n\t\"skylark-widgets-base/panels/dual-container\",\r\n\t\"../tabs\",\r\n\t\"../tab-group\"\r\n],function(DualContainer,tabs,TabGroup){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Tab dual container is a dual container with tabgroups.\r\n\t *\r\n\t * @class TabDualContainer\r\n\t * @extends {Element, TabDual}\r\n\t */\r\n\t var TabDualContainer = DualContainer.inherit({\r\n\t\t\"_construct\" : function(parent)\t{\r\n\t\t\tDualContainer.prototype._construct.call(this, parent);\r\n\r\n\t\t\tthis._elm.style.overflow = \"visible\";\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Update all tabs object data.\r\n\t\t *\r\n\t\t * @method updateMetadata\r\n\t\t */\r\n\t\tupdateMetadata : function()\r\n\t\t{\r\n\t\t\tthis._elmA.updateMetadata();\r\n\t\t\tthis._elmB.updateMetadata();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tab object views.\r\n\t\t *\r\n\t\t * @method updateObjectsView\r\n\t\t */\r\n\t\tupdateObjectsView : function()\r\n\t\t{\r\n\t\t\tthis._elmA.updateObjectsView();\r\n\t\t\tthis._elmB.updateObjectsView();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tab object selection status.\r\n\t\t * \r\n\t\t * Should be called after object selection changes.\r\n\t\t *\r\n\t\t * @method updateSelection\r\n\t\t */\r\n\t\tupdateSelection : function()\r\n\t\t{\r\n\t\t\tthis._elmA.updateSelection();\r\n\t\t\tthis._elmB.updateSelection();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tab settings.\r\n\t\t *\r\n\t\t * Should be called after editor settings are changed.\r\n\t\t *\r\n\t\t * @method updateSettings\r\n\t\t */\r\n\t\tupdateSettings : function()\r\n\t\t{\r\n\t\t\tthis._elmA.updateSettings();\r\n\t\t\tthis._elmB.updateSettings();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get an array with all the tabs currently active.\r\n\t\t *\r\n\t\t * @method getActiveTab\r\n\t\t * @return {Array} Active tabs.\r\n\t\t */\r\n\t\tgetActiveTab : function()\r\n\t\t{\r\n\t\t\tvar active = [];\r\n\r\n\t\t\tif(this._elmA instanceof TabGroup)\r\n\t\t\t{\r\n\t\t\t\tvar tab = this._elmA.getActiveTab();\r\n\t\t\t\tif(tab !== null)\r\n\t\t\t\t{\r\n\t\t\t\t\tactive.push(tab);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tactive = active.concat(this._elmA.getActiveTab());\r\n\t\t\t}\r\n\r\n\t\t\tif(this._elmB instanceof TabGroup)\r\n\t\t\t{\r\n\t\t\t\tvar tab = this._elmB.getActiveTab();\r\n\t\t\t\tif(tab !== null)\r\n\t\t\t\t{\r\n\t\t\t\t\tactive.push(tab);\r\n\t\t\t\t}\r\n\t\t\t\tthis._elmA.getActiveTab();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tactive = active.concat(this._elmB.getActiveTab());\r\n\t\t\t}\r\n\r\n\t\t\treturn active;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Close the tab that is currently being shown if it is closeable.\r\n\t\t *\r\n\t\t * @method closeActual\r\n\t\t */\r\n\t\tcloseActual : function()\r\n\t\t{\r\n\t\t\tif(!(this._elmA instanceof TabGroup) || this._elmA.focused)\r\n\t\t\t{\r\n\t\t\t\tthis._elmA.closeActual();\r\n\t\t\t}\r\n\r\n\t\t\tif(!(this._elmB instanceof TabGroup) || this._elmB.focused)\r\n\t\t\t{\r\n\t\t\t\tthis._elmB.closeActual();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select a specific tab from the container tab tree.\r\n\t\t *\r\n\t\t * @method selectTab\r\n\t\t * @param {TabElement} tab Tab to select.\r\n\t\t */\r\n\t\tselectTab : function(tab)\r\n\t\t{\r\n\t\t\tthis._elmA.selectTab(tab);\r\n\t\t\tthis._elmB.selectTab(tab);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select next tab from the currently focused tab group.\r\n\t\t *\r\n\t\t * @method selectNextTab\r\n\t\t */\r\n\t\tselectNextTab : function()\r\n\t\t{\r\n\t\t\tif(!(this._elmA instanceof TabGroup) || this._elmA.focused)\r\n\t\t\t{\r\n\t\t\t\tthis._elmA.selectNextTab();\r\n\t\t\t}\r\n\r\n\t\t\tif(!(this._elmB instanceof TabGroup) || this._elmB.focused)\r\n\t\t\t{\r\n\t\t\t\tthis._elmB.selectNextTab();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select previous tab from the currently focused tab group.\r\n\t\t *\r\n\t\t * @method selectPreviousTab\r\n\t\t */\r\n\t\tselectPreviousTab : function()\r\n\t\t{\r\n\t\t\tif(!(this._elmA instanceof TabGroup) || this._elmA.focused)\r\n\t\t\t{\r\n\t\t\t\tthis._elmA.selectPreviousTab();\r\n\t\t\t}\r\n\r\n\t\t\tif(!(this._elmB instanceof TabGroup) || this._elmB.focused)\r\n\t\t\t{\r\n\t\t\t\tthis._elmB.selectPreviousTab();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add new option to tab group.\r\n\t\t *\r\n\t\t * Prefer the tab group stored on the elementA.\r\n\t\t *\r\n\t\t * @method addTab\r\n\t\t * @param {Constructor} TabConstructor Constructor if the TabElement to be added to the container.\r\n\t\t * @param {Boolean} closeable Indicates if the tab can be closed.\r\n\t\t */\r\n\t\taddTab : function(TabConstructor, closeable)\r\n\t\t{\r\n\t\t\tvar tab = this._elmA.addTab(TabConstructor, closeable);\r\n\t\t\tif(tab === null)\r\n\t\t\t{\r\n\t\t\t\ttab = this._elmB.addTab(TabConstructor, closeable);\r\n\t\t\t}\r\n\r\n\t\t\treturn tab;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get tab from tab type and attached object is there is any.\r\n\t\t *\r\n\t\t * @param {Constructor} type Type of the tab to look for.\r\n\t\t * @param {Object} object Object attached to the tab.\r\n\t\t * @return TabElement The tab from the type specified that has the object attached to it.\r\n\t\t */\r\n\t\tgetTab : function(type, object)\r\n\t\t{\r\n\t\t\tvar tab = this._elmA.getTab(type, object);\r\n\t\t\t\r\n\t\t\tif(tab === null)\r\n\t\t\t{\r\n\t\t\t\ttab = this._elmB.getTab(type, object);\r\n\t\t\t}\r\n\r\n\t\t\treturn tab;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove all tabs from the container.\r\n\t\t * \r\n\t\t * @method clear\r\n\t\t */\r\n\t\tclear : function(forceAll)\r\n\t\t{\r\n\t\t\tthis._elmA.clear(forceAll);\r\n\t\t\tthis._elmB.clear(forceAll);\r\n\t\t}\r\n\r\n\t });\r\n\r\n\r\n\treturn tabs.splittable.TabDualContainer = TabDualContainer;\r\n});\ndefine('skylark-widgets-tabs/splittable/tab-group-split',[\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-widgets-base/dnd/drag-buffer\",\r\n\r\n\t\"skylark-widgets-base/panels/dual-container\",\r\n\t\"../tabs\",\r\n\t\"../tab-group\",\r\n\t\"../tab-element\",\r\n\t\"./tab-container\",\r\n\t\"./tab-dual-container\",\r\n\t\"./tab-button-split\"\r\n],function(\r\n\tgeom, \r\n\tDragBuffer,\r\n\tDualContainer, \r\n\ttabs,\r\n\tTabGroup,\r\n\tTabElement,\r\n\tTabContainer, \r\n\tTabDualContainer,\r\n\tTabButtonSplit\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * A tab group contains and manages tab elements.\r\n\t *\r\n\t * A splitable tab group can be splited into two tab group allowing a more flexible interface organization during runtime.\r\n\t * \r\n\t * @class TabGroupSplit\r\n\t * @extends {TabGroup}\r\n\t * @param {Element} parent Parent element.\r\n\t */\r\n\r\n\tvar TabGroupSplit = TabGroup.inherit({\r\n\t\t\"klassName\" : \"TabGroupSplit\",\r\n\r\n\t\t\"_construct\" : function (parent, placement)\r\n\t\t{\r\n\t\t\tTabGroup.prototype._construct.call(this, parent, placement);\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\t/**\r\n\t\t\t * Border where another another tabs can be dragged to for this tab to be spplited.\r\n\t\t\t *\r\n\t\t\t * @property dragBorder\r\n\t\t\t * @type {Number}\r\n\t\t\t */\r\n\t\t\tthis.dragBorder = 0.2;\r\n\r\n\t\t\t/**\r\n\t\t\t * If true the group can be split in two.\r\n\t\t\t *\r\n\t\t\t * @property canSplit\r\n\t\t\t * @type {Boolean}\r\n\t\t\t */\r\n\t\t\tthis.canSplit = true;\r\n\r\n\t\t\t/**\r\n\t\t\t * If true the group can be collapsed.\r\n\t\t\t *\r\n\t\t\t * @property canCollapse\r\n\t\t\t * @type {Boolean}\r\n\t\t\t */\r\n\t\t\tthis.canCollapse = true;\r\n\r\n\t\t\t/**\r\n\t\t\t * DOM element to be displayed when a tab is dragged over.\r\n\t\t\t *\r\n\t\t\t * @property tabArea\r\n\t\t\t * @type {DOM}\r\n\t\t\t */\r\n\t\t\tthis.tabArea = document.createElement(\"div\");\r\n\t\t\tthis.tabArea.style.zIndex = \"1000\";\r\n\t\t\tthis.tabArea.style.position = \"absolute\";\r\n\t\t\tthis.tabArea.style.backgroundColor = \"rgba(0.0, 0.0, 0.0, 0.2)\";\r\n\t\t\tthis.tabArea.style.pointerEvents = \"none\";\r\n\r\n\t\t\t//Drag drop\r\n\t\t\tthis.tab.element.ondrop = function(event)\r\n\t\t\t{\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tvar uuid = event.dataTransfer.getData(\"uuid\");\r\n\t\t\t\tvar tab = DragBuffer.get(uuid);\r\n\r\n\t\t\t\tif(tab instanceof TabElement)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar position = geom.pagePosition(self.element);\r\n\t\t\t\t\tvar x = event.clientX - (position.x || position.left);\r\n\t\t\t\t\tvar y = event.clientY - (position.y || position.top);\r\n\r\n\t\t\t\t\t//Left\r\n\t\t\t\t\tif(x < self.size.x * self.dragBorder)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.split(TabGroup.LEFT).attachTab(tab);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//Right\r\n\t\t\t\t\telse if(x > self.size.x * (1 - self.dragBorder))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.split(TabGroup.RIGHT).attachTab(tab);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//Top\r\n\t\t\t\t\telse if(y < self.size.y * self.dragBorder)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.split(TabGroup.TOP).attachTab(tab);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//Bottom\r\n\t\t\t\t\telse if(y > self.size.y * (1 - self.dragBorder))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.split(TabGroup.BOTTOM).attachTab(tab);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.attachTab(tab);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tDragBuffer.pop(uuid);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.tab.element.contains(self.tabArea))\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tab.element.removeChild(self.tabArea);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t//Drag over\r\n\t\t\tthis.tab.element.ondragover = function(event)\r\n\t\t\t{\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tif(!(DragBuffer.buffer[0] instanceof TabElement))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = geom.pagePosition(self.element);\r\n\t\t\t\tvar x = event.clientX - (position.x || position.left);\r\n\t\t\t\tvar y = event.clientY - (position.y || position.top);\r\n\r\n\t\t\t\t//Left\r\n\t\t\t\tif(x < self.size.x * self.dragBorder)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tabArea.style.right = null;\r\n\t\t\t\t\tself.tabArea.style.bottom = null;\r\n\t\t\t\t\tself.tabArea.style.top = \"0px\";\r\n\t\t\t\t\tself.tabArea.style.left = \"0px\";\r\n\t\t\t\t\tself.tabArea.style.width = \"50%\";\r\n\t\t\t\t\tself.tabArea.style.height = \"100%\";\r\n\r\n\t\t\t\t\tif(!self.tab.element.contains(self.tabArea))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.tab.element.appendChild(self.tabArea);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//Right\r\n\t\t\t\telse if(x > self.size.x * (1 - self.dragBorder))\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tabArea.style.left = null;\r\n\t\t\t\t\tself.tabArea.style.bottom = null;\r\n\t\t\t\t\tself.tabArea.style.top = \"0px\";\r\n\t\t\t\t\tself.tabArea.style.right = \"0px\";\r\n\t\t\t\t\tself.tabArea.style.width = \"50%\";\r\n\t\t\t\t\tself.tabArea.style.height = \"100%\";\r\n\r\n\t\t\t\t\tif(!self.tab.element.contains(self.tabArea))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.tab.element.appendChild(self.tabArea);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//Top\r\n\t\t\t\telse if(y < self.size.y * self.dragBorder)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tabArea.style.right = null;\r\n\t\t\t\t\tself.tabArea.style.bottom = null;\r\n\t\t\t\t\tself.tabArea.style.top = \"0px\";\r\n\t\t\t\t\tself.tabArea.style.left = \"0px\";\r\n\t\t\t\t\tself.tabArea.style.width = \"100%\";\r\n\t\t\t\t\tself.tabArea.style.height = \"50%\";\r\n\r\n\t\t\t\t\tif(!self.tab.element.contains(self.tabArea))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.tab.element.appendChild(self.tabArea);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//Bottom\r\n\t\t\t\telse if(y > self.size.y * (1 - self.dragBorder))\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tabArea.style.top = null;\r\n\t\t\t\t\tself.tabArea.style.right = null;\r\n\t\t\t\t\tself.tabArea.style.bottom = \"0px\";\r\n\t\t\t\t\tself.tabArea.style.left = \"0px\";\r\n\t\t\t\t\tself.tabArea.style.width = \"100%\";\r\n\t\t\t\t\tself.tabArea.style.height = \"50%\";\r\n\r\n\t\t\t\t\tif(!self.tab.element.contains(self.tabArea))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.tab.element.appendChild(self.tabArea);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(self.tab.element.contains(self.tabArea))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.tab.element.removeChild(self.tabArea);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t//Drag leave\r\n\t\t\tthis.tab.element.ondragleave = function(event)\r\n\t\t\t{\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tif(self.tab.element.contains(self.tabArea))\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tab.element.removeChild(self.tabArea);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Split this tab group into two new tab groups.\r\n\t\t *\r\n\t\t * @method split\r\n\t\t * @param {Number} direction Direction where to insert the new tab.\r\n\t\t * @return {TabGroupSplit} The new created tab group.\r\n\t\t */\r\n\t\tsplit : function(direction)\r\n\t\t{\r\n\t\t\tif(this.canSplit)\r\n\t\t\t{\r\n\t\t\t\tif(direction === undefined)\r\n\t\t\t\t{\r\n\t\t\t\t\tdirection = TabGroup.RIGHT;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar container = new TabDualContainer();\r\n\t\t\t\tvar parent = this.parent;\r\n\t\t\t\tvar group = new TabGroupSplit(container, this.placement);\r\n\r\n\t\t\t\tif(direction === TabGroup.RIGHT)\r\n\t\t\t\t{\r\n\t\t\t\t\tcontainer.orientation = DualContainer.HORIZONTAL;\r\n\t\t\t\t\tcontainer.attach(this);\r\n\t\t\t\t\tcontainer.attach(group);\r\n\t\t\t\t}\r\n\t\t\t\telse if(direction === TabGroup.LEFT)\r\n\t\t\t\t{\r\n\t\t\t\t\tcontainer.orientation = DualContainer.HORIZONTAL;\r\n\t\t\t\t\tcontainer.attach(group);\r\n\t\t\t\t\tcontainer.attach(this);\r\n\t\t\t\t}\r\n\t\t\t\telse if(direction === TabGroup.BOTTOM)\r\n\t\t\t\t{\r\n\t\t\t\t\tcontainer.orientation = DualContainer.VERTICAL;\r\n\t\t\t\t\tcontainer.attach(this);\r\n\t\t\t\t\tcontainer.attach(group);\r\n\t\t\t\t}\r\n\t\t\t\telse if(direction === TabGroup.TOP)\r\n\t\t\t\t{\r\n\t\t\t\t\tcontainer.orientation = DualContainer.VERTICAL;\r\n\t\t\t\t\tcontainer.attach(group);\r\n\t\t\t\t\tcontainer.attach(this);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(parent instanceof TabContainer)\r\n\t\t\t\t{\r\n\t\t\t\t\tparent.attach(container);\r\n\t\t\t\t\tparent.updateSize();\r\n\t\t\t\t}\r\n\t\t\t\telse if(parent instanceof DualContainer)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(parent.elementA === this)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tparent.attachA(container);\r\n\t\t\t\t\t\tparent.updateSize();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(parent.elementB === this)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tparent.attachB(container);\r\n\t\t\t\t\t\tparent.updateSize();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn group;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(\"nunuStudio: Tab is not splitable.\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * If the tab is in a split container, move all the tabs to the other tabgroup in the container and close this group.\r\n\t\t *\r\n\t\t * @method collapse\r\n\t\t */ \r\n\t\tcollapse : function()\r\n\t\t{\r\n\t\t\tif(this.canCollapse)\r\n\t\t\t{\r\n\t\t\t\tif(this.parent instanceof DualContainer)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar parent = this.parent.parent;\r\n\t\t\t\t\tvar group = this.parent.elementA === this ? this.parent.elementB : this.parent.elementA;\r\n\r\n\t\t\t\t\t//Dual container\r\n\t\t\t\t\tif(parent instanceof DualContainer)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(parent.elementA === this.parent)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.parent.destroy();\r\n\t\t\t\t\t\t\tthis.destroy();\r\n\t\t\t\t\t\t\tparent.attachA(group);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(parent.elementB === this.parent)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.parent.destroy();\r\n\t\t\t\t\t\t\tthis.destroy();\r\n\t\t\t\t\t\t\tparent.attachB(group);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//Tab container\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.parent.destroy();\r\n\t\t\t\t\t\tthis.destroy();\r\n\t\t\t\t\t\tparent.attach(group);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tparent.updateSize();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.warn(\"nunuStudio: Tab cannot be collapsed (parent is not a dual container).\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(\"nunuStudio: Tab is not collapsable.\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Attach tab to this group and remove it from the original group.\r\n\t\t *\r\n\t\t * @method attachTab\r\n\t\t * @param {TabElement} tab Tab to be moved.\r\n\t\t * @param {Number} insertIndex Index where to place the tab.\r\n\t\t */\r\n\t\tattachTab : function(tab, insertIndex)\r\n\t\t{\t\r\n\t\t\tvar container = tab.container;\r\n\t\t\tvar tab = TabGroup.prototype.attachTab.call(this, tab, insertIndex);\r\n\r\n\t\t\tif(container.items.length === 0)\r\n\t\t\t{\r\n\t\t\t\tcontainer.collapse();\r\n\t\t\t}\r\n\r\n\t\t\treturn tab;\r\n\t\t},\r\n\r\n\t\tremoveTab : function(index, dontDestroy)\r\n\t\t{\r\n\t\t\tTabGroup.prototype.removeTab.call(this, index, dontDestroy);\r\n\r\n\t\t\tif(this.items.length === 0 && dontDestroy !== true)\r\n\t\t\t{\r\n\t\t\t\tthis.collapse();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\taddTab : function(TabConstructor, closeable)\r\n\t\t{\r\n\t\t\tvar tab = new TabConstructor(this.tab, closeable, this, this.items.length);\r\n\t\t\ttab.button = new TabButtonSplit(this.buttons, tab);\r\n\t\t\ttab.updateInterface();\r\n\r\n\t\t\tthis.items.push(tab);\r\n\r\n\t\t\tif(this.selected === null || this.items.length === 1)\r\n\t\t\t{\r\n\t\t\t\tthis.selectTab(tab);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.updateInterface();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn tab;\r\n\t\t}\r\n\t});\r\n\r\n\r\n\r\n\treturn tabs.splittable.TabGroupSplit = TabGroupSplit;\r\n});\ndefine('skylark-widgets-tabs/main',[\r\n\t\"./tabs\",\r\n\t\"./tab-button\",\r\n\t\"./tab-element\",\r\n\t\"./tab-group\",\r\n\t\"./splittable/tab-button-split\",\r\n\t\"./splittable/tab-container\",\r\n\t\"./splittable/tab-dual-container\",\r\n\t\"./splittable/tab-group-split\"\r\n\r\n],function(tabs){\r\n\treturn tabs;\r\n});\ndefine('skylark-widgets-tabs', ['skylark-widgets-tabs/main'], function (main) { return main; });\n\n"]}