{"version":3,"sources":["skylark-widgets-tabs.js"],"names":["define","skylark","attach","splittable","mouse","Widget","tabs","TabButton","inherit","klassName","_construct","parent","tab","prototype","call","this","self","_elm","draggable","style","cursor","boxSizing","skin","getSkin","backgroundColor","buttonColor","icon","document","createWidget","pointerEvents","position","src","appendChild","text","overflow","textAlign","textOverflow","whiteSpace","color","textColor","title","createTextNode","close","opacity","display","closeIconUrl","onmouseenter","onmouseleave","onclick","dragState","NONE","ondragstart","event","dataTransfer","setData","index","ondrop","preventDefault","borderLeft","borderRight","borderBottom","borderTop","getData","parseInt","PREVIOUS","container","moveTabIndex","NEXT","ondragover","placement","TabGroup","TOP","BOTTOM","layerX","size","x","target","layerY","y","ondragend","ondragleave","onmousedown","which","isLeftMouseButton","selectTab","closeable","isMiddleMouseButton","removeTab","buttonOverColor","isSelected","setIcon","setName","data","updateSelection","updateSize","top","left","width","height","right","strings","TabElement","panelColor","preventDragEvents","uuid","generateUUID","button","active","updateMetadata","updateSettings","updateValues","updateObjectsView","activate","deactivate","undefined","update","requestAnimationFrame","object","isAttached","select","selected","destroy","Vector2","DragBuffer","Panel","buttons","element","barColor","get","attachTab","pop","empty","createElement","flexDirection","justifyContent","Locale","openTabToEditContent","buttonSize","setPlacement","items","focused","i","length","insertIndex","attachTo","splice","push","updateItemIndex","updateInterface","origin","destination","getActiveTab","closeActual","selectNextTab","selectPreviousTab","addTab","TabConstructor","getTab","type","dontDestroy","indexOf","clear","forceAll","tabSize","clone","offset","LEFT","RIGHT","visible","copy","multiplyScalar","set","updatePosition","TabButtonSplit","Editor","theme","Global","FILE_PATH","TabContainer","group","split","direction","concat","DualContainer","TabDualContainer","_elmA","_elmB","geom","dragBorder","canSplit","canCollapse","tabArea","zIndex","pagePosition","clientX","clientY","contains","removeChild","buffer","bottom","TabGroupSplit","orientation","HORIZONTAL","VERTICAL","elementA","attachA","elementB","attachB","console","warn","collapse","options","main"],"mappings":"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","file":"../skylark-widgets-tabs.js","sourcesContent":["define('skylark-widgets-tabs/tabs',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.tabs\",{\r\n\t\tsplittable : {\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n});\ndefine('skylark-widgets-tabs/TabButton',[\r\n\t\"skylark-devices-points/mouse\",\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./tabs\"\r\n],function(\r\n\tmouse,\r\n\tWidget, \r\n\ttabs\r\n){\r\n\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Tab button is used to navigate trough tabs.\r\n\t *\r\n\t * @class TabButton\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent\r\n\t * @param {TabWidget} tab\r\n\t */\r\n\t var TabButton = Widget.inherit({\r\n\t \t\"klassName\" : \"TabButton\",\r\n\r\n\t\t\"_construct\" : function(parent, tab) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tthis._elm.draggable = true;\r\n\t\t\tthis._elm.style.cursor = \"pointer\";\r\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.buttonColor;\r\n\t\t\tthis._elm.style.backgroundColor = skin.buttonColor;\r\n\r\n\t\t\t/**\r\n\t\t\t * Pointer to the tab element related with this button.\r\n\t\t\t *\r\n\t\t\t * @property tab\r\n\t\t\t * @type {TabWidget}\r\n\t\t\t */\r\n\t\t\tthis.tab = tab;\r\n\r\n\t\t\t//Icon\r\n\t\t\tthis.icon = document.createWidget(\"img\");\r\n\t\t\tthis.icon.style.pointerEvents = \"none\";\r\n\t\t\tthis.icon.style.position = \"absolute\";\r\n\t\t\tthis.icon.src = tab.icon;\r\n\t\t\tthis._elm.appendChild(this.icon);\r\n\r\n\t\t\t//Text\r\n\t\t\tthis.text = document.createWidget(\"div\");\r\n\t\t\tthis.text.style.position = \"absolute\";\r\n\t\t\tthis.text.style.overflow = \"hidden\";\r\n\t\t\tthis.text.style.textAlign = \"center\";\r\n\t\t\tthis.text.style.pointerEvents = \"none\";\r\n\t\t\tthis.text.style.textOverflow = \"ellipsis\";\r\n\t\t\tthis.text.style.whiteSpace = \"nowrap\";\r\n\r\n\t\t\t//this.text.style.color = Editor.theme.textColor;\r\n\t\t\tthis.text.style.color = skin.textColor;\r\n\r\n\t\t\tthis._elm.appendChild(this.text);\r\n\r\n\t\t\t//Title\r\n\t\t\tthis.title = document.createTextNode(tab.title);\r\n\t\t\tthis.text.appendChild(this.title);\r\n\r\n\t\t\t//Close button\r\n\t\t\tthis.close = document.createWidget(\"img\");\r\n\t\t\tthis.close.draggable = false;\r\n\t\t\tthis.close.style.position = \"absolute\";\r\n\t\t\tthis.close.style.opacity = 0.5;\r\n\t\t\tthis.close.style.display = (tab.closeable) ? \"block\" : \"none\";\r\n\t\t\t\r\n\t\t\t//this.close.src = Global.FILE_PATH + \"icons/misc/close.png\";\r\n\t\t\tthis.close.src = skin.closeIconUrl;\r\n\t\t\t\r\n\t\t\tthis._elm.appendChild(this.close);\r\n\r\n\t\t\tthis.close.onmouseenter = function(){\r\n\t\t\t\tthis.style.opacity = 1.0;\r\n\t\t\t};\r\n\r\n\t\t\tthis.close.onmouseleave = function(){\r\n\t\t\t\tthis.style.opacity = 0.5;\r\n\t\t\t};\r\n\r\n\t\t\tthis.close.onclick = function()\t{\r\n\t\t\t\tself.tab.close();\r\n\t\t\t};\r\n\r\n\r\n\t\t\t//Drag state\r\n\t\t\tvar dragState = TabButton.NONE;\r\n\r\n\t\t\t//Drag control\r\n\t\t\tthis._elm.ondragstart = function(event) {\r\n\t\t\t\tevent.dataTransfer.setData(\"tab\", self.tab.index);\r\n\t\t\t\tdragState = TabButton.NONE;\r\n\t\t\t};\r\n\r\n\t\t\t//Drag drop\r\n\t\t\tthis._elm.ondrop = function(event) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tthis.style.borderLeft = null;\r\n\t\t\t\tthis.style.borderRight = null;\r\n\t\t\t\tthis.style.borderBottom = null;\r\n\t\t\t\tthis.style.borderTop = null;\r\n\r\n\t\t\t\tvar index = event.dataTransfer.getData(\"tab\");\r\n\t\t\t\tif(index !== \"\") {\r\n\t\t\t\t\tindex = parseInt(index);\r\n\r\n\t\t\t\t\tif(index !== self.tab.index) {\t\r\n\t\t\t\t\t\t//Before\r\n\t\t\t\t\t\tif(dragState === TabButton.PREVIOUS) {\r\n\t\t\t\t\t\t\tself.tab.container.moveTabIndex(index, index < self.tab.index ? self.tab.index - 1 : self.tab.index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//After\r\n\t\t\t\t\t\telse if(dragState === TabButton.NEXT){\r\n\t\t\t\t\t\t\tself.tab.container.moveTabIndex(index, index < self.tab.index ? self.tab.index : self.tab.index + 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t//Drag over\r\n\t\t\tthis._elm.ondragover = function(event)\r\n\t\t\t{\r\n\t\t\t\tif(self.tab.container.placement === TabGroup.TOP || self.tab.container.placement === TabGroup.BOTTOM)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(event.layerX > self.size.x * 0.8 || event.target !== this)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(dragState !== TabButton.NEXT)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdragState = TabButton.NEXT;\r\n\t\t\t\t\t\t\tthis.style.borderLeft = null;\r\n\t\t\t\t\t\t\tthis.style.borderRight = \"thick solid #999999\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(event.layerX < self.size.x * 0.2)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(dragState !== TabButton.PREVIOUS)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdragState = TabButton.PREVIOUS;\r\n\t\t\t\t\t\t\tthis.style.borderRight = null;\r\n\t\t\t\t\t\t\tthis.style.borderLeft = \"thick solid #999999\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(dragState !== TabButton.NONE\t)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdragState = TabButton.NONE;\r\n\t\t\t\t\t\t\tthis.style.borderLeft = null;\r\n\t\t\t\t\t\t\tthis.style.borderRight = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(event.layerY > self.size.y * 0.7 || event.target !== this)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(dragState !== TabButton.NEXT)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdragState = TabButton.NEXT;\r\n\t\t\t\t\t\t\tthis.style.borderTop = null;\r\n\t\t\t\t\t\t\tthis.style.borderBottom = \"solid #999999\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(event.layerY < self.size.y * 0.3)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(dragState !== TabButton.PREVIOUS)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdragState = TabButton.PREVIOUS;\r\n\t\t\t\t\t\t\tthis.style.borderBottom = null;\r\n\t\t\t\t\t\t\tthis.style.borderTop = \"solid #999999\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(dragState !== TabButton.NONE\t)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdragState = TabButton.NONE;\r\n\t\t\t\t\t\t\tthis.style.borderBottom = null;\r\n\t\t\t\t\t\t\tthis.style.borderTop = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t//Drag end\r\n\t\t\tthis._elm.ondragend = function(event){\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\r\n\t\t\t\tdragState = TabButton.NONE;\r\n\t\t\t\tthis.style.borderLeft = null;\r\n\t\t\t\tthis.style.borderRight = null;\r\n\t\t\t\tthis.style.borderBottom = null;\r\n\t\t\t\tthis.style.borderTop = null;\r\n\t\t\t};\r\n\r\n\t\t\t//Drag leave\r\n\t\t\tthis._elm.ondragleave = function(event)\t{\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\r\n\t\t\t\tdragState = TabButton.NONE;\r\n\t\t\t\tthis.style.borderLeft = null;\r\n\t\t\t\tthis.style.borderRight = null;\r\n\t\t\t\tthis.style.borderBottom = null;\r\n\t\t\t\tthis.style.borderTop = null;\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmousedown = function(event)\t{\r\n\t\t\t\tvar button = event.which - 1;\r\n\r\n\t\t\t\t//Select tab\r\n\t\t\t\t//if(button === Mouse.LEFT)\r\n\t\t\t\tif(mouse.isLeftMouseButton(event))\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tab.container.selectTab(self.tab);\r\n\t\t\t\t}\r\n\t\t\t\t//Close tab\r\n\t\t\t\t//else if(tab.closeable && button === Mouse.MIDDLE)\r\n\t\t\t\telse if(tab.closeable && mouse.isMiddleMouseButton(event))\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tab.container.removeTab(self.tab);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmouseenter = function()\t{\r\n\t\t\t\t//this.style.backgroundColor = Editor.theme.buttonOverColor;\r\n\t\t\t\tthis.style.backgroundColor = skin.buttonOverColor;\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmouseleave = function()\r\n\t\t\t{\r\n\t\t\t\tif(tab.isSelected()){\r\n\t\t\t\t\t//this.style.backgroundColor = Editor.theme.buttonOverColor;\r\n\t\t\t\t\tthis.style.backgroundColor = skin.buttonOverColor;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//this.style.backgroundColor = Editor.theme.buttonColor;\r\n\t\t\t\t\tthis.style.backgroundColor = skin.buttonColor;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the tab icon image.\r\n\t\t *\r\n\t\t * @method setIcon\r\n\t\t * @param {String} icon URL of the icon image.\r\n\t\t */\r\n\t\tsetIcon : function(icon) {\r\n\t\t\tthis.tab.icon = icon;\r\n\t\t\tthis.icon.src = icon;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text to be displayed in the button as its name.\r\n\t\t *\r\n\t\t * @method setName\r\n\t\t * @param {String} text\r\n\t\t */\r\n\t\tsetName : function(text) {\r\n\t\t\tthis.tab.title = text;\r\n\t\t\tthis.title.data = text;\r\n\t\t},\r\n\r\n\t\t//Update selected state of the button\r\n\t\tupdateSelection : function() {\r\n\t\t\t//this._elm.style.backgroundColor = this.tab.isSelected() ? Editor.theme.buttonOverColor : Editor.theme.buttonColor;\r\n\t\t\tvar skin = this.getSkin();\r\n\t\t\tthis._elm.style.backgroundColor = this.tab.isSelected() ? skin.buttonOverColor : skin.buttonColor;\r\n\t\t},\r\n\r\n\t\tupdateSize : function() {\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\t\t\t\r\n\t\t\t//Icon\r\n\t\t\tthis.icon.style.top = (this.size.y * 0.2) + \"px\";\r\n\t\t\tthis.icon.style.left = (this.size.y * 0.2) + \"px\"\r\n\t\t\tthis.icon.style.width = (this.size.y * 0.6) + \"px\";\r\n\t\t\tthis.icon.style.height = (this.size.y * 0.6) + \"px\";\r\n\r\n\t\t\t//Text\r\n\t\t\tthis.text.style.left = this.size.y + \"px\";\r\n\t\t\tthis.text.style.top = ((this.size.y - 12) / 2) + \"px\";\r\n\t\t\tthis.text.style.width = (this.size.x - 2 * this.size.y) + \"px\";\r\n\t\t\tthis.text.style.height = this.size.y + \"px\";\r\n\r\n\t\t\t//Close\r\n\t\t\tif(this.tab.closeable === true) {\r\n\t\t\t\tthis.close.style.width = (this.size.y * 0.4) + \"px\";\r\n\t\t\t\tthis.close.style.height = (this.size.y * 0.4) + \"px\";\r\n\t\t\t\tthis.close.style.top = (this.size.y * 0.3) + \"px\";\r\n\t\t\t\tthis.close.style.right = (this.size.y * 0.3) + \"px\";\r\n\t\t\t\tthis.close.style.display = \"block\";\r\n\t\t\t} else \t{\r\n\t\t\t\tthis.close.style.display = \"none\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateSelection();\r\n\t\t}\r\n\r\n\t });\r\n\r\n\r\n\tTabButton.NONE = 0;\r\n\tTabButton.PREVIOUS = 1;\r\n\tTabButton.NEXT = 2;\r\n\r\n\r\n\treturn tabs.TabButton = TabButton;\r\n});\ndefine('skylark-widgets-tabs/TabElement',[\r\n\t\"skylark-langx-strings\",\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./tabs\"\r\n],function(\r\n\tstrings,\r\n\tWidget,\r\n\ttabs\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Tab element is used to create tabbed elements.\r\n\t *\r\n\t * These are used to implement the main components of the interface (editors, menus, etc).\r\n\t *\r\n\t * @class TabElement\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t * @param {Boolean} closeable If false the tab cannot be closed.\r\n\t * @param {TabContainer} container Container for this tab.\r\n\t * @param {Number} index Index of the tab.\r\n\t * @param {String} title Title of the tab.\r\n\t * @param {String} icon Icon of the tab.\r\n\t */\r\n\r\n\tvar TabElement = Widget.inherit({\r\n\t\t\"klassName\" : \"TabElement\",\r\n\r\n\t\t\"_construct\" : function (parent, closeable, container, index, title, icon){\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.style.overflow = \"visible\";\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.panelColor;\r\n\t\t\tthis._elm.style.backgroundColor = skin.panelColor;\r\n\t\t\tthis.preventDragEvents();\r\n\r\n\t\t\t/**\r\n\t\t\t * Pointer to the group where this tab is.\r\n\t\t\t *\r\n\t\t\t * @property container\r\n\t\t\t * @type {TabGroup}\r\n\t\t\t */\r\n\t\t\tthis.container = container;\r\n\r\n\t\t\t/**\r\n\t\t\t * UUID of this tab.\r\n\t\t\t *\r\n\t\t\t * @property uuid\r\n\t\t\t * @type {String}\r\n\t\t\t */\r\n\t\t\tthis.uuid = strings.generateUUID();\r\n\r\n\t\t\t/**\r\n\t\t\t * Index of the tab inside of the container\r\n\t\t\t *\r\n\t\t\t * @property index\r\n\t\t\t * @type {Number}\r\n\t\t\t */\r\n\t\t\tthis.index = index;\r\n\r\n\t\t\t/**\r\n\t\t\t * Pointer to the button associated with this tab.\r\n\t\t\t *\r\n\t\t\t * @property container\r\n\t\t\t * @type {TabButton}\r\n\t\t\t */\r\n\t\t\tthis.button = null;\r\n\r\n\t\t\t//Meta\r\n\t\t\tthis.closeable = closeable;\r\n\t\t\tthis.title = title;\r\n\t\t\tthis.icon = icon;\r\n\r\n\t\t\t/**\r\n\t\t\t * Indicates if the tab is currently active (on display).\r\n\t\t\t *\r\n\t\t\t * @property active\r\n\t\t\t * @type {Boolean}\r\n\t\t\t */\r\n\t\t\tthis.active = false;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Update tab metadata (name, icon, ...)\r\n\t\t * \r\n\t\t * Called after applying changes to object.\r\n\t\t * \r\n\t\t * Called for every tab.\r\n\t\t *\r\n\t\t * @method updateMetadata\r\n\t\t */\r\n\t\tupdateMetadata : function(){\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update tab settings.\r\n\t\t * \r\n\t\t * Called after settings of the editor are changed.\r\n\t\t * \r\n\t\t * Called for every tab.\r\n\t\t *\r\n\t\t * @method updateSettings\r\n\t\t */\r\n\t\tupdateSettings : function(){\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update tab values of the gui for the object attached.\r\n\t\t * \r\n\t\t * Called when properties of objects are changed.\r\n\t\t * \r\n\t\t * Called only for active tabs.\r\n\t\t *\r\n\t\t * @method updateValues\r\n\t\t */\r\n\t\tupdateValues : function(){\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update tab object view.\r\n\t\t * \r\n\t\t * Called when objects are added, removed, etc.\r\n\t\t * \r\n\t\t * Called only for active tabs.\r\n\t\t *\r\n\t\t * @method updateObjectsView\r\n\t\t */\r\n\t\tupdateObjectsView : function(){\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update tab after object selection changed.\r\n\t\t * \r\n\t\t * Called after a new object was selected.\r\n\t\t * \r\n\t\t * Called only for active tabs.\r\n\t\t *\r\n\t\t * @method updateSelection\r\n\t\t */\r\n\t\tupdateSelection : function(){\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Activate tab.\r\n\t\t * \r\n\t\t * Called when a tab becomes active (visible).\r\n\t\t *\r\n\t\t * @method activate\r\n\t\t */\r\n\t\tactivate : function()\t{\r\n\t\t\tif(this.active === true){\r\n\t\t\t\tthis.deactivate();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//TODO <IF TAB NEEDS UPDATE IT SHOULD TAKE CARE OF IT>\r\n\t\t\tif(this.update !== undefined){\r\n\t\t\t\tvar self = this;\r\n\r\n\t\t\t\tvar update = function()\r\n\t\t\t\t{\r\n\t\t\t\t\tself.update();\r\n\r\n\t\t\t\t\tif(self.active === true)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequestAnimationFrame(update);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\trequestAnimationFrame(update);\r\n\t\t\t}\r\n\r\n\t\t\tthis.active = true;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Deactivate tab.\r\n\t\t * \r\n\t\t * Called when a tab is deactivated or closed.\r\n\t\t *\r\n\t\t * @method deactivate\r\n\t\t */\r\n\t\tdeactivate : function(){\r\n\t\t\tthis.active = false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Generic method to attach object to a tab.\r\n\t\t *\r\n\t\t * Attached object can be edited using the tab.\r\n\t\t *\r\n\t\t * @method attach\r\n\t\t * @param {Object} object\r\n\t\t */\r\n\t\tattach : function(object){\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if an object or resource is attached to the tab.\r\n\t\t * \r\n\t\t * Called to check if a tab needs to be closed after changes to objects.\r\n\t\t *\r\n\t\t * @method isAttached\r\n\t\t */\r\n\t\tisAttached : function(object)\t{\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Close the tab element and remove is from the container.\r\n\t\t * \r\n\t\t * @method close\r\n\t\t */\r\n\t\tclose : function()\t{\r\n\t\t\tthis.container.removeTab(this);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select this tab.\r\n\t\t * \r\n\t\t * @method select\r\n\t\t */\r\n\t\tselect : function(){\r\n\t\t\tthis.container.selectTab(this);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if tab is selected\r\n\t\t *\r\n\t\t * @method isSelected\r\n\t\t * @return {Boolean} True if the tab is selected in the container.\r\n\t\t */\r\n\t\tisSelected : function(){\r\n\t\t\treturn this === this.container.selected;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set icon of the button attached to this tab.\r\n\t\t *\r\n\t\t * The button should have a .setIcon(url) method.\r\n\t\t *\r\n\t\t * @method setIcon\r\n\t\t * @param {String} icon URL of the icon.\r\n\t\t */\r\n\t\tsetIcon : function(icon){\r\n\t\t\tthis.icon = icon;\r\n\t\t\tthis.button.setIcon(icon);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text in the button.\r\n\t\t *\r\n\t\t * The button should have a .setName(text) method.\r\n\t\t *\r\n\t\t * @method setName\r\n\t\t * @param {String} text\r\n\t\t */\r\n\t\tsetName : function(text){\r\n\t\t\tthis.title = text;\r\n\t\t\tthis.button.setName(text);\r\n\t\t},\r\n\r\n\t\tdestroy : function(){\r\n\t\t\tWidget.prototype.destroy.call(this);\r\n\t\t\t\r\n\t\t\tif(this.button !== null){\r\n\t\t\t\tthis.button.destroy();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\treturn tabs.TabElement = TabElement;\r\n});\ndefine('skylark-widgets-tabs/TabGroup',[\r\n\t\"skylark-langx-numerics/Vector2\",\r\n\t\"skylark-widgets-base/dnd/DragBuffer\",\r\n\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"skylark-widgets-base/panels/Panel\",\r\n\t\"./tabs\",\r\n\t\"./TabElement\",\r\n\t\"./TabButton\"\r\n\r\n],function(\r\n\tVector2,\r\n\tDragBuffer,\r\n\tWidget,\r\n\tPanel,\r\n\tTabElement,\r\n\tTabButton\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * A tab group contains and manages tab elements.\r\n\t *\r\n\t * The group is also responsible for creating and managing the lifecycle of its tab elements.\r\n\t * \r\n\t * @class TabGroup\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\r\n\t var TabGroup = Widget.inherit({\r\n\t \t\"klassName\" : \"TabGroup\",\r\n\r\n\t\t\"_construct\" : function (parent, placement)\r\n\t\t{\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.style.overflow = \"visible\";\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.panelColor;\r\n\t\t\tthis._elm.style.backgroundColor = skin.panelColor;\r\n\r\n\t\t\tthis.preventDragEvents();\r\n\t\t\t\r\n\t\t\t// Buttons\r\n\t\t\tthis.buttons = new Panel(this);\r\n\t\t\t//this.buttons.element.style.backgroundColor = Editor.theme.barColor;\r\n\t\t\tthis.buttons.element.style.backgroundColor = skin.barColor;\r\n\t\t\tthis.buttons.element.ondrop = function(event)\r\n\t\t\t{\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tvar uuid = event.dataTransfer.getData(\"uuid\");\r\n\t\t\t\tvar tab = DragBuffer.get(uuid);\r\n\r\n\t\t\t\tif(tab instanceof TabElement)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.attachTab(tab);\r\n\t\t\t\t\tDragBuffer.pop(uuid);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Tab\r\n\t\t\tthis.tab = new Panel(this);\r\n\r\n\t\t\t/**\r\n\t\t\t * Panel used to display a message indicating that the tab is empty.\r\n\t\t\t *\r\n\t\t\t * @property empty\r\n\t\t\t * @type {Widget}\r\n\t\t\t */\r\n\t\t\tthis.empty = document.createElement(\"div\");\r\n\t\t\tthis.empty.style.position = \"absolute\";\r\n\t\t\tthis.empty.style.textAlign = \"center\";\r\n\t\t\tthis.empty.style.display = \"none\";\r\n\t\t\tthis.empty.style.width = \"100%\";\r\n\t\t\tthis.empty.style.height = \"100%\";\r\n\t\t\tthis.empty.style.flexDirection = \"column\";\r\n\t\t\tthis.empty.style.justifyContent = \"center\";\r\n\t\t\tthis.empty.style.pointerEvents = \"none\";\r\n\t\t\tthis.empty.appendChild(document.createTextNode(Locale.openTabToEditContent));\r\n\t\t\tthis._elm.appendChild(this.empty);\r\n\r\n\t\t\t/**\r\n\t\t\t * Tab that is currently selected.\r\n\t\t\t *\r\n\t\t\t * @property selected\r\n\t\t\t * @type {TabElement}\r\n\t\t\t */\r\n\t\t\tthis.selected = null;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Base size of the buttons in this group.\r\n\t\t\t * \r\n\t\t\t * Size may be ajusted to fit the available space.\r\n\t\t\t *\r\n\t\t\t * @property buttonSize\r\n\t\t\t * @type {Vector2}\r\n\t\t\t */\r\n\t\t\tthis.buttonSize = new Vector2(150, 22);\r\n\r\n\t\t\t/**\r\n\t\t\t * Tab buttons placement.\r\n\t\t\t *\r\n\t\t\t * @property placement\r\n\t\t\t * @type {number}\r\n\t\t\t */\r\n\t\t\tthis.placement = placement !== undefined ? placement : TabGroup.TOP;\r\n\t\t\tthis.setPlacement(this.placement);\r\n\r\n\t\t\t/**\r\n\t\t\t * Tab elements attache to this group.\r\n\t\t\t * \r\n\t\t\t * @type {Array}\r\n\t\t\t */\r\n\t\t\tthis.items = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Indicates if the tab is currently on focus.\r\n\t\t\t *\r\n\t\t\t * @property focused\r\n\t\t\t * @type {boolean}\r\n\t\t\t */\r\n\t\t\tthis.focused = false;\r\n\r\n\t\t\tthis._elm.onmouseenter = function()\r\n\t\t\t{\r\n\t\t\t\tself.focused = true;\r\n\t\t\t};\r\n\t\t\tthis._elm.onmouseleave = function()\r\n\t\t\t{\r\n\t\t\t\tself.focused = false;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tabs object data.\r\n\t\t *\r\n\t\t * @method updateMetadata\r\n\t\t */\r\n\t\tupdateMetadata : function(){\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.items[i].updateMetadata();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tab object views.\r\n\t\t *\r\n\t\t * @method updateMetadata\r\n\t\t */\r\n\t\tupdateObjectsView : function(){\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.items[i].updateObjectsView();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Attach tab to this group and remove it from the original group.\r\n\t\t *\r\n\t\t * @method attachTab\r\n\t\t * @param {TabElement} tab Tab to be moved.\r\n\t\t * @param {number} insertIndex Index where to place the tab.\r\n\t\t */\r\n\t\tattachTab : function(tab, insertIndex){\t\r\n\t\t\t// Remove from old group\r\n\t\t\ttab.container.removeTab(tab.index, true);\r\n\t\t\t\r\n\t\t\t// Attach to this group\r\n\t\t\ttab.container = this;\r\n\t\t\ttab.button.attachTo(this.buttons);\r\n\t\t\ttab.attachTo(this.tab);\r\n\t\t\t\r\n\t\t\t// Add to items\r\n\t\t\tif(insertIndex !== undefined){\r\n\t\t\t\ttab.index = insertIndex;\r\n\t\t\t\tthis.items.splice(insertIndex, 0, tab);\r\n\t\t\t}else{\r\n\t\t\t\ttab.index = this.items.length;\r\n\t\t\t\tthis.items.push(tab);\r\n\t\t\t}\r\n\r\n\t\t\t// Select the tab if none selected\r\n\t\t\tif(this.selected === null)\t{\r\n\t\t\t\tthis.selectTab(tab);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.updateItemIndex();\r\n\t\t\tthis.updateInterface();\r\n\r\n\t\t\treturn tab;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Move tab from position to another.\r\n\t\t *\r\n\t\t * @method moveTabIndex\r\n\t\t * @param {number} origin Origin index.\r\n\t\t * @param {number} destination Destination index.\r\n\t\t */\r\n\t\tmoveTabIndex : function(origin, destination)\t{\r\n\t\t\tvar button = this.items[origin];\r\n\r\n\t\t\tthis.items.splice(origin, 1);\r\n\t\t\tthis.items.splice(destination, 0, button);\r\n\r\n\t\t\tthis.updateItemIndex();\r\n\t\t\tthis.updateInterface();\r\n\t\t},\r\n\r\n\t\tupdateSelection : function()\t{\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.items[i].updateSelection();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSettings : function()\t{\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.items[i].updateSettings();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get the currently active tab of the group.\r\n\t\t *\r\n\t\t * @method getActiveTab\r\n\t\t */\r\n\t\tgetActiveTab : function(){\r\n\t\t\tif(this.selected !== null)\r\n\t\t\t{\r\n\t\t\t\treturn this.selected;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Close actual tab if its closeable.\r\n\t\t *\r\n\t\t * @method closeActual\r\n\t\t */\r\n\t\tcloseActual : function()\t{\r\n\t\t\tif(this.selected !== null && this.selected.closeable)\r\n\t\t\t{\r\n\t\t\t\tthis.selected.deactivate();\r\n\t\t\t\tthis.removeTab(this.selected);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t * Select tab to set active on this group.\r\n\t\t *\r\n\t\t * If not valid tab is selected the actual selection will be cleared.\r\n\t\t *\r\n\t\t * @method selectTab\r\n\t\t * @param {TabElement} tab TabElement to be selected or index in the tab array.\r\n\t\t */\r\n\t\tselectTab : function(tab){\r\n\t\t\tif(this.selected !== null)\r\n\t\t\t{\r\n\t\t\t\tthis.selected.deactivate();\r\n\t\t\t}\r\n\r\n\t\t\t// Tab as a TabElement object\r\n\t\t\tif(tab instanceof TabElement)\r\n\t\t\t{\r\n\t\t\t\tthis.selected = tab;\r\n\t\t\t\tthis.selected.activate();\r\n\t\t\t}\r\n\t\t\t// Tab as a index\r\n\t\t\telse if(typeof tab === \"number\" && tab > -1 && tab < this.items.length)\r\n\t\t\t{\r\n\t\t\t\tthis.selected = this.items[tab];\r\n\t\t\t\tthis.selected.activate();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.selected = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis.empty.style.display = this.selected === null ? \"flex\" : \"none\";\r\n\t\t\tthis.updateInterface();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select next tab.\r\n\t\t *\r\n\t\t * @method selectNextTab\r\n\t\t */\r\n\t\tselectNextTab : function(){\r\n\t\t\tif(this.items.length > 0)\r\n\t\t\t{\r\n\t\t\t\tthis.selectTab((this.selected.index + 1) % this.items.length);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select previous tab.\r\n\t\t *\r\n\t\t * @method selectPreviousTab\r\n\t\t */\r\n\t\tselectPreviousTab : function(){\r\n\t\t\tif(this.items.length > 0)\r\n\t\t\t{\r\n\t\t\t\tif(this.selected.index === 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.selectTab(this.items.length - 1);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.selectTab(this.selected.index - 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add new option to tab group.\r\n\t\t *\r\n\t\t * @method addtab\r\n\t\t */\r\n\t\taddTab : function(TabConstructor, closeable)\t{\r\n\t\t\tvar tab = new TabConstructor(this.tab, closeable, this, this.items.length);\r\n\t\t\ttab.button = new TabButton(this.buttons, tab);\r\n\t\t\tthis.items.push(tab);\r\n\t\t\t\r\n\t\t\tif(this.selected === null || this.items.length === 1)\r\n\t\t\t{\r\n\t\t\t\tthis.selectTab(tab);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.updateInterface();\r\n\t\t\t}\r\n\r\n\t\t\treturn tab;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get tab from tab type and attached object is there is any.\r\n\t\t *\r\n\t\t * @method getTab\r\n\t\t * @param {Constructor} type Type of tab to look for.\r\n\t\t * @param {Object} object Object attached to the tab.\r\n\t\t */\r\n\t\tgetTab : function(type, object){\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif(this.items[i] instanceof type)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(object === undefined || this.items[i].isAttached(object))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn this.items[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove tab from group.\r\n\t\t *\r\n\t\t * @method removeTab\r\n\t\t * @param {number} index Index of tab to look for.\r\n\t\t * @param {boolean} dontDestroy If true the element is not destroyed.\r\n\t\t */\r\n\t\tremoveTab : function(index, dontDestroy)\t{\t\r\n\t\t\t// If index is an object get the actual index\r\n\t\t\tif(typeof index === \"object\"){\r\n\t\t\t\tindex = this.items.indexOf(index);\r\n\t\t\t}\r\n\r\n\t\t\t// Check if the index is in range\r\n\t\t\tif(index > -1 && index < this.items.length){\r\n\t\t\t\tvar tab = this.items[index];\r\n\r\n\t\t\t\tif(dontDestroy !== true)\r\n\t\t\t\t{\r\n\t\t\t\t\ttab.destroy();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.items.splice(index, 1);\r\n\t\t\t\tthis.updateItemIndex();\r\n\r\n\t\t\t\t// Select option\r\n\t\t\t\tif(this.selected === tab)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this.items.length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.selectTab(index !== 0 ? index - 1 : 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.selectTab(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\t\t\t\t\tthis.selectTab(null);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn tab;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove all closable tabs from the group.\r\n\t\t *\r\n\t\t * @method clear\r\n\t\t * @param {boolean} forceAll Remove also the not closable tabs.\r\n\t\t */\r\n\t\tclear : function(forceAll){\r\n\t\t\tif(forceAll === true)\r\n\t\t\t{\r\n\t\t\t\twhile(this.items.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.items.pop().destroy();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.selectTab(null);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar i = 0;\r\n\t\t\t\twhile(i < this.items.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this.items[i].closeable)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.items[i].destroy();\r\n\t\t\t\t\t\tthis.items.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check is selected tab is still available\r\n\t\t\t\tvar index = this.items.indexOf(this.selected);\r\n\t\t\t\tif(index === -1 && this.items.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.selectTab(0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update index variable stored in the tabs.\r\n\t\t *\r\n\t\t * @method updateItemIndex\r\n\t\t */\r\n\t\tupdateItemIndex : function(){\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.items[i].index = i;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the tab group buttons placement.\r\n\t\t *\r\n\t\t * @method setPlacement\r\n\t\t * @param {number} placement\r\n\t\t */\r\n\t\tsetPlacement : function(placement){\r\n\t\t\tthis.placement = placement;\r\n\t\t},\r\n\r\n\t\tupdateSize : function(){\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\r\n\t\t\tvar tabSize = this.size.clone();\r\n\t\t\tvar buttonSize = this.buttonSize.clone();\r\n\t\t\tvar offset = this.buttonSize.clone();\r\n\r\n\t\t\t// Calculate size of the buttons and offset\r\n\t\t\tif(this.placement === TabGroup.TOP || this.placement === TabGroup.BOTTOM)\r\n\t\t\t{\r\n\t\t\t\tif(buttonSize.x * this.items.length > this.size.x)\r\n\t\t\t\t{\r\n\t\t\t\t\tbuttonSize.x = this.size.x / this.items.length;\r\n\t\t\t\t\toffset.x = buttonSize.x;\r\n\t\t\t\t}\r\n\t\t\t\ttabSize.y -= this.buttonSize.y;\r\n\t\t\t\toffset.y = 0;\r\n\t\t\t}\r\n\t\t\telse if(this.placement === TabGroup.LEFT || this.placement === TabGroup.RIGHT)\r\n\t\t\t{\r\n\t\t\t\tif(buttonSize.y * this.items.length > this.size.y)\r\n\t\t\t\t{\r\n\t\t\t\t\tbuttonSize.y = this.size.y / this.items.length;\r\n\t\t\t\t\toffset.y = buttonSize.y;\r\n\t\t\t\t}\r\n\t\t\t\ttabSize.x -= this.buttonSize.x;\r\n\t\t\t\toffset.x = 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Update tab and buttons\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar tab = this.items[i];\r\n\t\t\t\ttab.visible = this.selected === tab;\r\n\t\t\t\ttab.size.copy(tabSize);\r\n\t\t\t\ttab.updateInterface();\r\n\r\n\t\t\t\tvar button = tab.button;\r\n\t\t\t\tbutton.size.copy(buttonSize);\r\n\t\t\t\tbutton.position.copy(offset);\r\n\t\t\t\tbutton.position.multiplyScalar(i);\r\n\t\t\t\tbutton.updateInterface();\r\n\t\t\t}\r\n\r\n\t\t\tthis.tab.size.copy(tabSize);\r\n\t\t\tthis.tab.updateSize();\r\n\r\n\t\t\t// Position buttons and tab division\r\n\t\t\tif(this.placement === TabGroup.TOP)\r\n\t\t\t{\t\r\n\t\t\t\tthis.buttons.position.set(0, 0);\r\n\t\t\t\tthis.buttons.updatePosition();\r\n\t\t\t\tthis.buttons.size.set(this.size.x, this.buttonSize.y);\r\n\t\t\t\tthis.buttons.updateSize();\r\n\r\n\t\t\t\tthis.tab.position.set(0, this.buttonSize.y);\r\n\t\t\t\tthis.tab.updatePosition();\r\n\t\t\t}\r\n\t\t\telse if(this.placement === TabGroup.BOTTOM)\r\n\t\t\t{\r\n\t\t\t\tthis.buttons.position.set(0, this.size.y - this.buttonSize.y);\r\n\t\t\t\tthis.buttons.updatePosition();\r\n\t\t\t\tthis.buttons.size.set(this.size.x, this.buttonSize.y);\r\n\t\t\t\tthis.buttons.updateSize();\r\n\r\n\t\t\t\tthis.tab.position.set(0, 0);\r\n\t\t\t\tthis.tab.updatePosition();\r\n\t\t\t}\r\n\t\t\telse if(this.placement === TabGroup.LEFT)\r\n\t\t\t{\r\n\t\t\t\tthis.buttons.position.set(0, 0);\r\n\t\t\t\tthis.buttons.updatePosition();\r\n\t\t\t\tthis.buttons.size.set(this.buttonSize.x, this.size.y);\r\n\t\t\t\tthis.buttons.updateSize();\r\n\t\t\t\t\r\n\t\t\t\tthis.tab.position.set(this.buttonSize.x, 0);\r\n\t\t\t\tthis.tab.updatePosition();\r\n\t\t\t}\r\n\t\t\telse if(this.placement === TabGroup.RIGHT)\r\n\t\t\t{\r\n\t\t\t\tthis.buttons.position.set(this.size.x - this.buttonSize.x, 0);\r\n\t\t\t\tthis.buttons.updatePosition();\r\n\t\t\t\tthis.buttons.size.set(this.buttonSize.x, this.size.y);\r\n\t\t\t\tthis.buttons.updateSize();\r\n\r\n\t\t\t\tthis.tab.position.set(0, 0);\r\n\t\t\t\tthis.tab.updatePosition();\r\n\t\t\t}\r\n\t\t}\r\n\t });\r\n\r\n\r\n\r\n\tTabGroup.TOP = 0;\r\n\tTabGroup.BOTTOM = 1;\r\n\tTabGroup.LEFT = 2;\r\n\tTabGroup.RIGHT = 3;\r\n\r\n\r\n\treturn tabs.TabGroup = TabGroup;\r\n\r\n});\ndefine('skylark-widgets-tabs/splittable/TabButtonSplit',[\n\t\"skylark-devices-points/mouse\",\n\t\"skylark-widgets-base/dnd/DragBuffer\",\n\n\t\"skylark-widgets-base/Widget\",\n\t\"../tabs\",\n\t\"../TabElement\",\n\t\"../TabGroup\"\n],function(\n\tmouse,\n\n\tDragBuffer,\n\tWidget,\n\n\ttabs,\n\tTabElement,\n\tTabGroup\n){\n\t\"use strict\";\n\n\t/**\n\t * Tab button is used to navigate trough tabs.\n\t *\n\t * The split version of the tab button is intended to be used alongside splitable tab groups.\n\t * \n\t * @class TabButtonSplit\n\t * @extends {Widget}\n\t * @param {Widget} parent\n\t * @param {TabElement} tab\n\t */\n\t var TabButtonSplit = Widget.inherit({\n\t \t\"klassName\" : \"TabButtonSplit\",\n\n\t\t\"_construct\" : function (parent, tab)\n\t\t{\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\n\n\t\t\tvar self = this;\n\n\t\t\tthis._elm.draggable = true;\n\t\t\tthis._elm.style.cursor = \"pointer\";\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\n\n\n\t\t\tvar skin = this.getSkin();\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.buttonColor;\n\t\t\tthis._elm.style.backgroundColor = skin.buttonColor;\n\n\t\t\t//Tab\n\t\t\tthis.tab = tab;\n\n\t\t\t//Icon\n\t\t\tthis.icon = document.createElement(\"img\");\n\t\t\tthis.icon.style.pointerEvents = \"none\";\n\t\t\tthis.icon.style.position = \"absolute\";\n\t\t\tthis.icon.src = tab.icon;\n\t\t\tthis._elm.appendChild(this.icon);\n\n\t\t\t//Text\n\t\t\tthis.text = document.createElement(\"div\");\n\t\t\tthis.text.style.position = \"absolute\";\n\t\t\tthis.text.style.overflow = \"hidden\";\n\t\t\tthis.text.style.textAlign = \"center\";\n\t\t\tthis.text.style.pointerEvents = \"none\";\n\t\t\tthis.text.style.textOverflow = \"ellipsis\";\n\t\t\tthis.text.style.whiteSpace = \"nowrap\";\n\t\t\tthis.text.style.color = Editor.theme.textColor;\n\t\t\tthis._elm.appendChild(this.text);\n\n\t\t\t//Title\n\t\t\tthis.title = document.createTextNode(tab.title);\n\t\t\tthis.text.appendChild(this.title);\n\n\t\t\t//Close button\n\t\t\tthis.close = document.createElement(\"img\");\n\t\t\tthis.close.draggable = false;\n\t\t\tthis.close.style.position = \"absolute\";\n\t\t\tthis.close.style.opacity = 0.5;\n\t\t\tthis.close.style.display = (tab.closeable) ? \"block\" : \"none\";\n\t\t\tthis.close.src = Global.FILE_PATH + \"icons/misc/close.png\";\n\t\t\tthis._elm.appendChild(this.close);\n\n\t\t\tthis.close.onmouseenter = function()\n\t\t\t{\n\t\t\t\tthis.style.opacity = 1.0;\n\t\t\t};\n\n\t\t\tthis.close.onmouseleave = function()\n\t\t\t{\n\t\t\t\tthis.style.opacity = 0.5;\n\t\t\t};\n\n\t\t\tthis.close.onclick = function()\n\t\t\t{\n\t\t\t\tself.tab.close();\n\t\t\t};\n\t\t\t\n\t\t\t//Drag state\n\t\t\tvar dragState = TabButtonSplit.NONE;\n\n\t\t\t//Drag control\n\t\t\tthis._elm.ondragstart = function(event)\t{\n\t\t\t\tevent.dataTransfer.setData(\"uuid\", self.tab.uuid);\n\t\t\t\tDragBuffer.push(self.tab);\n\n\t\t\t\tevent.dataTransfer.setData(\"tab\", self.tab.index);\n\t\t\t\tdragState = TabButtonSplit.NONE;\n\t\t\t};\n\n\t\t\t//Drag drop\n\t\t\tthis._elm.ondrop = function(event){\tevent.preventDefault();\n\t\t\t\tthis.style.borderLeft = null;\n\t\t\t\tthis.style.borderRight = null;\n\t\t\t\tthis.style.borderBottom = null;\n\t\t\t\tthis.style.borderTop = null;\n\n\t\t\t\tvar uuid = event.dataTransfer.getData(\"uuid\");\n\t\t\t\tvar tab = DragBuffer.get(uuid);\n\n\t\t\t\tif(tab instanceof TabElement){\n\t\t\t\t\t//In the same container\n\t\t\t\t\tif(tab.container === self.tab.container){\n\t\t\t\t\t\tvar index = event.dataTransfer.getData(\"tab\");\n\t\t\t\t\t\tindex = parseInt(index);\n\n\t\t\t\t\t\tif(index !== self.tab.index){\t\n\t\t\t\t\t\t\t//Before\n\t\t\t\t\t\t\tif(dragState === TabButtonSplit.PREVIOUS)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tself.tab.container.moveTabIndex(index, index < self.tab.index ? self.tab.index - 1 : self.tab.index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//After\n\t\t\t\t\t\t\telse if(dragState === TabButtonSplit.NEXT)\t{\n\t\t\t\t\t\t\t\tself.tab.container.moveTabIndex(index, index < self.tab.index ? self.tab.index : self.tab.index + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tDragBuffer.pop(uuid);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//From another container\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t//Before\n\t\t\t\t\t\tif(dragState === TabButtonSplit.PREVIOUS){\n\t\t\t\t\t\t\tself.tab.container.attachTab(tab, self.tab.index);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//After\n\t\t\t\t\t\telse if(dragState === TabButtonSplit.NEXT){\n\t\t\t\t\t\t\tself.tab.container.attachTab(tab, self.tab.index + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tDragBuffer.pop(uuid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//Drag over\n\t\t\tthis._elm.ondragover = function(event){\n\t\t\t\tif(self.tab.container.placement === TabGroup.TOP || self.tab.container.placement === TabGroup.BOTTOM){\t\n\t\t\t\t\tif(event.layerX > self.size.x * 0.8 || event.target !== this)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(dragState !== TabButtonSplit.NEXT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdragState = TabButtonSplit.NEXT;\n\t\t\t\t\t\t\tthis.style.borderLeft = null;\n\t\t\t\t\t\t\tthis.style.borderRight = \"thick solid #999999\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(event.layerX < self.size.x * 0.2){\n\t\t\t\t\t\tif(dragState !== TabButtonSplit.PREVIOUS){\n\t\t\t\t\t\t\tdragState = TabButtonSplit.PREVIOUS;\n\t\t\t\t\t\t\tthis.style.borderRight = null;\n\t\t\t\t\t\t\tthis.style.borderLeft = \"thick solid #999999\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(dragState !== TabButtonSplit.NONE){\n\t\t\t\t\t\t\tdragState = TabButtonSplit.NONE;\n\t\t\t\t\t\t\tthis.style.borderLeft = null;\n\t\t\t\t\t\t\tthis.style.borderRight = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tif(event.layerY > self.size.y * 0.7 || event.target !== this)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(dragState !== TabButtonSplit.NEXT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdragState = TabButtonSplit.NEXT;\n\t\t\t\t\t\t\tthis.style.borderTop = null;\n\t\t\t\t\t\t\tthis.style.borderBottom = \"solid #999999\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(event.layerY < self.size.y * 0.3)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(dragState !== TabButtonSplit.PREVIOUS)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdragState = TabButtonSplit.PREVIOUS;\n\t\t\t\t\t\t\tthis.style.borderBottom = null;\n\t\t\t\t\t\t\tthis.style.borderTop = \"solid #999999\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(dragState !== TabButtonSplit.NONE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdragState = TabButtonSplit.NONE;\n\t\t\t\t\t\t\tthis.style.borderBottom = null;\n\t\t\t\t\t\t\tthis.style.borderTop = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//Drag end\n\t\t\tthis._elm.ondragend = function(event)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\t\n\t\t\t\tDragBuffer.pop(self.tab.uuid);\n\n\t\t\t\tdragState = TabButtonSplit.NONE;\n\t\t\t\tthis.style.borderLeft = null;\n\t\t\t\tthis.style.borderRight = null;\n\t\t\t\tthis.style.borderBottom = null;\n\t\t\t\tthis.style.borderTop = null;\n\t\t\t};\n\n\t\t\t//Drag leave\n\t\t\tthis._elm.ondragleave = function(event)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\t\n\t\t\t\tdragState = TabButtonSplit.NONE;\n\t\t\t\tthis.style.borderLeft = null;\n\t\t\t\tthis.style.borderRight = null;\n\t\t\t\tthis.style.borderBottom = null;\n\t\t\t\tthis.style.borderTop = null;\n\t\t\t};\n\n\t\t\t//Mouse down\n\t\t\tthis._elm.onmousedown = function(event)\n\t\t\t{\n\t\t\t\tvar button = event.which - 1;\n\n\t\t\t\t//Select tab\n\t\t\t\t//if(button === Mouse.LEFT)\n\t\t\t\tif (mouse.isLeftMouseButton(event))\t{\n\t\t\t\t\tself.tab.container.selectTab(self.tab);\n\t\t\t\t}\n\t\t\t\t//Close tab\n\t\t\t\t//else if(tab.closeable && button === Mouse.MIDDLE)\n\t\t\t\telse if(tab.closeable && mouse.isMiddleMouseButton(event))\n\t\t\t\t{\n\t\t\t\t\tself.tab.container.removeTab(self.tab);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//Mouse enter\n\t\t\tthis._elm.onmouseenter = function()\n\t\t\t{\n\t\t\t\t//this.style.backgroundColor = Editor.theme.buttonOverColor;\n\t\t\t\tthis.style.backgroundColor = skin.buttonOverColor;\n\t\t\t};\n\n\t\t\t//Mouse leave\n\t\t\tthis._elm.onmouseleave = function()\n\t\t\t{\n\t\t\t\tif(tab.isSelected())\n\t\t\t\t{\n\t\t\t\t\t//this.style.backgroundColor = Editor.theme.buttonOverColor;\n\t\t\t\t\tthis.style.backgroundColor = skin.buttonOverColor;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//this.style.backgroundColor = Editor.theme.buttonColor;\n\t\t\t\t\tthis.style.backgroundColor = skin.buttonColor;\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\n\t\t/**\n\t\t * Set the tab icon image.\n\t\t *\n\t\t * @method setIcon\n\t\t * @param {String} icon URL of the icon image.\n\t\t */\n\t\tsetIcon : function(icon) {\n\t\t\tthis.tab.icon = icon;\n\t\t\tthis.icon.src = icon;\n\t\t},\n\n\t\t/**\n\t\t * Set text to be displayed in the button as its name.\n\t\t *\n\t\t * @method setName\n\t\t * @param {String} text\n\t\t */\n\t\tsetName : function(text) {\n\t\t\tthis.tab.title = text;\n\t\t\tthis.title.data = text;\n\t\t},\n\n\t\tupdateSelection : function() {\n\t\t\t//this._elm.style.backgroundColor = this.tab.isSelected() ? Editor.theme.buttonOverColor : Editor.theme.buttonColor;\n\t\t\tvar skin = this.getSkin();\n\t\t\tthis._elm.style.backgroundColor = this.tab.isSelected() ? skin.buttonOverColor : skin.buttonColor;\n\t\t},\n\n\t\tupdateSize : function(){\n\t\t\tWidget.prototype.updateSize.call(this);\n\t\t\t\n\t\t\t//Icon\n\t\t\tthis.icon.style.top = (this.size.y * 0.2) + \"px\";\n\t\t\tthis.icon.style.left = (this.size.y * 0.2) + \"px\"\n\t\t\tthis.icon.style.width = (this.size.y * 0.6) + \"px\";\n\t\t\tthis.icon.style.height = (this.size.y * 0.6) + \"px\";\n\n\t\t\t//Text\n\t\t\tthis.text.style.left = this.size.y + \"px\";\n\t\t\tthis.text.style.top = ((this.size.y - 12) / 2) + \"px\";\n\t\t\tthis.text.style.width = (this.size.x - 2 * this.size.y) + \"px\";\n\t\t\tthis.text.style.height = this.size.y + \"px\";\n\n\t\t\t//Close\n\t\t\tif(this.tab.closeable === true)\n\t\t\t{\n\t\t\t\tthis.close.style.width = (this.size.y * 0.4) + \"px\";\n\t\t\t\tthis.close.style.height = (this.size.y * 0.4) + \"px\";\n\t\t\t\tthis.close.style.top = (this.size.y * 0.3) + \"px\";\n\t\t\t\tthis.close.style.right = (this.size.y * 0.3) + \"px\";\n\t\t\t\tthis.close.style.display = \"block\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.close.style.display = \"none\";\n\t\t\t}\n\n\t\t\tthis.updateSelection();\n\t\t}\n\n\t });\n\n\tTabButtonSplit.NONE = 0;\n\tTabButtonSplit.PREVIOUS = 1;\n\tTabButtonSplit.NEXT = 2;\n\n\n\treturn tabs.splittable.TabButtonSplit = TabButtonSplit;\n});\n\ndefine('skylark-widgets-tabs/splittable/TabContainer',[\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"../tabs\",\r\n\t\"../TabGroup\"\r\n],function(\r\n\tWidget,\r\n\ttabs,\r\n\tTabGroup\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Tab container is the root for a tree of tab groups.\r\n\t *\r\n\t * The container keeps track of all groups that may be splited into multiple groups.\r\n\t *\r\n\t * @class TabContainer\r\n\t * @extends {Widget}\r\n\t */\r\n\tvar TabContainer = Widget.inherit({\r\n\t\t\"klassName\" : \"TabContainer\",\r\n\r\n\t\t\"_construct\" :  function(parent){\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\t\t\t\r\n\t\t\tthis.group = null;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Split this tab group into two new tab groups.\r\n\t\t *\r\n\t\t * @method split\r\n\t\t * @param {Number} direction Direction where to insert the new tab.\r\n\t\t * @return {TabGroupSplit} The new created tab group.\r\n\t\t */\r\n\t\tsplit : function(direction)\r\n\t\t{\r\n\t\t\treturn this.group.split(direction);\r\n\t\t},\r\n\r\n\t\tattach : function(element)\r\n\t\t{\r\n\t\t\tthis.group = element;\r\n\t\t\tthis.group.attachTo(this);\r\n\t\t},\r\n\r\n\t\tupdateSize : function()\r\n\t\t{\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\r\n\t\t\tif(this.group !== null)\r\n\t\t\t{\r\n\t\t\t\tthis.group.position.set(0, 0);\r\n\t\t\t\tthis.group.size.copy(this.size);\r\n\t\t\t\tthis.group.updateInterface();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tabs object data.\r\n\t\t *\r\n\t\t * @method updateMetadata\r\n\t\t */\r\n\t\tupdateMetadata : function()\r\n\t\t{\r\n\t\t\tthis.group.updateMetadata();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tab object views.\r\n\t\t *\r\n\t\t * @method updateObjectsView\r\n\t\t */\r\n\t\tupdateObjectsView : function()\r\n\t\t{\r\n\t\t\tthis.group.updateObjectsView();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tab object selection status.\r\n\t\t * \r\n\t\t * Should be called after object selection changes.\r\n\t\t *\r\n\t\t * @method updateSelection\r\n\t\t */\r\n\t\tupdateSelection : function()\r\n\t\t{\r\n\t\t\tthis.group.updateSelection();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all tab settings.\r\n\t\t *\r\n\t\t * Should be called after editor settings are changed.\r\n\t\t *\r\n\t\t * @method updateSettings\r\n\t\t */\r\n\t\tupdateSettings : function()\r\n\t\t{\r\n\t\t\tthis.group.updateSettings();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get an array with all the tabs currently active.\r\n\t\t *\r\n\t\t * @method getActiveTab\r\n\t\t * @return {Array} Active tabs.\r\n\t\t */\r\n\t\tgetActiveTab : function()\r\n\t\t{\r\n\t\t\tvar active = [];\r\n\r\n\t\t\tif(this.group instanceof TabGroup)\r\n\t\t\t{\r\n\t\t\t\tvar tab = this.group.getActiveTab();\r\n\t\t\t\tif(tab !== null)\r\n\t\t\t\t{\r\n\t\t\t\t\tactive.push(tab);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tactive = active.concat(this.group.getActiveTab());\r\n\t\t\t}\r\n\r\n\t\t\treturn this.group.getActiveTab();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Close the tab that is currently being shown if it is closeable.\r\n\t\t *\r\n\t\t * @method closeActual\r\n\t\t */\r\n\t\tcloseActual : function()\r\n\t\t{\r\n\t\t\tthis.group.closeActual();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select a specific tab from the container tab tree.\r\n\t\t *\r\n\t\t * @method selectTab\r\n\t\t * @param {TabElement} tab Tab to select.\r\n\t\t */\r\n\t\tselectTab : function(tab)\r\n\t\t{\r\n\t\t\tthis.group.selectTab(tab);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select next tab from the currently focused tab group.\r\n\t\t *\r\n\t\t * @method selectNextTab\r\n\t\t */\r\n\t\tselectNextTab : function()\r\n\t\t{\r\n\t\t\tthis.group.selectNextTab();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Select previous tab from the currently focused tab group.\r\n\t\t *\r\n\t\t * @method selectPreviousTab\r\n\t\t */\r\n\t\tselectPreviousTab : function()\r\n\t\t{\r\n\t\t\tthis.group.selectPreviousTab();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add new tab to the tab container.\r\n\t\t * \r\n\t\t * @method addTab\r\n\t\t * @param {Constructor} TabConstructor Constructor if the TabElement to be added to the container.\r\n\t\t * @param {Boolean} closeable Indicates if the tab can be closed.\r\n\t\t */\r\n\t\taddTab : function(TabConstructor, closeable)\r\n\t\t{\r\n\t\t\treturn this.group.addTab(TabConstructor, closeable);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get tab from tab type and attached object is there is any.\r\n\t\t *\r\n\t\t * @param {Constructor} type Type of the tab to look for.\r\n\t\t * @param {Object} object Object attached to the tab.\r\n\t\t * @return TabElement The tab from the type specified that has the object attached to it.\r\n\t\t */\r\n\t\tgetTab : function(type, object)\r\n\t\t{\r\n\t\t\treturn this.group.getTab(type, object);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove all tabs from the container.\r\n\t\t * \r\n\t\t * @method clear\r\n\t\t */\r\n\t\tclear : function(forceAll)\r\n\t\t{\r\n\t\t\tthis.group.clear();\r\n\t\t}\r\n\t});\r\n\r\n\r\n\treturn tabs.splittable.TabContainer = TabContainer;\r\n});\ndefine('skylark-widgets-tabs/splittable/TabDualContainer',[\n\t\"skylark-widgets-base/panels/DualContainer\",\n\t\"../TabGroup\"\n],function(DualContainer,TabGroup){\n\t\"use strict\";\n\n\t/**\n\t * Tab dual container is a dual container with tabgroups.\n\t *\n\t * @class TabDualContainer\n\t * @extends {Element, TabDual}\n\t */\n\t var TabDualContainer = DualContainer.inherit({\n\t\t\"_construct\" : function(parent)\t{\n\t\t\tDualContainer.prototype._construct.call(this, parent);\n\n\t\t\tthis._elm.style.overflow = \"visible\";\n\t\t},\n\n\n\t\t/**\n\t\t * Update all tabs object data.\n\t\t *\n\t\t * @method updateMetadata\n\t\t */\n\t\tupdateMetadata : function()\n\t\t{\n\t\t\tthis._elmA.updateMetadata();\n\t\t\tthis._elmB.updateMetadata();\n\t\t},\n\n\t\t/**\n\t\t * Update all tab object views.\n\t\t *\n\t\t * @method updateObjectsView\n\t\t */\n\t\tupdateObjectsView : function()\n\t\t{\n\t\t\tthis._elmA.updateObjectsView();\n\t\t\tthis._elmB.updateObjectsView();\n\t\t},\n\n\t\t/**\n\t\t * Update all tab object selection status.\n\t\t * \n\t\t * Should be called after object selection changes.\n\t\t *\n\t\t * @method updateSelection\n\t\t */\n\t\tupdateSelection : function()\n\t\t{\n\t\t\tthis._elmA.updateSelection();\n\t\t\tthis._elmB.updateSelection();\n\t\t},\n\n\t\t/**\n\t\t * Update all tab settings.\n\t\t *\n\t\t * Should be called after editor settings are changed.\n\t\t *\n\t\t * @method updateSettings\n\t\t */\n\t\tupdateSettings : function()\n\t\t{\n\t\t\tthis._elmA.updateSettings();\n\t\t\tthis._elmB.updateSettings();\n\t\t},\n\n\t\t/**\n\t\t * Get an array with all the tabs currently active.\n\t\t *\n\t\t * @method getActiveTab\n\t\t * @return {Array} Active tabs.\n\t\t */\n\t\tgetActiveTab : function()\n\t\t{\n\t\t\tvar active = [];\n\n\t\t\tif(this._elmA instanceof TabGroup)\n\t\t\t{\n\t\t\t\tvar tab = this._elmA.getActiveTab();\n\t\t\t\tif(tab !== null)\n\t\t\t\t{\n\t\t\t\t\tactive.push(tab);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tactive = active.concat(this._elmA.getActiveTab());\n\t\t\t}\n\n\t\t\tif(this._elmB instanceof TabGroup)\n\t\t\t{\n\t\t\t\tvar tab = this._elmB.getActiveTab();\n\t\t\t\tif(tab !== null)\n\t\t\t\t{\n\t\t\t\t\tactive.push(tab);\n\t\t\t\t}\n\t\t\t\tthis._elmA.getActiveTab();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tactive = active.concat(this._elmB.getActiveTab());\n\t\t\t}\n\n\t\t\treturn active;\n\t\t},\n\n\t\t/**\n\t\t * Close the tab that is currently being shown if it is closeable.\n\t\t *\n\t\t * @method closeActual\n\t\t */\n\t\tcloseActual : function()\n\t\t{\n\t\t\tif(!(this._elmA instanceof TabGroup) || this._elmA.focused)\n\t\t\t{\n\t\t\t\tthis._elmA.closeActual();\n\t\t\t}\n\n\t\t\tif(!(this._elmB instanceof TabGroup) || this._elmB.focused)\n\t\t\t{\n\t\t\t\tthis._elmB.closeActual();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Select a specific tab from the container tab tree.\n\t\t *\n\t\t * @method selectTab\n\t\t * @param {TabElement} tab Tab to select.\n\t\t */\n\t\tselectTab : function(tab)\n\t\t{\n\t\t\tthis._elmA.selectTab(tab);\n\t\t\tthis._elmB.selectTab(tab);\n\t\t},\n\n\t\t/**\n\t\t * Select next tab from the currently focused tab group.\n\t\t *\n\t\t * @method selectNextTab\n\t\t */\n\t\tselectNextTab : function()\n\t\t{\n\t\t\tif(!(this._elmA instanceof TabGroup) || this._elmA.focused)\n\t\t\t{\n\t\t\t\tthis._elmA.selectNextTab();\n\t\t\t}\n\n\t\t\tif(!(this._elmB instanceof TabGroup) || this._elmB.focused)\n\t\t\t{\n\t\t\t\tthis._elmB.selectNextTab();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Select previous tab from the currently focused tab group.\n\t\t *\n\t\t * @method selectPreviousTab\n\t\t */\n\t\tselectPreviousTab : function()\n\t\t{\n\t\t\tif(!(this._elmA instanceof TabGroup) || this._elmA.focused)\n\t\t\t{\n\t\t\t\tthis._elmA.selectPreviousTab();\n\t\t\t}\n\n\t\t\tif(!(this._elmB instanceof TabGroup) || this._elmB.focused)\n\t\t\t{\n\t\t\t\tthis._elmB.selectPreviousTab();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add new option to tab group.\n\t\t *\n\t\t * Prefer the tab group stored on the elementA.\n\t\t *\n\t\t * @method addTab\n\t\t * @param {Constructor} TabConstructor Constructor if the TabElement to be added to the container.\n\t\t * @param {Boolean} closeable Indicates if the tab can be closed.\n\t\t */\n\t\taddTab : function(TabConstructor, closeable)\n\t\t{\n\t\t\tvar tab = this._elmA.addTab(TabConstructor, closeable);\n\t\t\tif(tab === null)\n\t\t\t{\n\t\t\t\ttab = this._elmB.addTab(TabConstructor, closeable);\n\t\t\t}\n\n\t\t\treturn tab;\n\t\t},\n\n\t\t/**\n\t\t * Get tab from tab type and attached object is there is any.\n\t\t *\n\t\t * @param {Constructor} type Type of the tab to look for.\n\t\t * @param {Object} object Object attached to the tab.\n\t\t * @return TabElement The tab from the type specified that has the object attached to it.\n\t\t */\n\t\tgetTab : function(type, object)\n\t\t{\n\t\t\tvar tab = this._elmA.getTab(type, object);\n\t\t\t\n\t\t\tif(tab === null)\n\t\t\t{\n\t\t\t\ttab = this._elmB.getTab(type, object);\n\t\t\t}\n\n\t\t\treturn tab;\n\t\t},\n\n\t\t/**\n\t\t * Remove all tabs from the container.\n\t\t * \n\t\t * @method clear\n\t\t */\n\t\tclear : function(forceAll)\n\t\t{\n\t\t\tthis._elmA.clear(forceAll);\n\t\t\tthis._elmB.clear(forceAll);\n\t\t}\n\n\t });\n\n\n\treturn tabs.splittable.TabDualContainer = TabDualContainer;\n});\ndefine('skylark-widgets-tabs/splittable/TabGroupSplit',[\n\t\"skylark-domx-geom\",\n\t\"skylark-widgets-base/dnd/DragBuffer\",\n\n\t\"skylark-widgets-base/panels/DualContainer\",\n\t\"../TabGroup\",\n\t\"../TabElement\",\n\t\"./TabContainer\",\n\t\"./TabDualContainer\",\n\t\"./TabButtonSplit\"\n],function(\n\tgeom, \n\tDragBuffer,\n\tDualContainer, \n\tTabGroup,\n\tTabElement,\n\tTabContainer, \n\tTabDualContainer,\n\tTabButtonSplit\n){\n\t\"use strict\";\n\n\t/**\n\t * A tab group contains and manages tab elements.\n\t *\n\t * A splitable tab group can be splited into two tab group allowing a more flexible interface organization during runtime.\n\t * \n\t * @class TabGroupSplit\n\t * @extends {TabGroup}\n\t * @param {Element} parent Parent element.\n\t */\n\n\tvar TabButtonSplit = TabGroup.inherit({\n\t\t\"klassName\" : \"TabButtonSplit\",\n\n\t\t\"_construct\" : function (parent, placement)\n\t\t{\n\t\t\tTabGroup.prototype._construct.call(this, parent, placement);\n\n\t\t\tvar self = this;\n\n\t\t\t/**\n\t\t\t * Border where another another tabs can be dragged to for this tab to be spplited.\n\t\t\t *\n\t\t\t * @property dragBorder\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\tthis.dragBorder = 0.2;\n\n\t\t\t/**\n\t\t\t * If true the group can be split in two.\n\t\t\t *\n\t\t\t * @property canSplit\n\t\t\t * @type {Boolean}\n\t\t\t */\n\t\t\tthis.canSplit = true;\n\n\t\t\t/**\n\t\t\t * If true the group can be collapsed.\n\t\t\t *\n\t\t\t * @property canCollapse\n\t\t\t * @type {Boolean}\n\t\t\t */\n\t\t\tthis.canCollapse = true;\n\n\t\t\t/**\n\t\t\t * DOM element to be displayed when a tab is dragged over.\n\t\t\t *\n\t\t\t * @property tabArea\n\t\t\t * @type {DOM}\n\t\t\t */\n\t\t\tthis.tabArea = document.createElement(\"div\");\n\t\t\tthis.tabArea.style.zIndex = \"1000\";\n\t\t\tthis.tabArea.style.position = \"absolute\";\n\t\t\tthis.tabArea.style.backgroundColor = \"rgba(0.0, 0.0, 0.0, 0.2)\";\n\t\t\tthis.tabArea.style.pointerEvents = \"none\";\n\n\t\t\t//Drag drop\n\t\t\tthis.tab.element.ondrop = function(event)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tvar uuid = event.dataTransfer.getData(\"uuid\");\n\t\t\t\tvar tab = DragBuffer.get(uuid);\n\n\t\t\t\tif(tab instanceof TabElement)\n\t\t\t\t{\n\t\t\t\t\tvar position = geom.pagePosition(self.element);\n\t\t\t\t\tvar x = event.clientX - (position.x || position.left);\n\t\t\t\t\tvar y = event.clientY - (position.y || position.top);\n\n\t\t\t\t\t//Left\n\t\t\t\t\tif(x < self.size.x * self.dragBorder)\n\t\t\t\t\t{\n\t\t\t\t\t\tself.split(TabGroup.LEFT).attachTab(tab);\n\t\t\t\t\t}\n\t\t\t\t\t//Right\n\t\t\t\t\telse if(x > self.size.x * (1 - self.dragBorder))\n\t\t\t\t\t{\n\t\t\t\t\t\tself.split(TabGroup.RIGHT).attachTab(tab);\n\t\t\t\t\t}\n\t\t\t\t\t//Top\n\t\t\t\t\telse if(y < self.size.y * self.dragBorder)\n\t\t\t\t\t{\n\t\t\t\t\t\tself.split(TabGroup.TOP).attachTab(tab);\n\t\t\t\t\t}\n\t\t\t\t\t//Bottom\n\t\t\t\t\telse if(y > self.size.y * (1 - self.dragBorder))\n\t\t\t\t\t{\n\t\t\t\t\t\tself.split(TabGroup.BOTTOM).attachTab(tab);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tself.attachTab(tab);\n\t\t\t\t\t}\n\n\t\t\t\t\tDragBuffer.pop(uuid);\n\t\t\t\t}\n\n\t\t\t\tif(self.tab.element.contains(self.tabArea))\n\t\t\t\t{\n\t\t\t\t\tself.tab.element.removeChild(self.tabArea);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//Drag over\n\t\t\tthis.tab.element.ondragover = function(event)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif(!(DragBuffer.buffer[0] instanceof TabElement))\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar position = geom.pagePosition(self.element);\n\t\t\t\tvar x = event.clientX - (position.x || position.left);\n\t\t\t\tvar y = event.clientY - (position.y || position.top);\n\n\t\t\t\t//Left\n\t\t\t\tif(x < self.size.x * self.dragBorder)\n\t\t\t\t{\n\t\t\t\t\tself.tabArea.style.right = null;\n\t\t\t\t\tself.tabArea.style.bottom = null;\n\t\t\t\t\tself.tabArea.style.top = \"0px\";\n\t\t\t\t\tself.tabArea.style.left = \"0px\";\n\t\t\t\t\tself.tabArea.style.width = \"50%\";\n\t\t\t\t\tself.tabArea.style.height = \"100%\";\n\n\t\t\t\t\tif(!self.tab.element.contains(self.tabArea))\n\t\t\t\t\t{\n\t\t\t\t\t\tself.tab.element.appendChild(self.tabArea);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//Right\n\t\t\t\telse if(x > self.size.x * (1 - self.dragBorder))\n\t\t\t\t{\n\t\t\t\t\tself.tabArea.style.left = null;\n\t\t\t\t\tself.tabArea.style.bottom = null;\n\t\t\t\t\tself.tabArea.style.top = \"0px\";\n\t\t\t\t\tself.tabArea.style.right = \"0px\";\n\t\t\t\t\tself.tabArea.style.width = \"50%\";\n\t\t\t\t\tself.tabArea.style.height = \"100%\";\n\n\t\t\t\t\tif(!self.tab.element.contains(self.tabArea))\n\t\t\t\t\t{\n\t\t\t\t\t\tself.tab.element.appendChild(self.tabArea);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//Top\n\t\t\t\telse if(y < self.size.y * self.dragBorder)\n\t\t\t\t{\n\t\t\t\t\tself.tabArea.style.right = null;\n\t\t\t\t\tself.tabArea.style.bottom = null;\n\t\t\t\t\tself.tabArea.style.top = \"0px\";\n\t\t\t\t\tself.tabArea.style.left = \"0px\";\n\t\t\t\t\tself.tabArea.style.width = \"100%\";\n\t\t\t\t\tself.tabArea.style.height = \"50%\";\n\n\t\t\t\t\tif(!self.tab.element.contains(self.tabArea))\n\t\t\t\t\t{\n\t\t\t\t\t\tself.tab.element.appendChild(self.tabArea);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//Bottom\n\t\t\t\telse if(y > self.size.y * (1 - self.dragBorder))\n\t\t\t\t{\n\t\t\t\t\tself.tabArea.style.top = null;\n\t\t\t\t\tself.tabArea.style.right = null;\n\t\t\t\t\tself.tabArea.style.bottom = \"0px\";\n\t\t\t\t\tself.tabArea.style.left = \"0px\";\n\t\t\t\t\tself.tabArea.style.width = \"100%\";\n\t\t\t\t\tself.tabArea.style.height = \"50%\";\n\n\t\t\t\t\tif(!self.tab.element.contains(self.tabArea))\n\t\t\t\t\t{\n\t\t\t\t\t\tself.tab.element.appendChild(self.tabArea);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(self.tab.element.contains(self.tabArea))\n\t\t\t\t\t{\n\t\t\t\t\t\tself.tab.element.removeChild(self.tabArea);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//Drag leave\n\t\t\tthis.tab.element.ondragleave = function(event)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif(self.tab.element.contains(self.tabArea))\n\t\t\t\t{\n\t\t\t\t\tself.tab.element.removeChild(self.tabArea);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Split this tab group into two new tab groups.\n\t\t *\n\t\t * @method split\n\t\t * @param {Number} direction Direction where to insert the new tab.\n\t\t * @return {TabGroupSplit} The new created tab group.\n\t\t */\n\t\tsplit : function(direction)\n\t\t{\n\t\t\tif(this.canSplit)\n\t\t\t{\n\t\t\t\tif(direction === undefined)\n\t\t\t\t{\n\t\t\t\t\tdirection = TabGroup.RIGHT;\n\t\t\t\t}\n\n\t\t\t\tvar container = new TabDualContainer();\n\t\t\t\tvar parent = this.parent;\n\t\t\t\tvar group = new TabGroupSplit(container, this.placement);\n\n\t\t\t\tif(direction === TabGroup.RIGHT)\n\t\t\t\t{\n\t\t\t\t\tcontainer.orientation = DualContainer.HORIZONTAL;\n\t\t\t\t\tcontainer.attach(this);\n\t\t\t\t\tcontainer.attach(group);\n\t\t\t\t}\n\t\t\t\telse if(direction === TabGroup.LEFT)\n\t\t\t\t{\n\t\t\t\t\tcontainer.orientation = DualContainer.HORIZONTAL;\n\t\t\t\t\tcontainer.attach(group);\n\t\t\t\t\tcontainer.attach(this);\n\t\t\t\t}\n\t\t\t\telse if(direction === TabGroup.BOTTOM)\n\t\t\t\t{\n\t\t\t\t\tcontainer.orientation = DualContainer.VERTICAL;\n\t\t\t\t\tcontainer.attach(this);\n\t\t\t\t\tcontainer.attach(group);\n\t\t\t\t}\n\t\t\t\telse if(direction === TabGroup.TOP)\n\t\t\t\t{\n\t\t\t\t\tcontainer.orientation = DualContainer.VERTICAL;\n\t\t\t\t\tcontainer.attach(group);\n\t\t\t\t\tcontainer.attach(this);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(parent instanceof TabContainer)\n\t\t\t\t{\n\t\t\t\t\tparent.attach(container);\n\t\t\t\t\tparent.updateSize();\n\t\t\t\t}\n\t\t\t\telse if(parent instanceof DualContainer)\n\t\t\t\t{\n\t\t\t\t\tif(parent.elementA === this)\n\t\t\t\t\t{\n\t\t\t\t\t\tparent.attachA(container);\n\t\t\t\t\t\tparent.updateSize();\n\t\t\t\t\t}\n\t\t\t\t\telse if(parent.elementB === this)\n\t\t\t\t\t{\n\t\t\t\t\t\tparent.attachB(container);\n\t\t\t\t\t\tparent.updateSize();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.warn(\"nunuStudio: Tab is not splitable.\");\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * If the tab is in a split container, move all the tabs to the other tabgroup in the container and close this group.\n\t\t *\n\t\t * @method collapse\n\t\t */ \n\t\tcollapse : function()\n\t\t{\n\t\t\tif(this.canCollapse)\n\t\t\t{\n\t\t\t\tif(this.parent instanceof DualContainer)\n\t\t\t\t{\n\t\t\t\t\tvar parent = this.parent.parent;\n\t\t\t\t\tvar group = this.parent.elementA === this ? this.parent.elementB : this.parent.elementA;\n\n\t\t\t\t\t//Dual container\n\t\t\t\t\tif(parent instanceof DualContainer)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(parent.elementA === this.parent)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.parent.destroy();\n\t\t\t\t\t\t\tthis.destroy();\n\t\t\t\t\t\t\tparent.attachA(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(parent.elementB === this.parent)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.parent.destroy();\n\t\t\t\t\t\t\tthis.destroy();\n\t\t\t\t\t\t\tparent.attachB(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//Tab container\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.parent.destroy();\n\t\t\t\t\t\tthis.destroy();\n\t\t\t\t\t\tparent.attach(group);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tparent.updateSize();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconsole.warn(\"nunuStudio: Tab cannot be collapsed (parent is not a dual container).\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.warn(\"nunuStudio: Tab is not collapsable.\");\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Attach tab to this group and remove it from the original group.\n\t\t *\n\t\t * @method attachTab\n\t\t * @param {TabElement} tab Tab to be moved.\n\t\t * @param {Number} insertIndex Index where to place the tab.\n\t\t */\n\t\tattachTab : function(tab, insertIndex)\n\t\t{\t\n\t\t\tvar container = tab.container;\n\t\t\tvar tab = TabGroup.prototype.attachTab.call(this, tab, insertIndex);\n\n\t\t\tif(container.options.length === 0)\n\t\t\t{\n\t\t\t\tcontainer.collapse();\n\t\t\t}\n\n\t\t\treturn tab;\n\t\t},\n\n\t\tremoveTab : function(index, dontDestroy)\n\t\t{\n\t\t\tTabGroup.prototype.removeTab.call(this, index, dontDestroy);\n\n\t\t\tif(this.options.length === 0 && dontDestroy !== true)\n\t\t\t{\n\t\t\t\tthis.collapse();\n\t\t\t}\n\t\t},\n\n\t\taddTab : function(TabConstructor, closeable)\n\t\t{\n\t\t\tvar tab = new TabConstructor(this.tab, closeable, this, this.options.length);\n\t\t\ttab.button = new TabButtonSplit(this.buttons, tab);\n\t\t\ttab.updateInterface();\n\n\t\t\tthis.options.push(tab);\n\n\t\t\tif(this.selected === null || this.options.length === 1)\n\t\t\t{\n\t\t\t\tthis.selectTab(tab);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.updateInterface();\n\t\t\t}\n\t\t\t\n\t\t\treturn tab;\n\t\t}\n\t});\n\n\n\n\treturn tabs.splittable.TabGroupSplit = TabGroupSplit;\n});\ndefine('skylark-widgets-tabs/main',[\r\n\t\"./tabs\",\r\n\t\"./TabButton\",\r\n\t\"./TabElement\",\r\n\t\"./TabGroup\",\r\n\t\"./splittable/TabButtonSplit\",\r\n\t\"./splittable/TabContainer\",\r\n\t\"./splittable/TabDualContainer\",\r\n\t\"./splittable/TabGroupSplit\"\r\n\r\n],function(tabs){\r\n\treturn tabs;\r\n});\ndefine('skylark-widgets-tabs', ['skylark-widgets-tabs/main'], function (main) { return main; });\n\n"]}